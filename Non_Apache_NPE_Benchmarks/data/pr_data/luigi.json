[
    {
        "pr": "https://github.com/spotify/luigi/pull/2617",
        "repo": "luigi",
        "number": 2617,
        "bug_id": "luigi_2617",
        "title": "Fix call to message from TypeError not working with Python 3.6 (#2616)",
        "body": "<!--- This template is optional. Please use it as a starting point to help guide PRs -->\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n<!--- Describe your changes -->\r\nThe issue is that the file luigi/contrib/s3.py uses a call to TypeError member e.message which is only available in Python 2 as opposed to e.args which is available in both Python 2 and Python 3.\r\n\r\nHere is the code snippet in luigi/contrib/s3.py from Luigi release 2.8.0 causing the issue (in fact, it seems it's the same code for all releases >= 2.7.6):\r\n```python\r\n        # At this stage, if no credentials provided, boto3 would handle their resolution for us\r\n        # For finding out about the order in which it tries to find these credentials\r\n        # please see here details\r\n        # http://boto3.readthedocs.io/en/latest/guide/configuration.html#configuring-credentials\r\n\r\n        if not (aws_access_key_id and aws_secret_access_key):\r\n            logger.debug('no credentials provided, delegating credentials resolution to boto3')\r\n\r\n        try:\r\n            self._s3 = boto3.resource('s3',\r\n                                      aws_access_key_id=aws_access_key_id,\r\n                                      aws_secret_access_key=aws_secret_access_key,\r\n                                      aws_session_token=aws_session_token,\r\n                                      **options)\r\n        except TypeError as e:\r\n            logger.error(e.message)\r\n            if 'got an unexpected keyword argument' in e.message:\r\n                raise DeprecatedBotoClientException(\r\n                    \"Now using boto3. Check that you're passing the correct arguments\")\r\n            raise\r\n```\r\n\r\nTo fix this issue, I propose to use `e.args[0]` instead of `e.message` like so:\r\n\r\n```python\r\nexcept TypeError as e:\r\n    logger.error(e.args[0])\r\n    if 'got an unexpected keyword argument' in e.args[0]:\r\n        raise DeprecatedBotoClientException(\r\n            \"Now using boto3. Check that you're passing the correct arguments\")\r\n    raise\r\n```\r\n\r\n## Motivation and Context\r\n<!--- Why is this change required? What problem does it solve? -->\r\n<!--- If it fixes an open issue, please link to the issue here. -->\r\nThe change resolves the issue, described in the Description. A link to the original issue: \r\n[https://github.com/spotify/luigi/issues/2616](https://github.com/spotify/luigi/issues/2616)\r\n\r\n## Have you tested this? If so, how?\r\n<!--- Valid responses are \"I have included unit tests.\" or --> \r\n<!--- \"I ran my jobs with this code and it works for me.\" -->\r\nI ran my jobs with this code and it works for me.\r\n\r\n<!---\r\nfor more information on how to submit valuable contributions,\r\nsee https://opensource.guide/how-to-contribute/#how-to-submit-a-contribution\r\n-->\r\n",
        "date": "2019-01-09",
        "merge_hash": "f9095d306dcf5300e0ae39ea377cf0d672f1ad1d",
        "files": [
            {
                "sha": "6caef4a096b1fc1326f00bfb57ff3019caf4ee3f",
                "filename": "luigi/contrib/s3.py",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/spotify/luigi/blob/f9095d306dcf5300e0ae39ea377cf0d672f1ad1d/luigi/contrib/s3.py",
                "raw_url": "https://github.com/spotify/luigi/raw/f9095d306dcf5300e0ae39ea377cf0d672f1ad1d/luigi/contrib/s3.py",
                "contents_url": "https://api.github.com/repos/spotify/luigi/contents/luigi/contrib/s3.py?ref=f9095d306dcf5300e0ae39ea377cf0d672f1ad1d"
            },
            {
                "sha": "6fb0c5311dcf6e8792f21d38cdabcf3b9c2727bf",
                "filename": "test/contrib/s3_test.py",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/spotify/luigi/blob/f9095d306dcf5300e0ae39ea377cf0d672f1ad1d/test/contrib/s3_test.py",
                "raw_url": "https://github.com/spotify/luigi/raw/f9095d306dcf5300e0ae39ea377cf0d672f1ad1d/test/contrib/s3_test.py",
                "contents_url": "https://api.github.com/repos/spotify/luigi/contents/test/contrib/s3_test.py?ref=f9095d306dcf5300e0ae39ea377cf0d672f1ad1d"
            }
        ]
    },
    {
        "pr": "https://github.com/spotify/luigi/pull/2323",
        "repo": "luigi",
        "number": 2323,
        "bug_id": "luigi_2323",
        "title": "Fix Python 3 TypeError in contrib.hive.HiveTableTarget.exists()",
        "body": "## Description\r\nStdout is `bytes` which is fine in Python 2 since the rest of the strings are too, but in Python 3 we need it to be `unicode` so we can do string comparisons. This fixes a long-standing bug, it seems!\r\n\r\n## Motivation and Context\r\nSee #1012.\r\n\r\n## Have you tested this? If so, how?\r\nI ran my jobs with this code and it works for me.\r\n",
        "date": "2018-01-16",
        "merge_hash": "bd10d39a284e238ac8021054de96677ff03ced04",
        "files": [
            {
                "sha": "91c84e320fa81fceb5d4c6c062b1f6ac08821fae",
                "filename": "luigi/contrib/hive.py",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/spotify/luigi/blob/bd10d39a284e238ac8021054de96677ff03ced04/luigi/contrib/hive.py",
                "raw_url": "https://github.com/spotify/luigi/raw/bd10d39a284e238ac8021054de96677ff03ced04/luigi/contrib/hive.py",
                "contents_url": "https://api.github.com/repos/spotify/luigi/contents/luigi/contrib/hive.py?ref=bd10d39a284e238ac8021054de96677ff03ced04"
            },
            {
                "sha": "4cf6655c66df875a325d4085869fa888c1a19255",
                "filename": "test/contrib/hive_test.py",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/spotify/luigi/blob/bd10d39a284e238ac8021054de96677ff03ced04/test/contrib/hive_test.py",
                "raw_url": "https://github.com/spotify/luigi/raw/bd10d39a284e238ac8021054de96677ff03ced04/test/contrib/hive_test.py",
                "contents_url": "https://api.github.com/repos/spotify/luigi/contents/test/contrib/hive_test.py?ref=bd10d39a284e238ac8021054de96677ff03ced04"
            }
        ]
    },
    {
        "pr": "https://github.com/spotify/luigi/pull/2168",
        "repo": "luigi",
        "number": 2168,
        "bug_id": "luigi_2168",
        "title": "PySparkTask fix for bytes / str type error and import error",
        "body": "## Description\r\nWith master, the following exception occurs when e.g. executing the \"pyspark_wc.py\" example: \r\n\r\n```\r\nERROR: [pid 18936] Worker Worker(salt=451680745, workers=1, host=..., username=..., pid=18936) failed    InlinePySparkWordCount()\r\nTraceback (most recent call last):\r\n  File \".../luigi/worker.py\", line 191, in run\r\n    new_deps = self._run_get_new_deps()\r\n  File \".../luigi/worker.py\", line 129, in _run_get_new_deps\r\n    task_gen = self.task.run()\r\n  File \".../luigi/contrib/spark.py\", line 281, in run\r\n    self._dump(fd)\r\n  File \".../luigi/contrib/spark.py\", line 292, in _dump\r\n    d = d.replace(b'(c__main__', \"(c\" + module_name)\r\nTypeError: can't concat bytes to str\r\n```\r\n\r\n## Motivation and Context\r\nResolves the issue with python 3.6 and python 2.7\r\n\r\n## Have you tested this? If so, how?\r\nThis stage can now be successful executed given the pyspark_wc.py file is put in the PYTHON_PATH (see #1576)\r\n\r\nResolves #1988 \r\n",
        "date": "2017-07-13",
        "merge_hash": "484095b87438a9eaad049c8d599c8993e3aea978",
        "files": [
            {
                "sha": "59f759f0881e26c8719c7957936ee8ba4024082b",
                "filename": "luigi/contrib/pyspark_runner.py",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/spotify/luigi/blob/484095b87438a9eaad049c8d599c8993e3aea978/luigi/contrib/pyspark_runner.py",
                "raw_url": "https://github.com/spotify/luigi/raw/484095b87438a9eaad049c8d599c8993e3aea978/luigi/contrib/pyspark_runner.py",
                "contents_url": "https://api.github.com/repos/spotify/luigi/contents/luigi/contrib/pyspark_runner.py?ref=484095b87438a9eaad049c8d599c8993e3aea978"
            },
            {
                "sha": "2e139da970bc70e53f6c19e7f5cc556493dfbdd0",
                "filename": "luigi/contrib/spark.py",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/spotify/luigi/blob/484095b87438a9eaad049c8d599c8993e3aea978/luigi/contrib/spark.py",
                "raw_url": "https://github.com/spotify/luigi/raw/484095b87438a9eaad049c8d599c8993e3aea978/luigi/contrib/spark.py",
                "contents_url": "https://api.github.com/repos/spotify/luigi/contents/luigi/contrib/spark.py?ref=484095b87438a9eaad049c8d599c8993e3aea978"
            },
            {
                "sha": "75dc1e38f2dc1f1307af390359dc20b744c1752b",
                "filename": "test/contrib/spark_test.py",
                "status": "modified",
                "additions": 10,
                "deletions": 0,
                "changes": 10,
                "blob_url": "https://github.com/spotify/luigi/blob/484095b87438a9eaad049c8d599c8993e3aea978/test/contrib/spark_test.py",
                "raw_url": "https://github.com/spotify/luigi/raw/484095b87438a9eaad049c8d599c8993e3aea978/test/contrib/spark_test.py",
                "contents_url": "https://api.github.com/repos/spotify/luigi/contents/test/contrib/spark_test.py?ref=484095b87438a9eaad049c8d599c8993e3aea978"
            }
        ]
    },
    {
        "pr": "https://github.com/spotify/luigi/pull/1836",
        "repo": "luigi",
        "number": 1836,
        "bug_id": "luigi_1836",
        "title": "Properly use Python3's buffer interface.",
        "body": "## Description\n\nWhen using `luigi` with Python 3 there is issue running PigTask. Because output in `track_and_progress` is both read to unicode string and copied to temporary file, it failed as conversion to string happens before writing to file. I simply moved decoding after writing to temporary file.\n## Motivation and Context\n\nWithout this change, running PigTask ended with following error:\n\n>   File \"/projects/big-data/luigi-tasks/libs/pig_task.py\", line 57, in on_execute\n>    PigTask.run(self)\n>  File \"/home/etl/.projects/big-data/lib/python3.4/site-packages/luigi/contrib/pig.py\", line 127, in run\n>    self.track_and_progress(cmd)\n>  File \"/home/etl/.projects/big-data/lib/python3.4/site-packages/luigi/contrib/pig.py\", line 149, in >track_and_progress\n>    temp_stdout.write(line)\n> TypeError: 'str' does not support the buffer interface\n\nAnd while Pig script finished successfully, `luigi` marked it as failed.\n## Have you tested this? If so, how?\n\nAfter making this change locally our Pig scripts run without issues using Python3.4\n",
        "date": "2016-09-05",
        "merge_hash": "2a5eef7a22ffc901048d87d5aa7fb583bb8aefb9",
        "files": [
            {
                "sha": "e3e5e3c9eb622e51671673d858ef44bb388fa537",
                "filename": "luigi/contrib/pig.py",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/spotify/luigi/blob/2a5eef7a22ffc901048d87d5aa7fb583bb8aefb9/luigi/contrib/pig.py",
                "raw_url": "https://github.com/spotify/luigi/raw/2a5eef7a22ffc901048d87d5aa7fb583bb8aefb9/luigi/contrib/pig.py",
                "contents_url": "https://api.github.com/repos/spotify/luigi/contents/luigi/contrib/pig.py?ref=2a5eef7a22ffc901048d87d5aa7fb583bb8aefb9"
            },
            {
                "sha": "3ae5fc16afa430e2dbd635e94ffb536cc14c52c8",
                "filename": "test/contrib/pig_test.py",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/spotify/luigi/blob/2a5eef7a22ffc901048d87d5aa7fb583bb8aefb9/test/contrib/pig_test.py",
                "raw_url": "https://github.com/spotify/luigi/raw/2a5eef7a22ffc901048d87d5aa7fb583bb8aefb9/test/contrib/pig_test.py",
                "contents_url": "https://api.github.com/repos/spotify/luigi/contents/test/contrib/pig_test.py?ref=2a5eef7a22ffc901048d87d5aa7fb583bb8aefb9"
            }
        ]
    }
]