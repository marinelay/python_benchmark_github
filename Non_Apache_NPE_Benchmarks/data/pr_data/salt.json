[
    {
        "pr": "https://github.com/saltstack/salt/pull/57839",
        "repo": "salt",
        "number": 57839,
        "bug_id": "salt_57839",
        "title": "Revert \"fix 45195 - add ignore to sysctl state and module\"",
        "body": "Reverts saltstack/salt#55719\r\n\r\nThat PR changed the signature of Linux's sysctl.persist, but did not update the persist module of any other OS.  The result is a `TypeError` exception in the sysctl state on FreeBSD, NetBSD, and OpenBSD.  On OSX the problem is worse: runtime misbehavior.\r\n\r\nFixes #57826 ",
        "date": "2020-10-05",
        "merge_hash": "95b4f6d14eb29071ff56ae238f20f748c47cdfc4",
        "files": [
            {
                "sha": "0bf4bccd0c0fdc7f5f05c0567488395705065152",
                "filename": "salt/modules/linux_sysctl.py",
                "status": "modified",
                "additions": 0,
                "deletions": 3,
                "changes": 3,
                "blob_url": "https://github.com/saltstack/salt/blob/95b4f6d14eb29071ff56ae238f20f748c47cdfc4/salt/modules/linux_sysctl.py",
                "raw_url": "https://github.com/saltstack/salt/raw/95b4f6d14eb29071ff56ae238f20f748c47cdfc4/salt/modules/linux_sysctl.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/linux_sysctl.py?ref=95b4f6d14eb29071ff56ae238f20f748c47cdfc4"
            },
            {
                "sha": "7f463bb7ab068af2d53d3c20adac5d1ebb9fdf53",
                "filename": "tests/unit/modules/test_linux_sysctl.py",
                "status": "modified",
                "additions": 0,
                "deletions": 4,
                "changes": 4,
                "blob_url": "https://github.com/saltstack/salt/blob/95b4f6d14eb29071ff56ae238f20f748c47cdfc4/tests/unit/modules/test_linux_sysctl.py",
                "raw_url": "https://github.com/saltstack/salt/raw/95b4f6d14eb29071ff56ae238f20f748c47cdfc4/tests/unit/modules/test_linux_sysctl.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/modules/test_linux_sysctl.py?ref=95b4f6d14eb29071ff56ae238f20f748c47cdfc4"
            },
            {
                "sha": "f080c9c06e9b87bfeab9ba09d3c196498ab08188",
                "filename": "tests/unit/states/test_sysctl.py",
                "status": "modified",
                "additions": 0,
                "deletions": 4,
                "changes": 4,
                "blob_url": "https://github.com/saltstack/salt/blob/95b4f6d14eb29071ff56ae238f20f748c47cdfc4/tests/unit/states/test_sysctl.py",
                "raw_url": "https://github.com/saltstack/salt/raw/95b4f6d14eb29071ff56ae238f20f748c47cdfc4/tests/unit/states/test_sysctl.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/states/test_sysctl.py?ref=95b4f6d14eb29071ff56ae238f20f748c47cdfc4"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/56306",
        "repo": "salt",
        "number": 56306,
        "bug_id": "salt_56306",
        "title": "saltnado: don't use gather_job_timeout as a timeout signal in job_not_running",
        "body": "(Summary copied from #49567.  This was intended for Neon, but appears to have not made it off of the old `neon` branch?)\n\nbecause the future was generated from tornado.gen.sleep, its eventual timer\nstill fires regardless of if the future is manually set with set_result. When\nset_result is called twice (once manually by saltnado, once by tornado call_later),\na stacktrace like so is thrown:\n\n```\n[ERROR   ] Uncaught exception POST / (::1)\nTraceback (most recent call last):\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/web.py\", line 1369, in _stack_context_handle_exception\n    raise_exc_info((type, value, traceback))\n  File \"<string>\", line 3, in raise_exc_info\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/stack_context.py\", line 314, in wrapped\n    ret = fn(*args, **kwargs)\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/gen.py\", line 771, in later\n    f.set_result(None)\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/concurrent.py\", line 254, in set_result\n    self._set_done()\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/concurrent.py\", line 298, in _set_done\n    for cb in self._callbacks:\nTypeError: 'NoneType' object is not iterable\n\n```\nThis patch attempts to fix that. @jacksontj would appreciate a review I'm not hugely familiar with the saltnado/tornado code here.\n\n### What does this PR do?\nfixes a stack thrown after every call.\n\nfixes https://github.com/saltstack/salt/issues/49572\n\n### Tests written?\nNo\n\n### Commits signed with GPG?\nNo\n\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\n\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.",
        "date": "2020-09-29",
        "merge_hash": "4e3082bb8633f9e532d59bd99354b4c58fc353c9",
        "files": [
            {
                "sha": "2853f448bc055b5da8f5612c0886d709c06e3325",
                "filename": "salt/netapi/rest_tornado/saltnado.py",
                "status": "modified",
                "additions": 11,
                "deletions": 18,
                "changes": 29,
                "blob_url": "https://github.com/saltstack/salt/blob/4e3082bb8633f9e532d59bd99354b4c58fc353c9/salt/netapi/rest_tornado/saltnado.py",
                "raw_url": "https://github.com/saltstack/salt/raw/4e3082bb8633f9e532d59bd99354b4c58fc353c9/salt/netapi/rest_tornado/saltnado.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/netapi/rest_tornado/saltnado.py?ref=4e3082bb8633f9e532d59bd99354b4c58fc353c9"
            },
            {
                "sha": "e3ad8820d30f81a405d11527512baa69a698c2c8",
                "filename": "tests/integration/netapi/rest_tornado/test_app.py",
                "status": "modified",
                "additions": 6,
                "deletions": 11,
                "changes": 17,
                "blob_url": "https://github.com/saltstack/salt/blob/4e3082bb8633f9e532d59bd99354b4c58fc353c9/tests/integration/netapi/rest_tornado/test_app.py",
                "raw_url": "https://github.com/saltstack/salt/raw/4e3082bb8633f9e532d59bd99354b4c58fc353c9/tests/integration/netapi/rest_tornado/test_app.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/netapi/rest_tornado/test_app.py?ref=4e3082bb8633f9e532d59bd99354b4c58fc353c9"
            },
            {
                "sha": "7e81c542cb145a953e87b34ce59d36654e5512d5",
                "filename": "tests/unit/netapi/test_rest_tornado.py",
                "status": "modified",
                "additions": 21,
                "deletions": 32,
                "changes": 53,
                "blob_url": "https://github.com/saltstack/salt/blob/4e3082bb8633f9e532d59bd99354b4c58fc353c9/tests/unit/netapi/test_rest_tornado.py",
                "raw_url": "https://github.com/saltstack/salt/raw/4e3082bb8633f9e532d59bd99354b4c58fc353c9/tests/unit/netapi/test_rest_tornado.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/netapi/test_rest_tornado.py?ref=4e3082bb8633f9e532d59bd99354b4c58fc353c9"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/58272",
        "repo": "salt",
        "number": 58272,
        "bug_id": "salt_58272",
        "title": "Fix x509 CRL creation (fixes #54867)",
        "body": "### What does this PR do?\r\n\r\nFixes this error:\r\n\r\n```\r\n     Comment: An exception occurred in this state: Traceback (most recent call last):                                 \r\n                File \"/usr/local/lib/python3.7/site-packages/salt/state.py\", line 2154, in call                       \r\n                  *cdata[\"args\"], **cdata[\"kwargs\"]                                                                   \r\n                File \"/usr/local/lib/python3.7/site-packages/salt/loader.py\", line 2085, in wrapper                   \r\n                  return f(*args, **kwargs)                                                                           \r\n                File \"/usr/local/lib/python3.7/site-packages/salt/states/x509.py\", line 828, in crl_managed           \r\n                  current = __salt__[\"x509.read_crl\"](crl=name)                                                       \r\n                File \"/usr/local/lib/python3.7/site-packages/salt/modules/x509.py\", line 678, in read_crl             \r\n                  crltempfile.write(salt.utils.stringutils.to_str(text))                                              \r\n                File \"/usr/local/lib/python3.7/tempfile.py\", line 481, in func_wrapper                                \r\n                  return func(*args, **kwargs)                                                                        \r\n              TypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\n\r\n### What issues does this PR fix or reference?\r\nFixes: #54867\r\n\r\n### Merge requirements satisfied?\r\n**[NOTICE] Bug fixes or features added to Salt require tests.**\r\n<!-- Please review the [test documentation](https://docs.saltstack.com/en/master/topics/tutorials/writing_tests.html) for details on how to implement tests into Salt's test suite. -->\r\n- [X] Docs (no updates were necessary)\r\n- [X] Changelog - https://docs.saltstack.com/en/master/topics/development/changelog.html\r\n- [X] Tests written/updated\r\n\r\nNote: contrary to the testing guide, this is the proper command to run the tests:\r\n\r\n```shell\r\nnox -e 'pytest-zeromq-m2crypto-3(coverage=False)' -- --run-slow tests/unit/modules/test_x509.py tests/integration/states/test_x509.py\r\n\r\n[\u2026]\r\n\r\ncollected 30 items                                                                                                   \r\n\r\ntests/unit/modules/test_x509.py ......................................................................................\r\n..................................................+++++\r\n....................................................+++++\r\n.....\r\ntests/integration/states/test_x509.py ..................\r\n\r\n=========================================== 30 passed in 126.97s (0:02:06) ===========================================\r\nnox > Session pytest-parametrized-3(crypto='m2crypto', transport='zeromq', coverage=False) was successful.\r\nnox > Ran multiple sessions:\r\nnox > * pytest-zeromq-m2crypto-3(coverage=False): success\r\nnox > * pytest-parametrized-3(crypto='m2crypto', transport='zeromq', coverage=False): success\r\n```\r\n\r\n### Commits signed with GPG?\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/master/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "date": "2020-08-24",
        "merge_hash": "0a1be829ae6698b23f4baab2ecc4d7533aaf6f4a",
        "files": [
            {
                "sha": "32b9f89e36bb0ecb94252541ebc6b5fc082c044d",
                "filename": "salt/modules/x509.py",
                "status": "modified",
                "additions": 21,
                "deletions": 23,
                "changes": 44,
                "blob_url": "https://github.com/saltstack/salt/blob/0a1be829ae6698b23f4baab2ecc4d7533aaf6f4a/salt/modules/x509.py",
                "raw_url": "https://github.com/saltstack/salt/raw/0a1be829ae6698b23f4baab2ecc4d7533aaf6f4a/salt/modules/x509.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/x509.py?ref=0a1be829ae6698b23f4baab2ecc4d7533aaf6f4a"
            },
            {
                "sha": "150a0f2e748f1825d54125b0d35db8ef21b00bfa",
                "filename": "tests/integration/states/test_x509.py",
                "status": "modified",
                "additions": 34,
                "deletions": 29,
                "changes": 63,
                "blob_url": "https://github.com/saltstack/salt/blob/0a1be829ae6698b23f4baab2ecc4d7533aaf6f4a/tests/integration/states/test_x509.py",
                "raw_url": "https://github.com/saltstack/salt/raw/0a1be829ae6698b23f4baab2ecc4d7533aaf6f4a/tests/integration/states/test_x509.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/states/test_x509.py?ref=0a1be829ae6698b23f4baab2ecc4d7533aaf6f4a"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/56699",
        "repo": "salt",
        "number": 56699,
        "bug_id": "salt_56699",
        "title": "Fixes minion returning list in chocolatey module",
        "body": "### What does this PR do?\r\nChanges CaseInsensitiveDict implementation from requests to salt's implementation in utils.data\r\n\r\n### What issues does this PR fix or reference?\r\nFixes: #54899\r\n\r\n### Previous Behavior\r\nThe CaseInsensitiveDict cannot be serialized by msgpack. The minion would encounter a TypeError and nothing would be returned to the master.\r\n\r\n### New Behavior\r\nmsgpack is able to serialize the output from list and the minion successfully returns the response to the master.\r\n\r\n### Merge requirements satisfied?\r\n**[NOTICE] Bug fixes or features added to Salt require tests.**\r\n<!-- Please review the [test documentation](https://docs.saltstack.com/en/master/topics/tutorials/writing_tests.html) for details on how to implement tests into Salt's test suite. -->\r\n- [ ] Docs\r\n- [ ] Changelog - https://docs.saltstack.com/en/latest/topics/development/changelog.html\r\n- [x] Tests written/updated\r\n\r\n### Commits signed with GPG?\r\nYes\r\n",
        "date": "2020-04-23",
        "merge_hash": "f0183e0f662bc20d557a2e370d00c5671b356732",
        "files": [
            {
                "sha": "4d6f0780def71ac65f670abe737e39a72b07f474",
                "filename": "salt/modules/chocolatey.py",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/saltstack/salt/blob/f0183e0f662bc20d557a2e370d00c5671b356732/salt/modules/chocolatey.py",
                "raw_url": "https://github.com/saltstack/salt/raw/f0183e0f662bc20d557a2e370d00c5671b356732/salt/modules/chocolatey.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/chocolatey.py?ref=f0183e0f662bc20d557a2e370d00c5671b356732"
            },
            {
                "sha": "517c22cfe82043b38d80851cd70c2a6b3727da78",
                "filename": "tests/integration/modules/test_chocolatey.py",
                "status": "added",
                "additions": 33,
                "deletions": 0,
                "changes": 33,
                "blob_url": "https://github.com/saltstack/salt/blob/f0183e0f662bc20d557a2e370d00c5671b356732/tests/integration/modules/test_chocolatey.py",
                "raw_url": "https://github.com/saltstack/salt/raw/f0183e0f662bc20d557a2e370d00c5671b356732/tests/integration/modules/test_chocolatey.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/modules/test_chocolatey.py?ref=f0183e0f662bc20d557a2e370d00c5671b356732"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/52936",
        "repo": "salt",
        "number": 52936,
        "bug_id": "salt_52936",
        "title": "Fix python3 get imageid",
        "body": "### What does this PR do?\r\nExpose, test and fix a python 3 salt-cloud bug when using an image not starting with \"ami-\"\r\n\r\n### What issues does this PR fix or reference?\r\nNone\r\n\r\n### Previous Behavior\r\n       Traceback (most recent call last):\r\n         File \"/usr/lib/python3/dist-packages/mock/mock.py\", line 1305, in patched\r\n           return func(*args, **keywargs)\r\n         File \"/home/nicolasc/salt/tests/unit/cloud/clouds/test_ec2.py\", line 104, in test__get_imageid_by_name\r\n           imageid = ec2._get_imageid_from_image_name('CentOS Linux 7*')\r\n         File \"/home/nicolasc/salt/salt/cloud/clouds/ec2.py\", line 1237, in _get_imageid_from_image_name\r\n           lambda i, j: salt.utils.compat.cmp(_t(i), _t(j))\r\n       TypeError: sorted expected 1 arguments, got 2\r\n\r\n### New Behavior\r\nIt works\u2122\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes\r\n\r\nPS: I almost forgot to pick the right branch to merge. I feel like it's easy to overlook.",
        "date": "2019-06-26",
        "merge_hash": "10688936656eb3270f76fc57abac0dd45b0439cb",
        "files": [
            {
                "sha": "40d68e16640c81b15cc594a30cb1267fa0756d90",
                "filename": "salt/cloud/clouds/ec2.py",
                "status": "modified",
                "additions": 15,
                "deletions": 8,
                "changes": 23,
                "blob_url": "https://github.com/saltstack/salt/blob/10688936656eb3270f76fc57abac0dd45b0439cb/salt/cloud/clouds/ec2.py",
                "raw_url": "https://github.com/saltstack/salt/raw/10688936656eb3270f76fc57abac0dd45b0439cb/salt/cloud/clouds/ec2.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/cloud/clouds/ec2.py?ref=10688936656eb3270f76fc57abac0dd45b0439cb"
            },
            {
                "sha": "13603ae38965c910e2e136f1a57f13bf4182e3ce",
                "filename": "tests/unit/cloud/clouds/test_ec2.py",
                "status": "modified",
                "additions": 17,
                "deletions": 0,
                "changes": 17,
                "blob_url": "https://github.com/saltstack/salt/blob/10688936656eb3270f76fc57abac0dd45b0439cb/tests/unit/cloud/clouds/test_ec2.py",
                "raw_url": "https://github.com/saltstack/salt/raw/10688936656eb3270f76fc57abac0dd45b0439cb/tests/unit/cloud/clouds/test_ec2.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/cloud/clouds/test_ec2.py?ref=10688936656eb3270f76fc57abac0dd45b0439cb"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/56381",
        "repo": "salt",
        "number": 56381,
        "bug_id": "salt_56381",
        "title": "Fix 54501",
        "body": "### What does this PR do?\r\nWhen state.py runs the _run_check function to validate unless/onlyif, the resulting output can include a list as a comment:\r\n```\r\n{'result': True, 'comment': ['unless condition is true'], 'skip_watch': True}\r\n```\r\nThis list was breaking the state output when test=True with retry, which assumed any existing comments would already be strings. This PR add `six.text_type` casting to to string formatting to support other input types.\r\n\r\n\r\n### What issues does this PR fix or reference?\r\n#54501\r\n\r\n### Previous Behavior\r\nRunning a state with included unless and retry with `test=True` would result in crash:\r\n```\r\n Traceback (most recent call last):\r\n         File \"/root/gits/salt/tests/unit/test_state.py\", line 265, in test_verify_retry_parsing\r\n           self.assertDictContainsSubset(expected_result, state_obj.call(low_data))\r\n         File \"/root/gits/salt/salt/utils/decorators/state.py\", line 30, in _func\r\n           result = func(*args, **kwargs)\r\n         File \"/root/gits/salt/salt/state.py\", line 2084, in call\r\n           low['retry']['splay'])])\r\n       TypeError: sequence item 0: expected str instance, list found\r\n```\r\n\r\n### New Behavior\r\nOutput is rendered as expected:\r\n```\r\n['unless condition is true']  The state would be retried every 5 'seconds (with a splay of up to 0 seconds) a maximum of 5 times or until a result of True is returned\r\n```\r\n\r\n### Tests written?\r\nYes\r\n\r\n### Commits signed with GPG?\r\nNo",
        "date": "2020-04-18",
        "merge_hash": "baf83190f81e92981972f8128ed4cadc248c9b94",
        "files": [
            {
                "sha": "627bf0db68f17166184ca681560b67e45896fbe5",
                "filename": "salt/state.py",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/saltstack/salt/blob/baf83190f81e92981972f8128ed4cadc248c9b94/salt/state.py",
                "raw_url": "https://github.com/saltstack/salt/raw/baf83190f81e92981972f8128ed4cadc248c9b94/salt/state.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/state.py?ref=baf83190f81e92981972f8128ed4cadc248c9b94"
            },
            {
                "sha": "696e54924b16bb654ac5620a10ab31ba0fed20a6",
                "filename": "tests/unit/test_state.py",
                "status": "modified",
                "additions": 42,
                "deletions": 0,
                "changes": 42,
                "blob_url": "https://github.com/saltstack/salt/blob/baf83190f81e92981972f8128ed4cadc248c9b94/tests/unit/test_state.py",
                "raw_url": "https://github.com/saltstack/salt/raw/baf83190f81e92981972f8128ed4cadc248c9b94/tests/unit/test_state.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/test_state.py?ref=baf83190f81e92981972f8128ed4cadc248c9b94"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/56094",
        "repo": "salt",
        "number": 56094,
        "bug_id": "salt_56094",
        "title": "Fix type error in TornadoImporter",
        "body": "### What does this PR do?\r\n\r\nFixes tracebacks in salt loader because the find_module method of TornadoImporter required 3 arguments, path should default to None.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/kitchen/testing/salt/loader.py\", line 1607, in _load_module\r\n    mod = imp.load_module(mod_namespace, fn_, fpath, desc)\r\n  File \"/tmp/kitchen/testing/salt/grains/esxi.py\", line 16, in <module>\r\n    import salt.modules.vsphere\r\n  File \"/tmp/kitchen/testing/salt/modules/vsphere.py\", line 222, in <module>\r\n    import jsonschema\r\n  File \"/tmp/kitchen/testing/.nox/runtests-parametrized-2-7-coverage-true-crypto-none-transport-zeromq/lib/python2.7/site-packages/jsonschema/__init__.py\", line 18, in <module>\r\n    from jsonschema.validators import (\r\n  File \"/tmp/kitchen/testing/.nox/runtests-parametrized-2-7-coverage-true-crypto-none-transport-zeromq/lib/python2.7/site-packages/jsonschema/validators.py\", line 170, in <module>\r\n    meta_schema=_utils.load_schema(\"draft3\"),\r\n  File \"/tmp/kitchen/testing/.nox/runtests-parametrized-2-7-coverage-true-crypto-none-transport-zeromq/lib/python2.7/site-packages/jsonschema/_utils.py\", line 57, in load_schema\r\n    data = pkgutil.get_data('jsonschema', \"schemas/{0}.json\".format(name))\r\n  File \"/usr/lib64/python2.7/pkgutil.py\", line 578, in get_data\r\n    loader = get_loader(package)\r\n  File \"/usr/lib64/python2.7/pkgutil.py\", line 464, in get_loader\r\n    return find_loader(fullname)\r\n  File \"/usr/lib64/python2.7/pkgutil.py\", line 475, in find_loader\r\n    loader = importer.find_module(fullname)\r\nTypeError: find_module() takes exactly 3 arguments (2 given)\r\n```\r\n\r\n### What issues does this PR fix or reference?\r\n\r\n#56063 \r\n\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "date": "2020-03-10",
        "merge_hash": "211c88bfbc8158b7ca16e429b366e403edfd39f3",
        "files": [
            {
                "sha": "117523b1d26862a80ff51dae861e02ea8c0d89f5",
                "filename": "salt/__init__.py",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/saltstack/salt/blob/211c88bfbc8158b7ca16e429b366e403edfd39f3/salt/__init__.py",
                "raw_url": "https://github.com/saltstack/salt/raw/211c88bfbc8158b7ca16e429b366e403edfd39f3/salt/__init__.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/__init__.py?ref=211c88bfbc8158b7ca16e429b366e403edfd39f3"
            },
            {
                "sha": "3080147d9e751f96df4b5a07f43bcab4a0ebff81",
                "filename": "tests/unit/test_ext.py",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/saltstack/salt/blob/211c88bfbc8158b7ca16e429b366e403edfd39f3/tests/unit/test_ext.py",
                "raw_url": "https://github.com/saltstack/salt/raw/211c88bfbc8158b7ca16e429b366e403edfd39f3/tests/unit/test_ext.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/test_ext.py?ref=211c88bfbc8158b7ca16e429b366e403edfd39f3"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/45062",
        "repo": "salt",
        "number": 45062,
        "bug_id": "salt_45062",
        "title": "Fix cherrypy with py3",
        "body": "### What does this PR do?\r\n\r\nFix salt-api to work with python3\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nFixes https://github.com/saltstack/salt/issues/43919 \"Error B\"\r\n\r\n### Previous Behavior\r\nJust a login result into a traceback:\r\n\r\n> curl -sSk http://localhost:9080/login -H 'Accept: application/x-yaml' -d username=admin -d eauth=auto\r\n\r\n```\r\n2017-12-18 11:56:49,586 [cherrypy.error.140069956313496][ERROR   ][15380] [18/Dec/2017:11:56:49] HTTP \r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/cherrypy/_cprequest.py\", line 663, in respond\r\n    self.body.process()\r\n  File \"/usr/lib/python3.6/site-packages/cherrypy/_cpreqbody.py\", line 982, in process\r\n    super(RequestBody, self).process()\r\n  File \"/usr/lib/python3.6/site-packages/cherrypy/_cpreqbody.py\", line 561, in process\r\n    proc(self)\r\n  File \"/usr/lib/python3.6/site-packages/salt/netapi/rest_cherrypy/app.py\", line 836, in urlencoded_processor\r\n    entity.fp.read(fp_out=contents)\r\n  File \"/usr/lib/python3.6/site-packages/cherrypy/_cpreqbody.py\", line 841, in read\r\n    fp_out.write(data)\r\nTypeError: string argument expected, got 'bytes'\r\n```\r\n\r\n### New Behavior\r\n\r\nIt does not crash anymore\r\n\r\n### Tests written?\r\n\r\nYes - adapted unit tests to reflect reality. Unit tests now uses six.BytesIO to return data for cherrypy.\r\nBytesIO maps to StringIO on case of python2.\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n",
        "date": "2017-12-20",
        "merge_hash": "d42b98a7775041edf0e835cfb1ad1e37df9c8831",
        "files": [
            {
                "sha": "3f0dc4d564413b1b087c40aa983216fe4eb99e1d",
                "filename": "salt/netapi/rest_cherrypy/app.py",
                "status": "modified",
                "additions": 7,
                "deletions": 18,
                "changes": 25,
                "blob_url": "https://github.com/saltstack/salt/blob/d42b98a7775041edf0e835cfb1ad1e37df9c8831/salt/netapi/rest_cherrypy/app.py",
                "raw_url": "https://github.com/saltstack/salt/raw/d42b98a7775041edf0e835cfb1ad1e37df9c8831/salt/netapi/rest_cherrypy/app.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/netapi/rest_cherrypy/app.py?ref=d42b98a7775041edf0e835cfb1ad1e37df9c8831"
            },
            {
                "sha": "d8bfe16199395659a0168290a22c2fdbed526f4b",
                "filename": "tests/support/cptestcase.py",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/saltstack/salt/blob/d42b98a7775041edf0e835cfb1ad1e37df9c8831/tests/support/cptestcase.py",
                "raw_url": "https://github.com/saltstack/salt/raw/d42b98a7775041edf0e835cfb1ad1e37df9c8831/tests/support/cptestcase.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/support/cptestcase.py?ref=d42b98a7775041edf0e835cfb1ad1e37df9c8831"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/52980",
        "repo": "salt",
        "number": 52980,
        "bug_id": "salt_52980",
        "title": "logstash_mod makePickle doesn't convert to bytes",
        "body": "### What does this PR do?\r\nAdds missing `to_bytes` conversion in log\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/issues/51123\r\n\r\n### Previous Behavior\r\n```\r\n--- Logging error ---\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/logging/handlers.py\", line 634, in emit\r\n    self.send(s)\r\n  File \"/usr/lib/python3.6/logging/handlers.py\", line 692, in send\r\n    self.sock.sendto(s, self.address)\r\nTypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\n### New Behavior\r\nNo stacktrace, message sent to logstash\r\n\r\n### Tests written?\r\nNo\r\n\r\n",
        "date": "2020-01-16",
        "merge_hash": "1a0b0f7d8727fa2a547d514585081dac4680b264",
        "files": [
            {
                "sha": "5f003446a237be79bf9f862d91d22d563082fdbe",
                "filename": "salt/log/handlers/logstash_mod.py",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/saltstack/salt/blob/1a0b0f7d8727fa2a547d514585081dac4680b264/salt/log/handlers/logstash_mod.py",
                "raw_url": "https://github.com/saltstack/salt/raw/1a0b0f7d8727fa2a547d514585081dac4680b264/salt/log/handlers/logstash_mod.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/log/handlers/logstash_mod.py?ref=1a0b0f7d8727fa2a547d514585081dac4680b264"
            },
            {
                "sha": "40a96afc6ff09d58a702b76e3f7dd412fe975e26",
                "filename": "tests/integration/logging/handlers/__init__.py",
                "status": "added",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/saltstack/salt/blob/1a0b0f7d8727fa2a547d514585081dac4680b264/tests/integration/logging/handlers/__init__.py",
                "raw_url": "https://github.com/saltstack/salt/raw/1a0b0f7d8727fa2a547d514585081dac4680b264/tests/integration/logging/handlers/__init__.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/logging/handlers/__init__.py?ref=1a0b0f7d8727fa2a547d514585081dac4680b264"
            },
            {
                "sha": "d73b37ec59d79add499cd7ea8f4e5afcba7d2178",
                "filename": "tests/integration/logging/handlers/test_logstash_mod.py",
                "status": "added",
                "additions": 92,
                "deletions": 0,
                "changes": 92,
                "blob_url": "https://github.com/saltstack/salt/blob/1a0b0f7d8727fa2a547d514585081dac4680b264/tests/integration/logging/handlers/test_logstash_mod.py",
                "raw_url": "https://github.com/saltstack/salt/raw/1a0b0f7d8727fa2a547d514585081dac4680b264/tests/integration/logging/handlers/test_logstash_mod.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/logging/handlers/test_logstash_mod.py?ref=1a0b0f7d8727fa2a547d514585081dac4680b264"
            },
            {
                "sha": "8ba2bd85df1bad17202487435e7dd01d00bfa377",
                "filename": "tests/unit/test_module_names.py",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/saltstack/salt/blob/1a0b0f7d8727fa2a547d514585081dac4680b264/tests/unit/test_module_names.py",
                "raw_url": "https://github.com/saltstack/salt/raw/1a0b0f7d8727fa2a547d514585081dac4680b264/tests/unit/test_module_names.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/test_module_names.py?ref=1a0b0f7d8727fa2a547d514585081dac4680b264"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/54954",
        "repo": "salt",
        "number": 54954,
        "bug_id": "salt_54954",
        "title": "(Backport 50125, 50671, 51973, 52412, 52744, 52844, 54024, 54379) Add root and no_recommends parameters in the public interface for Zypper and RPM (lowpkg)",
        "body": "### What does this PR do?\r\n\r\n(From #50125)\r\nProvides a new root parameter in the public interfaces for rpm and zypper\r\n\r\n(From #50671)\r\nIn _get_configured_repos if the directory where the repositories\r\nare stored is not found, an log error is emitted.\r\n\r\nMost of the times this is indeed an indication of an error, but is\r\nnot always the case. For example, when we are creating a chroot\r\nenvironment we do not need to create this directory, as is generated\r\nby zypper when a new repository is added.\r\n\r\nThis patch demote the error to a warning, as this directory will\r\nbe present eventually is most situations after the first call to\r\nzypper.\r\n\r\n(From #51973)\r\nThe virtual module 'pkg' is heavily used by other states, like the\r\n'pkg' state, so differences in the signature of public functions\r\ncan generate errors like:\r\n\r\nTypeError: xxx() got an unexpected keyword argument 'yyy'\r\n\r\nThe fix is to add the parameter 'yyy' into all versions of the\r\nfunction 'xxx()' in all the 'pkg' virtual modules, but this\r\napproach is cumbersome and not very resilient, as any refactoring\r\non the public interface or in the pkg state module will break\r\nagain the already agreed contract.\r\n\r\nThis patch append **kwarg in most of the public methods on virtual\r\nmodule pkg where it is missing, fixing the described issue and\r\nmaking more easy the refactoring of the code.\r\n\r\nAlso do the same for 'lowpkg'\r\n\r\n(From #52412)\r\n\r\nIn the openSUSE family we have several kind of packages, like\r\npatterns, patches and products. Currently we can use the `pkg`\r\nstate and the `pkg` module to install them, but as they are not\r\nlisted under any `rpm` command, the module and the state will\r\nreport a Fail.\r\n\r\nThis patch updates the zypperpkg `list_pkgs` to explicitly include\r\nthis kind of objects under the list, so the rest of the commands\r\nfrom the same execution module (install, update, etc) will report\r\nthe correct restul at the end.\r\n\r\nBecause the way that the `installed` state from `pkg` is designed,\r\nwe cannot be implicit about the kind of objects that we are\r\ninstalling, so we need to indicate in the SLS that at least one\r\nobject is a pattern or a patch:\r\n\r\n```yaml\r\n  example:\r\n    pkg.installed:\r\n      - name: pattern:SUSE-MicroOS\r\n      - includes: [pattern]\r\n```\r\n\r\nThe `includes` parameter will be passed to the `list_pkgs` from\r\nthe zypper execution module, that will return the package list\r\nusing RPM (for packages) and zypper (for patterns). This more\r\ncomplete report will be used in `pkg.installed` to identify the\r\ncorrect installation of the new object.\r\n\r\nCloses #52402\r\n\r\n(From #52744)\r\n\r\nSome patters are non-visible, and cannot be detected via\r\n\r\n   zypper se -t pattern\r\n\r\nunless we know the name.\r\n\r\nWhen we are listing all installed patterns, we still do not know\r\nthe names of the patterns, so we need to use a different approach.\r\n\r\nThis patch use `rpm -q --provides --whatprovides` search to detect\r\nthe non-visible patters, and complete the result for\r\n`list_installed_patterns`.\r\n\r\n(From #52844)\r\n\r\nThe `rpm -q --provides --whatprovides 'pattern()' command return\r\nerror code 1 when any pattern is present. This patch ignore the\r\nreturn error code, as a not found pattern is not an error.\r\n\r\n(From #54024)\r\n\r\nThe cache from pkg.list_pkgs for the zypper installer is too aggresive.\r\nSome parameters will deliver different package lists, like root and\r\nincludes. The current cache do not take those parameters into\r\nconsideration, so the next time that this function is called, the last\r\nlist of packages will be returned, without checking if the current\r\nparameters match the old one.\r\n\r\nThis patch create a different cache key for each parameter combination,\r\nso the cached data will be separated too.\r\n\r\n(From #54379)\r\n\r\nWhen a patch is installed via advisory_ids, we do not want to change the\r\nbehavior of list_pkgs, via the includes field.\r\n\r\nCurrently, if a patch is installed via advisory_ids (state\r\npkg.patch_installed), it will call zypperpkg.install with this parameter\r\ninside kwargs. This parameter is parsed by pkg_resource.parse_targets,\r\nand the prefix `patch:` will be added very early, just before taking the\r\nlist of the current packages.\r\n\r\nThis last step will change the behavior of list_pkgs, as all the other\r\npatches will be listed.\r\n\r\nThis sound OK except when we want to maintain the old behavior, when\r\npatches are not listed in the `install` function by default.\r\n\r\nThis patch will add the `patch:` prefix in the list of targets later,\r\nonce we have the list of packages, restoring the old behavior.\r\n\r\nNote that we can still install a patch as a normal package, if we add\r\nthe prefix in the name before calling `install`, and we do not use the\r\n`advisory_ids` field.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nNew feature\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n(backport #50125, #50671, #51973, #52412, #52744, #52844 and #54024, already merged in develop)\r\n\r\n(backport #54379 from develop, under review)",
        "date": "2020-05-19",
        "merge_hash": "3219b2d66717be52229e5739b079fdbbce997e7c",
        "files": [
            {
                "sha": "3210ed6bddfbb5e4bc5fb1c672b453e8499e84ed",
                "filename": "salt/modules/zypperpkg.py",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/saltstack/salt/blob/3219b2d66717be52229e5739b079fdbbce997e7c/salt/modules/zypperpkg.py",
                "raw_url": "https://github.com/saltstack/salt/raw/3219b2d66717be52229e5739b079fdbbce997e7c/salt/modules/zypperpkg.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/zypperpkg.py?ref=3219b2d66717be52229e5739b079fdbbce997e7c"
            },
            {
                "sha": "7a9e8e3eda02ca65b61c6060e395479e5c86b328",
                "filename": "tests/unit/modules/test_zypperpkg.py",
                "status": "modified",
                "additions": 8,
                "deletions": 8,
                "changes": 16,
                "blob_url": "https://github.com/saltstack/salt/blob/3219b2d66717be52229e5739b079fdbbce997e7c/tests/unit/modules/test_zypperpkg.py",
                "raw_url": "https://github.com/saltstack/salt/raw/3219b2d66717be52229e5739b079fdbbce997e7c/tests/unit/modules/test_zypperpkg.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/modules/test_zypperpkg.py?ref=3219b2d66717be52229e5739b079fdbbce997e7c"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/54240",
        "repo": "salt",
        "number": 54240,
        "bug_id": "salt_54240",
        "title": "Fix TypeError python3 in get_image_id ec2 cloud",
        "body": "### What does this PR do?\r\nFixes issue when using an aws filter for the image like so:\r\n\r\n```\r\namazon:\r\n  provider: amazon\r\n  image: 'salt/test/*'\r\n```\r\n\r\nWhen you try to build the vm with `salt-cloud -p profile_name ch3ll-vm` you see this error on python3:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/kitchen/testing/salt/cloud/cli.py\", line 281, in run\r\n    self.config.get('names')\r\n  File \"/tmp/kitchen/testing/salt/cloud/__init__.py\", line 1432, in run_profile\r\n    ret[name] = self.create(vm_)\r\n  File \"/tmp/kitchen/testing/salt/cloud/__init__.py\", line 1253, in create\r\n    output = self.clouds[func](vm_)\r\n  File \"/tmp/kitchen/testing/salt/cloud/clouds/ec2.py\", line 2634, in create\r\n    data, vm_ = request_instance(vm_, location)\r\n  File \"/tmp/kitchen/testing/salt/cloud/clouds/ec2.py\", line 1803, in request_instance\r\n    image_id = get_imageid(vm_)\r\n  File \"/tmp/kitchen/testing/salt/cloud/clouds/ec2.py\", line 1231, in get_imageid\r\n    lambda i, j: salt.utils.compat.cmp(_t(i), _t(j))\r\nTypeError: must use keyword argument for key function\r\n```\r\n\r\nThis is because sorted requires the key argument in python3. The functools library has the ability to make this python2/python3 compatible included in this PR.\r\n\r\n### Previous Behavior\r\nCould not create a VM with an image using an AWS filter.\r\n\r\n### New Behavior\r\nCreate a VM with an image using an AWS filter.\r\n\r\n### Tests written?\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "date": "2019-08-20",
        "merge_hash": "ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0",
        "files": [
            {
                "sha": "e9ce08cd8bffa0306167feefd9cd192ff66d0ab5",
                "filename": "salt/cloud/clouds/ec2.py",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/saltstack/salt/blob/ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0/salt/cloud/clouds/ec2.py",
                "raw_url": "https://github.com/saltstack/salt/raw/ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0/salt/cloud/clouds/ec2.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/cloud/clouds/ec2.py?ref=ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0"
            },
            {
                "sha": "771b67857e2fcd30ae756d3b542f92d7c281847f",
                "filename": "tests/integration/files/conf/cloud.profiles.d/ec2.conf",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/saltstack/salt/blob/ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0/tests/integration/files/conf/cloud.profiles.d/ec2.conf",
                "raw_url": "https://github.com/saltstack/salt/raw/ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0/tests/integration/files/conf/cloud.profiles.d/ec2.conf",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/files/conf/cloud.profiles.d/ec2.conf?ref=ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0"
            },
            {
                "sha": "9d7fd6befc4789fe3c3caae2f5b0b4083c684b34",
                "filename": "tests/unit/cloud/clouds/test_ec2.py",
                "status": "modified",
                "additions": 25,
                "deletions": 0,
                "changes": 25,
                "blob_url": "https://github.com/saltstack/salt/blob/ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0/tests/unit/cloud/clouds/test_ec2.py",
                "raw_url": "https://github.com/saltstack/salt/raw/ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0/tests/unit/cloud/clouds/test_ec2.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/cloud/clouds/test_ec2.py?ref=ba81ca3e3f7e3df5bc80b7a52ed480d70fec3da0"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/54785",
        "repo": "salt",
        "number": 54785,
        "bug_id": "salt_54785",
        "title": "Fix state.show_states when sls file missing in top file",
        "body": "### What does this PR do?\r\nWhen a sls file is defined in a top.sls file that is missing a TypeError was raised when using `state.show_states`. This PR ensures we do not stacktrace and handle this situation\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/issues/54758\r\n\r\n### Previous Behavior\r\n\r\n```\r\nPassed invalid arguments: string indices must be integers.\r\n\r\nUsage:\r\n\r\n    Returns the list of states that will be applied on highstate.\r\n\r\n    CLI Example:\r\n\r\n    .. code-block:: bash\r\n\r\n        salt '*' state.show_states\r\n\r\n    .. versionadded:: 2019.2.0\r\n```\r\n\r\n### New Behavior\r\n\r\n```\r\nlocal:\r\n       - No matching sls found for 'cloud' in env 'base'\r\n```\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "date": "2019-09-30",
        "merge_hash": "b90c3f2a491c2ff980e9d8c53fc58320d924ca4e",
        "files": [
            {
                "sha": "a757e401d4f5c8fff33ad4b0f30f2882631fab80",
                "filename": "salt/modules/state.py",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/saltstack/salt/blob/b90c3f2a491c2ff980e9d8c53fc58320d924ca4e/salt/modules/state.py",
                "raw_url": "https://github.com/saltstack/salt/raw/b90c3f2a491c2ff980e9d8c53fc58320d924ca4e/salt/modules/state.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/state.py?ref=b90c3f2a491c2ff980e9d8c53fc58320d924ca4e"
            },
            {
                "sha": "863185e4189c1f7180aa4996fbc50fd26ea3bb50",
                "filename": "tests/integration/__init__.py",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/saltstack/salt/blob/b90c3f2a491c2ff980e9d8c53fc58320d924ca4e/tests/integration/__init__.py",
                "raw_url": "https://github.com/saltstack/salt/raw/b90c3f2a491c2ff980e9d8c53fc58320d924ca4e/tests/integration/__init__.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/__init__.py?ref=b90c3f2a491c2ff980e9d8c53fc58320d924ca4e"
            },
            {
                "sha": "987b79a110065421c8ca38204c41e1b12f91f34d",
                "filename": "tests/integration/modules/test_state.py",
                "status": "modified",
                "additions": 24,
                "deletions": 14,
                "changes": 38,
                "blob_url": "https://github.com/saltstack/salt/blob/b90c3f2a491c2ff980e9d8c53fc58320d924ca4e/tests/integration/modules/test_state.py",
                "raw_url": "https://github.com/saltstack/salt/raw/b90c3f2a491c2ff980e9d8c53fc58320d924ca4e/tests/integration/modules/test_state.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/modules/test_state.py?ref=b90c3f2a491c2ff980e9d8c53fc58320d924ca4e"
            },
            {
                "sha": "0d15458be0a9b187efc7b2963612ea4bb078918e",
                "filename": "tests/unit/modules/test_state.py",
                "status": "modified",
                "additions": 13,
                "deletions": 0,
                "changes": 13,
                "blob_url": "https://github.com/saltstack/salt/blob/b90c3f2a491c2ff980e9d8c53fc58320d924ca4e/tests/unit/modules/test_state.py",
                "raw_url": "https://github.com/saltstack/salt/raw/b90c3f2a491c2ff980e9d8c53fc58320d924ca4e/tests/unit/modules/test_state.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/modules/test_state.py?ref=b90c3f2a491c2ff980e9d8c53fc58320d924ca4e"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/52624",
        "repo": "salt",
        "number": 52624,
        "bug_id": "salt_52624",
        "title": "fix TypeError: argument of type int is not iterable",
        "body": "### What does this PR do?\r\nfix a batch run bug, when batch_safe_size is set to a integer or percentage,  will resulting in \"TypeError: argument of type 'int' is not iterable\"\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "date": "2019-04-29",
        "merge_hash": "9a1ed78cca8f9fc0ddb2a89c56948f427870022a",
        "files": [
            {
                "sha": "6c92769ed0d04690a3fc3c55dc2af31a1be38790",
                "filename": "salt/cli/batch.py",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/saltstack/salt/blob/9a1ed78cca8f9fc0ddb2a89c56948f427870022a/salt/cli/batch.py",
                "raw_url": "https://github.com/saltstack/salt/raw/9a1ed78cca8f9fc0ddb2a89c56948f427870022a/salt/cli/batch.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/cli/batch.py?ref=9a1ed78cca8f9fc0ddb2a89c56948f427870022a"
            },
            {
                "sha": "fdb2da7d6597afc69f1ec23de5d1f049b0651512",
                "filename": "tests/unit/cli/test_batch.py",
                "status": "modified",
                "additions": 10,
                "deletions": 2,
                "changes": 12,
                "blob_url": "https://github.com/saltstack/salt/blob/9a1ed78cca8f9fc0ddb2a89c56948f427870022a/tests/unit/cli/test_batch.py",
                "raw_url": "https://github.com/saltstack/salt/raw/9a1ed78cca8f9fc0ddb2a89c56948f427870022a/tests/unit/cli/test_batch.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/cli/test_batch.py?ref=9a1ed78cca8f9fc0ddb2a89c56948f427870022a"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/53394",
        "repo": "salt",
        "number": 53394,
        "bug_id": "salt_53394",
        "title": "Fix traceback when making http query to non-listening host/port and raise_error=False",
        "body": "### What does this PR do?\r\n\r\nWhen `salt.utils.http.query()` attempts to query a non-listening host/port and socket errors are suppressed, the response is `None`. This results in a traceback when the code attempts to log the length of the response before and after attempting to decompress it.\r\n\r\nThis PR simply returns without decompressing when the response resolves as `False`.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nN/A\r\n\r\n### Previous Behavior\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/testing/salt/cli/caller.py\", line 237, in call\r\n    ret['return'] = self.minion.executors[fname](self.opts, data, func, args, kwargs)\r\n  File \"/testing/salt/executors/direct_call.py\", line 12, in execute\r\n    return func(*args, **kwargs)\r\n  File \"/testing/salt/modules/http.py\", line 41, in query\r\n    return salt.utils.http.query(url=url, opts=opts, **kwargs)\r\n  File \"/testing/salt/utils/http.py\", line 618, in query\r\n    result_text = __decompressContent(coding, result_text)\r\n  File \"/testing/salt/utils/http.py\", line 108, in __decompressContent\r\n    log.trace(\"Decompressing %s byte content with compression type: %s\", len(pgctnt), coding)\r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n\r\n### New Behavior\r\n\r\nNo traceback, and the return data is:\r\n\r\n```python\r\n{'body': None}\r\n```\r\n\r\n### Tests written?\r\n\r\nYes",
        "date": "2019-06-10",
        "merge_hash": "b6d64f504a6249c16e427fffbf856efddd7a9532",
        "files": [
            {
                "sha": "731130eb4b859679f550250fc914e2350bc83483",
                "filename": "salt/modules/http.py",
                "status": "modified",
                "additions": 14,
                "deletions": 2,
                "changes": 16,
                "blob_url": "https://github.com/saltstack/salt/blob/b6d64f504a6249c16e427fffbf856efddd7a9532/salt/modules/http.py",
                "raw_url": "https://github.com/saltstack/salt/raw/b6d64f504a6249c16e427fffbf856efddd7a9532/salt/modules/http.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/http.py?ref=b6d64f504a6249c16e427fffbf856efddd7a9532"
            },
            {
                "sha": "b187c566b50eda84ea7754e46b405ca240382caf",
                "filename": "salt/utils/http.py",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/saltstack/salt/blob/b6d64f504a6249c16e427fffbf856efddd7a9532/salt/utils/http.py",
                "raw_url": "https://github.com/saltstack/salt/raw/b6d64f504a6249c16e427fffbf856efddd7a9532/salt/utils/http.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/utils/http.py?ref=b6d64f504a6249c16e427fffbf856efddd7a9532"
            },
            {
                "sha": "44880204b9ead72710145afc7a116685fcf01f82",
                "filename": "tests/unit/utils/test_http.py",
                "status": "modified",
                "additions": 18,
                "deletions": 0,
                "changes": 18,
                "blob_url": "https://github.com/saltstack/salt/blob/b6d64f504a6249c16e427fffbf856efddd7a9532/tests/unit/utils/test_http.py",
                "raw_url": "https://github.com/saltstack/salt/raw/b6d64f504a6249c16e427fffbf856efddd7a9532/tests/unit/utils/test_http.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/utils/test_http.py?ref=b6d64f504a6249c16e427fffbf856efddd7a9532"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/52710",
        "repo": "salt",
        "number": 52710,
        "bug_id": "salt_52710",
        "title": "Fix complex grain",
        "body": "### What does this PR do?\r\nIf a grain is a list of complex objects, grains.py is unable to compare the currently set grain to the potentially new one. Instead it fails with TypeError: unhashable type: 'dict' (might be something else aswell depending on what you are trying to set as a grain). This PR will make it so that a list grain that contains complex objects can be compared via the function make_hashable.    \r\n### What issues does this PR fix or reference?\r\nissue #39875\r\n\r\n### Tests written?\r\n\r\nYes, in tests/unit/states/test_grains.py there is a test called \"test_make_hashable\"\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "date": "2019-05-09",
        "merge_hash": "6946dcce5d4f4ade7b6f51175c0d05db151d7f12",
        "files": [
            {
                "sha": "7121d9701bf337f8c207a435d7af85e70be6599a",
                "filename": "salt/states/grains.py",
                "status": "modified",
                "additions": 25,
                "deletions": 1,
                "changes": 26,
                "blob_url": "https://github.com/saltstack/salt/blob/6946dcce5d4f4ade7b6f51175c0d05db151d7f12/salt/states/grains.py",
                "raw_url": "https://github.com/saltstack/salt/raw/6946dcce5d4f4ade7b6f51175c0d05db151d7f12/salt/states/grains.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/states/grains.py?ref=6946dcce5d4f4ade7b6f51175c0d05db151d7f12"
            },
            {
                "sha": "c30d38817bb886d8584e2dc149c389b751cd534b",
                "filename": "tests/unit/states/test_grains.py",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/saltstack/salt/blob/6946dcce5d4f4ade7b6f51175c0d05db151d7f12/tests/unit/states/test_grains.py",
                "raw_url": "https://github.com/saltstack/salt/raw/6946dcce5d4f4ade7b6f51175c0d05db151d7f12/tests/unit/states/test_grains.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/states/test_grains.py?ref=6946dcce5d4f4ade7b6f51175c0d05db151d7f12"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/50958",
        "repo": "salt",
        "number": 50958,
        "bug_id": "salt_50958",
        "title": "Fix twilio version checking",
        "body": "`twilio.__version__` is a string and `twilio.__version_info__` is a tuple of strings containing integers [e.g. `('6', '8', '2')`]. The test_twilio_notify unittest fails:\r\n\r\n```\r\nERROR: unit.modules.test_twilio_notify (unittest.loader._FailedTest)\r\n----------------------------------------------------------------------\r\nImportError: Failed to import test module: unit.modules.test_twilio_notify\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/unittest/loader.py\", line 434, in _find_test_path\r\n    module = self._get_module_from_name(name)\r\n  File \"/usr/lib/python3.7/unittest/loader.py\", line 375, in _get_module_from_name\r\n    __import__(name)\r\n  File \"tests/unit/modules/test_twilio_notify.py\", line 20, in <module>\r\n    import salt.modules.twilio_notify as twilio_notify\r\n  File \"salt/modules/twilio_notify.py\", line 28, in <module>\r\n    if twilio.__version__ > 5:\r\nTypeError: '>' not supported between instances of 'str' and 'int'\r\n```\r\n\r\nFix the twilio version check to use `__version_info__` and converting its elements to int.",
        "date": "2018-12-25",
        "merge_hash": "8fc89a05790358e346e7f83b980780c6a8cbfe9d",
        "files": [
            {
                "sha": "dfdb512580a34a2231c7818adf1059cdbf8bed8a",
                "filename": "salt/modules/twilio_notify.py",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/saltstack/salt/blob/8fc89a05790358e346e7f83b980780c6a8cbfe9d/salt/modules/twilio_notify.py",
                "raw_url": "https://github.com/saltstack/salt/raw/8fc89a05790358e346e7f83b980780c6a8cbfe9d/salt/modules/twilio_notify.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/twilio_notify.py?ref=8fc89a05790358e346e7f83b980780c6a8cbfe9d"
            },
            {
                "sha": "d1cbfceca1f909e384518f6bdd50041c82be6220",
                "filename": "tests/unit/modules/test_twilio_notify.py",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/saltstack/salt/blob/8fc89a05790358e346e7f83b980780c6a8cbfe9d/tests/unit/modules/test_twilio_notify.py",
                "raw_url": "https://github.com/saltstack/salt/raw/8fc89a05790358e346e7f83b980780c6a8cbfe9d/tests/unit/modules/test_twilio_notify.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/modules/test_twilio_notify.py?ref=8fc89a05790358e346e7f83b980780c6a8cbfe9d"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/46729",
        "repo": "salt",
        "number": 46729,
        "bug_id": "salt_46729",
        "title": "Performance improvement/error catching in expr_match",
        "body": "`fnmatch.fnmatch()` does exact matches, so checking for an exact match is an unnecessary extra step.\n\nAdditionally, while regex errors are caught, TypeErrors are not, so the use of non-string expressions/values will result in a traceback. This prevents those tracebacks.",
        "date": "2018-04-04",
        "merge_hash": "d7e4b9d755535d8c626007ff99c813073c239f79",
        "files": [
            {
                "sha": "a1acd03824fe20910e7fcf04d7817b61731c96de",
                "filename": "salt/utils/stringutils.py",
                "status": "modified",
                "additions": 26,
                "deletions": 23,
                "changes": 49,
                "blob_url": "https://github.com/saltstack/salt/blob/d7e4b9d755535d8c626007ff99c813073c239f79/salt/utils/stringutils.py",
                "raw_url": "https://github.com/saltstack/salt/raw/d7e4b9d755535d8c626007ff99c813073c239f79/salt/utils/stringutils.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/utils/stringutils.py?ref=d7e4b9d755535d8c626007ff99c813073c239f79"
            },
            {
                "sha": "77df863096fb4776a9ede2753b5814b1528aee6b",
                "filename": "tests/unit/utils/test_stringutils.py",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/saltstack/salt/blob/d7e4b9d755535d8c626007ff99c813073c239f79/tests/unit/utils/test_stringutils.py",
                "raw_url": "https://github.com/saltstack/salt/raw/d7e4b9d755535d8c626007ff99c813073c239f79/tests/unit/utils/test_stringutils.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/utils/test_stringutils.py?ref=d7e4b9d755535d8c626007ff99c813073c239f79"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/45908",
        "repo": "salt",
        "number": 45908,
        "bug_id": "salt_45908",
        "title": "Fix for #45884 (\"TypeError: can't serialize <NodeImage\" when calling salt-cloud with the dimensiondata driver)",
        "body": "### What does this PR do?\r\n\r\n* Fixes the behaviour of the `dimensiondata` cloud driver when deploying a new server by ensuring that event payloads are in a format that can be serialised by msgpack (i.e. only dicts, lists, and intrinsic data types; no raw Libcloud objects).\r\n* Adds a couple of integration tests for the `dimensiondata` driver (there were none before) including one to deploy a server.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\n* \"TypeError: can't serialize <NodeImage\" error when calling salt-cloud to create a new server with the dimensiondata driver (saltstack/salt#45884)\r\n\r\n### Tests written?\r\n\r\nYes (integration).\r\n\r\n### Commits signed with GPG?\r\n\r\nYes. Using my key (C6AFE8C008E7F2B3).",
        "date": "2018-02-12",
        "merge_hash": "007214f7bf582d6193f5e5066cbec729cd29af0f",
        "files": [
            {
                "sha": "017832f6bee8dda9432c513a3b3ede62519f21b8",
                "filename": "salt/cloud/clouds/dimensiondata.py",
                "status": "modified",
                "additions": 58,
                "deletions": 16,
                "changes": 74,
                "blob_url": "https://github.com/saltstack/salt/blob/007214f7bf582d6193f5e5066cbec729cd29af0f/salt/cloud/clouds/dimensiondata.py",
                "raw_url": "https://github.com/saltstack/salt/raw/007214f7bf582d6193f5e5066cbec729cd29af0f/salt/cloud/clouds/dimensiondata.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/cloud/clouds/dimensiondata.py?ref=007214f7bf582d6193f5e5066cbec729cd29af0f"
            },
            {
                "sha": "bd8425f528e75fbea6c793deb3bd92987fec315d",
                "filename": "tests/integration/cloud/providers/test_dimensiondata.py",
                "status": "added",
                "additions": 137,
                "deletions": 0,
                "changes": 137,
                "blob_url": "https://github.com/saltstack/salt/blob/007214f7bf582d6193f5e5066cbec729cd29af0f/tests/integration/cloud/providers/test_dimensiondata.py",
                "raw_url": "https://github.com/saltstack/salt/raw/007214f7bf582d6193f5e5066cbec729cd29af0f/tests/integration/cloud/providers/test_dimensiondata.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/cloud/providers/test_dimensiondata.py?ref=007214f7bf582d6193f5e5066cbec729cd29af0f"
            },
            {
                "sha": "a698e7a5ccba85efc676cc6c67b0292b6df3aba8",
                "filename": "tests/integration/files/conf/cloud.profiles.d/dimensiondata.conf",
                "status": "added",
                "additions": 11,
                "deletions": 0,
                "changes": 11,
                "blob_url": "https://github.com/saltstack/salt/blob/007214f7bf582d6193f5e5066cbec729cd29af0f/tests/integration/files/conf/cloud.profiles.d/dimensiondata.conf",
                "raw_url": "https://github.com/saltstack/salt/raw/007214f7bf582d6193f5e5066cbec729cd29af0f/tests/integration/files/conf/cloud.profiles.d/dimensiondata.conf",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/files/conf/cloud.profiles.d/dimensiondata.conf?ref=007214f7bf582d6193f5e5066cbec729cd29af0f"
            },
            {
                "sha": "f54d77f3265ba166faf5f062671db4ba02882bf2",
                "filename": "tests/integration/files/conf/cloud.providers.d/dimensiondata.conf",
                "status": "added",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/saltstack/salt/blob/007214f7bf582d6193f5e5066cbec729cd29af0f/tests/integration/files/conf/cloud.providers.d/dimensiondata.conf",
                "raw_url": "https://github.com/saltstack/salt/raw/007214f7bf582d6193f5e5066cbec729cd29af0f/tests/integration/files/conf/cloud.providers.d/dimensiondata.conf",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/files/conf/cloud.providers.d/dimensiondata.conf?ref=007214f7bf582d6193f5e5066cbec729cd29af0f"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/46248",
        "repo": "salt",
        "number": 46248,
        "bug_id": "salt_46248",
        "title": "[develop] display usage for runners when missing arguments",
        "body": "### What does this PR do?\r\nCatch TypeError when not all required arguments are passed to a runner.  Display error and usage.\r\n\r\n### What issues does this PR fix or reference?\r\n#45325\r\n\r\n### Previous Behavior\r\nAn traceback would occur if the wrong number of required arguments was passed to a Salt runner.\r\n\r\n### New Behavior\r\nThis change catches the exception, displays the error then includes the usage documentation for the Salt runner.\r\n\r\n### Tests written?\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes/No\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "date": "2018-03-01",
        "merge_hash": "4df31ac297f8467bb53d0787f3efed63450c3b7f",
        "files": [
            {
                "sha": "6561e6dfba4e9b897400e4580f0abc5eecae6973",
                "filename": "salt/client/mixins.py",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/saltstack/salt/blob/4df31ac297f8467bb53d0787f3efed63450c3b7f/salt/client/mixins.py",
                "raw_url": "https://github.com/saltstack/salt/raw/4df31ac297f8467bb53d0787f3efed63450c3b7f/salt/client/mixins.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/client/mixins.py?ref=4df31ac297f8467bb53d0787f3efed63450c3b7f"
            },
            {
                "sha": "7c6d73761f8d45a2dd61ace15fa2f765cf615c11",
                "filename": "tests/integration/runners/test_cache.py",
                "status": "modified",
                "additions": 12,
                "deletions": 0,
                "changes": 12,
                "blob_url": "https://github.com/saltstack/salt/blob/4df31ac297f8467bb53d0787f3efed63450c3b7f/tests/integration/runners/test_cache.py",
                "raw_url": "https://github.com/saltstack/salt/raw/4df31ac297f8467bb53d0787f3efed63450c3b7f/tests/integration/runners/test_cache.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/runners/test_cache.py?ref=4df31ac297f8467bb53d0787f3efed63450c3b7f"
            },
            {
                "sha": "d63d0955f8eb93eaf35452b176ec404bceabeba7",
                "filename": "tests/integration/runners/test_jobs.py",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/saltstack/salt/blob/4df31ac297f8467bb53d0787f3efed63450c3b7f/tests/integration/runners/test_jobs.py",
                "raw_url": "https://github.com/saltstack/salt/raw/4df31ac297f8467bb53d0787f3efed63450c3b7f/tests/integration/runners/test_jobs.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/runners/test_jobs.py?ref=4df31ac297f8467bb53d0787f3efed63450c3b7f"
            },
            {
                "sha": "71683a8e2501dad0243dddd8c3780cb50ab164fa",
                "filename": "tests/integration/runners/test_salt.py",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/saltstack/salt/blob/4df31ac297f8467bb53d0787f3efed63450c3b7f/tests/integration/runners/test_salt.py",
                "raw_url": "https://github.com/saltstack/salt/raw/4df31ac297f8467bb53d0787f3efed63450c3b7f/tests/integration/runners/test_salt.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/runners/test_salt.py?ref=4df31ac297f8467bb53d0787f3efed63450c3b7f"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/44818",
        "repo": "salt",
        "number": 44818,
        "bug_id": "salt_44818",
        "title": "Allow test arg to be used on master or pillar",
        "body": "### What does this PR do?\r\nCurrently `test` is already a default option in the master config but it was not being queried in the `_get_test_value`. This adds the ability for someone to set `test: True` in pillar or master configuration.\r\n\r\nThis approach does change the order of a config. The order will look like: pillar, master and then minion. Most other config orders would look like so minion, pillar, master. So if this change in order is not the best approach the other solution is to use a new configuration value, since test=False is a default value, it will always grab that value from the minion opts.\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/issues/37840\r\n\r\nThis PR also fixes a bug I found on develop:\r\n\r\nThe bug would show up when running `test=True` with a state that had previously run using a `file.managed` state:\r\n\r\n```\r\nlocal:\r\n----------\r\n          ID: /tmp/test\r\n    Function: file.managed\r\n      Result: False\r\n     Comment: An exception occurred in this state: Traceback (most recent call last):\r\n                File \"/home/ch3ll/git/salt/salt/state.py\", line 1927, in call\r\n                  **cdata[u'kwargs'])\r\n                File \"/home/ch3ll/git/salt/salt/loader.py\", line 1799, in wrapper\r\n                  return f(*args, **kwargs)\r\n                File \"/home/ch3ll/git/salt/salt/states/file.py\", line 2354, in managed\r\n                  **kwargs\r\n                File \"/home/ch3ll/git/salt/salt/modules/file.py\", line 4635, in check_managed_changes\r\n                  group, mode, attrs, saltenv, contents)\r\n                File \"/home/ch3ll/git/salt/salt/modules/file.py\", line 4767, in check_file_meta\r\n                  diff_attrs = _cmp_attrs(name, attrs)\r\n                File \"/home/ch3ll/git/salt/salt/modules/file.py\", line 528, in _cmp_attrs\r\n                  new = [chr for chr in attrs if chr not in lattrs]\r\n              TypeError: 'NoneType' object is not iterable\r\n     Started: 13:45:40.801858\r\n    Duration: 23.997 ms\r\n     Changes:   \r\n\r\nSummary for local\r\n------------\r\nSucceeded: 0\r\nFailed:    1\r\n------------\r\nTotal states run:     1\r\n```\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "date": "2017-12-08",
        "merge_hash": "2a2fad503785f0156fdc9f27158ae9e7e4a64d1a",
        "files": [
            {
                "sha": "e49aabab2814f1ef2d0b40ea58713ec9a9603d64",
                "filename": "salt/modules/config.py",
                "status": "modified",
                "additions": 37,
                "deletions": 32,
                "changes": 69,
                "blob_url": "https://github.com/saltstack/salt/blob/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/salt/modules/config.py",
                "raw_url": "https://github.com/saltstack/salt/raw/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/salt/modules/config.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/config.py?ref=2a2fad503785f0156fdc9f27158ae9e7e4a64d1a"
            },
            {
                "sha": "062ee080282ef223acb2da8d6c89cff71bb4ecbc",
                "filename": "salt/modules/file.py",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/saltstack/salt/blob/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/salt/modules/file.py",
                "raw_url": "https://github.com/saltstack/salt/raw/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/salt/modules/file.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/file.py?ref=2a2fad503785f0156fdc9f27158ae9e7e4a64d1a"
            },
            {
                "sha": "cf0f81917785d6f7e02884dacdc2dff7cd926509",
                "filename": "salt/modules/state.py",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/saltstack/salt/blob/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/salt/modules/state.py",
                "raw_url": "https://github.com/saltstack/salt/raw/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/salt/modules/state.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/state.py?ref=2a2fad503785f0156fdc9f27158ae9e7e4a64d1a"
            },
            {
                "sha": "4895f73b85d71f74094a0744951624f123d6760d",
                "filename": "tests/integration/modules/test_state.py",
                "status": "modified",
                "additions": 98,
                "deletions": 1,
                "changes": 99,
                "blob_url": "https://github.com/saltstack/salt/blob/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/tests/integration/modules/test_state.py",
                "raw_url": "https://github.com/saltstack/salt/raw/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/tests/integration/modules/test_state.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/integration/modules/test_state.py?ref=2a2fad503785f0156fdc9f27158ae9e7e4a64d1a"
            },
            {
                "sha": "b357d92d3afdd2b19b3a55fb3d8e7d188f795aec",
                "filename": "tests/unit/modules/test_state.py",
                "status": "modified",
                "additions": 69,
                "deletions": 0,
                "changes": 69,
                "blob_url": "https://github.com/saltstack/salt/blob/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/tests/unit/modules/test_state.py",
                "raw_url": "https://github.com/saltstack/salt/raw/2a2fad503785f0156fdc9f27158ae9e7e4a64d1a/tests/unit/modules/test_state.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/modules/test_state.py?ref=2a2fad503785f0156fdc9f27158ae9e7e4a64d1a"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/40465",
        "repo": "salt",
        "number": 40465,
        "bug_id": "salt_40465",
        "title": "Artifactory Execution & State Module: Fixup Error Handling",
        "body": "### What does this PR do?\r\nArtifactory Execution Module changes:\r\n- Adds `URLError`s to the places where we're also catching `HTTPError`s \r\n- Changes the bare `Exception`s that are raised in these affected helper functions to `CommandExecutionError`s\r\n- Made some of the function calls a little more vertical. This module is extremely horizontally written, which makes it hard to see what is going on.\r\n\r\nAtrifactory State Module Changes:\r\n- Moved the log lines and dictionary manipulation lines out of the try/except block\r\n- Wrapped the `exc` variable in`str()` to ensure to avoid a `TypeError` further on in the process. The URLError being passed up to the exception to print as a comment in the state file comes back as a different type.\r\n\r\n### What issues does this PR fix or reference?\r\nFixes #37699\r\n\r\n### Previous Behavior\r\nThe error message couldn't be serialized, so the docs for the state execution module would print and then a final stacktrace:\r\n```\r\nPassed invalid arguments: Cannot serialize CommandExecutionError('Error: <urlopen error [Errno -2] Name or service not known>',).\r\n\r\nUsage:\r\n\r\n    Execute the states in one or more SLS files\r\n\r\n    test\r\n        Run states in test-only (dry-run) mode\r\n\r\n    pillar\r\n        Custom Pillar values, passed as a dictionary of key-value pairs\r\n\r\n        .. code-block:: bash\r\n\r\n            salt '*' state.apply test pillar='{\"foo\": \"bar\"}'\r\n\r\n        .. note::\r\n            Values passed this way will override Pillar values set via\r\n            ``pillar_roots`` or an external Pillar source.\r\n\r\n        .. versionchanged:: 2016.3.0\r\n            GPG-encrypted CLI Pillar data is now supported via the GPG\r\n            renderer. See :ref:`here <encrypted-cli-pillar-data>` for details.\r\n\r\n    pillar_enc\r\n        Specify which renderer to use to decrypt encrypted data located within\r\n        the ``pillar`` value. Currently, only ``gpg`` is supported.\r\n\r\n        .. versionadded:: 2016.3.0\r\n\r\n    queue : False\r\n        Instead of failing immediately when another state run is in progress,\r\n        queue the new state run to begin running once the other has finished.\r\n\r\n        This option starts a new thread for each queued state run, so use this\r\n        option sparingly.\r\n\r\n    concurrent : False\r\n        Execute state runs concurrently instead of serially\r\n\r\n        .. warning::\r\n\r\n            This flag is potentially dangerous. It is designed for use when\r\n            multiple state runs can safely be run at the same time. Do *not*\r\n            use this flag for performance optimization.\r\n\r\n    saltenv : None\r\n        Specify a salt fileserver environment to be used when applying states\r\n\r\n        .. versionchanged:: 0.17.0\r\n            Argument name changed from ``env`` to ``saltenv``.\r\n\r\n        .. versionchanged:: 2014.7.0\r\n            If no saltenv is specified, the minion config will be checked for an\r\n            ``environment`` parameter and if found, it will be used. If none is\r\n            found, ``base`` will be used. In prior releases, the minion config\r\n            was not checked and ``base`` would always be assumed when the\r\n            saltenv was not explicitly set.\r\n\r\n    pillarenv\r\n\r\n        Specify a Pillar environment to be used when applying states. By\r\n        default, all Pillar environments will be merged together and used.\r\n\r\n    localconfig\r\n\r\n        Optionally, instead of using the minion config, load minion opts from\r\n        the file specified by this argument, and then merge them with the\r\n        options from the minion config. This functionality allows for specific\r\n        states to be run with their own custom minion configuration, including\r\n        different pillars, file_roots, etc.\r\n\r\n    mock:\r\n        The mock option allows for the state run to execute without actually\r\n        calling any states. This then returns a mocked return which will show\r\n        the requisite ordering as well as fully validate the state run.\r\n\r\n        .. versionadded:: 2015.8.4\r\n\r\n    CLI Example:\r\n\r\n    .. code-block:: bash\r\n\r\n        salt '*' state.sls core,edit.vim dev\r\n        salt '*' state.sls core exclude=\"[{'id': 'id_to_exclude'}, {'sls': 'sls_to_exclude'}]\"\r\n\r\n        salt '*' state.sls myslsfile pillar=\"{foo: 'Foo!', bar: 'Bar!'}\"\r\n\r\nTraceback (most recent call last):\r\n  File \"/root/SaltStack/salt/salt/cli/caller.py\", line 197, in call\r\n    ret['return'] = func(*args, **kwargs)\r\n  File \"/root/SaltStack/salt/salt/modules/state.py\", line 1065, in sls\r\n    serial.dump(ret, fp_)\r\n  File \"/root/SaltStack/salt/salt/payload.py\", line 295, in dump\r\n    fn_.write(self.dumps(msg))\r\n  File \"/root/SaltStack/salt/salt/payload.py\", line 181, in dumps\r\n    return msgpack.dumps(msg, use_bin_type=use_bin_type)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/__init__.py\", line 47, in packb\r\n    return Packer(**kwargs).pack(o)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 734, in pack\r\n    self._pack(obj)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 726, in _pack\r\n    nest_limit - 1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 824, in _fb_pack_map_pairs\r\n    self._pack(v, nest_limit - 1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 726, in _pack\r\n    nest_limit - 1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 824, in _fb_pack_map_pairs\r\n    self._pack(v, nest_limit - 1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 731, in _pack\r\n    raise TypeError(\"Cannot serialize %r\" % obj)\r\nTypeError: Cannot serialize CommandExecutionError('Error: <urlopen error [Errno -2] Name or service not known>',)\r\nroot@rallytime:~#\r\n```\r\n\r\n### New Behavior\r\nPropagates the error message that is raised to the state report:\r\n```\r\nlocal:\r\n----------\r\n          ID: download_from_artifactory\r\n    Function: artifactory.downloaded\r\n      Result: False\r\n     Comment: Could not fetch data from url: http://some.url.that.i.removed/libs-snapshots/com/example/webapp/webapp/1.0-SNAPSHOT/maven-metadata.xml. ERROR: <urlopen error [Errno -2] Name or service not known>\r\n     Started: 20:03:59.576973\r\n    Duration: 8.414 ms\r\n     Changes:\r\n\r\nSummary for local\r\n------------\r\nSucceeded: 0\r\nFailed:    1\r\n------------\r\nTotal states run:     1\r\nTotal run time:   8.414 ms\r\n```",
        "date": "2017-04-04",
        "merge_hash": "0ed385210f3cbab2aaff8b7c924495dcfec0384f",
        "files": [
            {
                "sha": "d521e786f3a6ddd3a49dc90b9c53153a6e77dca7",
                "filename": "salt/modules/artifactory.py",
                "status": "modified",
                "additions": 45,
                "deletions": 12,
                "changes": 57,
                "blob_url": "https://github.com/saltstack/salt/blob/0ed385210f3cbab2aaff8b7c924495dcfec0384f/salt/modules/artifactory.py",
                "raw_url": "https://github.com/saltstack/salt/raw/0ed385210f3cbab2aaff8b7c924495dcfec0384f/salt/modules/artifactory.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/artifactory.py?ref=0ed385210f3cbab2aaff8b7c924495dcfec0384f"
            },
            {
                "sha": "ddcc7a6707d2598ee7887f1dbf69f4e30f32b594",
                "filename": "salt/states/artifactory.py",
                "status": "modified",
                "additions": 10,
                "deletions": 9,
                "changes": 19,
                "blob_url": "https://github.com/saltstack/salt/blob/0ed385210f3cbab2aaff8b7c924495dcfec0384f/salt/states/artifactory.py",
                "raw_url": "https://github.com/saltstack/salt/raw/0ed385210f3cbab2aaff8b7c924495dcfec0384f/salt/states/artifactory.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/states/artifactory.py?ref=0ed385210f3cbab2aaff8b7c924495dcfec0384f"
            },
            {
                "sha": "218857c99f6fea2b80abb3e7274f4939b78f84b6",
                "filename": "tests/unit/states/artifactory_test.py",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/saltstack/salt/blob/0ed385210f3cbab2aaff8b7c924495dcfec0384f/tests/unit/states/artifactory_test.py",
                "raw_url": "https://github.com/saltstack/salt/raw/0ed385210f3cbab2aaff8b7c924495dcfec0384f/tests/unit/states/artifactory_test.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/states/artifactory_test.py?ref=0ed385210f3cbab2aaff8b7c924495dcfec0384f"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/38947",
        "repo": "salt",
        "number": 38947,
        "bug_id": "salt_38947",
        "title": "Fix ssh key deployment when using minimal salt-ssh roster",
        "body": "### What does this PR do?\r\n\r\nAllows salt-ssh to deploy ssh keys when the roser file does not specify `ssh_options` for a given host.\r\n\r\n### Previous Behavior\r\n\r\nTraceback ending with\r\n\r\n    ...\r\n    File \"/u/en/radman/local/saltenv/lib/python2.7/site-packages/salt/client/ssh/shell.py\", line 190, in _copy_id_str_old\r\n      self._ssh_opts(),\r\n    File \"/u/en/radman/local/saltenv/lib/python2.7/site-packages/salt/client/ssh/shell.py\", line 176, in _ssh_opts\r\n      for opt in self.ssh_options])\r\n    TypeError: 'NoneType' object is not iterable\r\n\r\n\r\n### New Behavior\r\n\r\n    $ sudo salt-ssh 'login1*' test.ping\r\n    Permission denied for host login1, do you want to deploy the salt-ssh\r\n    key? (password required):\r\n    [Y/n] Y\r\n    Password for root@login1:\r\n    login1:\r\n        True\r\n\r\n### Tests written?\r\n\r\nYes\r\n",
        "date": "2017-01-25",
        "merge_hash": "7febac86695f34a0085a5eddd42a6cc071e5c3d8",
        "files": [
            {
                "sha": "3300b1c7216306ba79d47d68fd9564c0b4779371",
                "filename": "salt/client/ssh/shell.py",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/saltstack/salt/blob/7febac86695f34a0085a5eddd42a6cc071e5c3d8/salt/client/ssh/shell.py",
                "raw_url": "https://github.com/saltstack/salt/raw/7febac86695f34a0085a5eddd42a6cc071e5c3d8/salt/client/ssh/shell.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/client/ssh/shell.py?ref=7febac86695f34a0085a5eddd42a6cc071e5c3d8"
            },
            {
                "sha": "40a96afc6ff09d58a702b76e3f7dd412fe975e26",
                "filename": "tests/unit/ssh/__init__.py",
                "status": "added",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/saltstack/salt/blob/7febac86695f34a0085a5eddd42a6cc071e5c3d8/tests/unit/ssh/__init__.py",
                "raw_url": "https://github.com/saltstack/salt/raw/7febac86695f34a0085a5eddd42a6cc071e5c3d8/tests/unit/ssh/__init__.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/ssh/__init__.py?ref=7febac86695f34a0085a5eddd42a6cc071e5c3d8"
            },
            {
                "sha": "cd6938f40c7bf7d572ba4ef472bb00e6104dac7c",
                "filename": "tests/unit/ssh/ssh_single_test.py",
                "status": "added",
                "additions": 72,
                "deletions": 0,
                "changes": 72,
                "blob_url": "https://github.com/saltstack/salt/blob/7febac86695f34a0085a5eddd42a6cc071e5c3d8/tests/unit/ssh/ssh_single_test.py",
                "raw_url": "https://github.com/saltstack/salt/raw/7febac86695f34a0085a5eddd42a6cc071e5c3d8/tests/unit/ssh/ssh_single_test.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/ssh/ssh_single_test.py?ref=7febac86695f34a0085a5eddd42a6cc071e5c3d8"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/37689",
        "repo": "salt",
        "number": 37689,
        "bug_id": "salt_37689",
        "title": "joyent: Handle error if deployment fails",
        "body": "### What does this PR do?\r\n\r\nTry to handle errors during the provisioning of new VMs on Joyent.\r\n\r\n### Previous Behavior\r\n\r\nIf VM creation failed a confusing traceback ending with the following would be printed:\r\n\r\n    TypeError: 'NoneType' object has no attribute '__getitem__'\r\n\r\nThe code path was set up to handle exceptions, but if a failure occurred an exception was not raised. Instead interpret the return values.\r\n\r\n### New Behavior\r\n\r\nIf a parameter in the profile is not correct the following error is logged:\r\n\r\n    Error: There was a profile error: Failed to deploy VM\r\n\r\n### Tests written?\r\n\r\nYes. The heavy use of mocks can be reduced by relocating RSA key processing to a helper function.\r\n\r\nAlso fix up some pylint warnings.\r\n",
        "date": "2016-11-15",
        "merge_hash": "8687dbc3b2729a49f08e4dbc7cef8d787f15c49c",
        "files": [
            {
                "sha": "8aed7561a9400c00b6ef261664fac89d5d9f8aaf",
                "filename": "salt/cloud/clouds/joyent.py",
                "status": "modified",
                "additions": 17,
                "deletions": 25,
                "changes": 42,
                "blob_url": "https://github.com/saltstack/salt/blob/8687dbc3b2729a49f08e4dbc7cef8d787f15c49c/salt/cloud/clouds/joyent.py",
                "raw_url": "https://github.com/saltstack/salt/raw/8687dbc3b2729a49f08e4dbc7cef8d787f15c49c/salt/cloud/clouds/joyent.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/cloud/clouds/joyent.py?ref=8687dbc3b2729a49f08e4dbc7cef8d787f15c49c"
            },
            {
                "sha": "3a2b821b7e27773af03ce81de54932ce7809b745",
                "filename": "tests/unit/cloud/clouds/joyent_test.py",
                "status": "modified",
                "additions": 50,
                "deletions": 5,
                "changes": 55,
                "blob_url": "https://github.com/saltstack/salt/blob/8687dbc3b2729a49f08e4dbc7cef8d787f15c49c/tests/unit/cloud/clouds/joyent_test.py",
                "raw_url": "https://github.com/saltstack/salt/raw/8687dbc3b2729a49f08e4dbc7cef8d787f15c49c/tests/unit/cloud/clouds/joyent_test.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/cloud/clouds/joyent_test.py?ref=8687dbc3b2729a49f08e4dbc7cef8d787f15c49c"
            }
        ]
    },
    {
        "pr": "https://github.com/saltstack/salt/pull/33908",
        "repo": "salt",
        "number": 33908,
        "bug_id": "salt_33908",
        "title": "[boto_lambda] handle ommitted Permissions parameter",
        "body": "### What does this PR do?\n\nIf `Permissions` parameter was ommited but actual lambda function defines `Permissions`,\nthe state would fail attempting to compare old and new values.\n\n```\nAn exception occurred in this state: Traceback (most recent call last):\nFile \"/usr/lib/python2.7/dist-packages/salt/state.py\", line 1703, in call\n    **cdata['kwargs'])\nFile \"/usr/lib/python2.7/dist-packages/salt/loader.py\", line 1649, in wrapper\n    return f(*args, **kwargs)\nFile \"/usr/lib/python2.7/dist-packages/salt/states/boto_lambda.py\", line 255, in function_present\n    region, key, keyid, profile)\nFile \"/usr/lib/python2.7/dist-packages/salt/states/boto_lambda.py\", line 372, in _function_permissions_present\n    diffs = salt.utils.compare_dicts(curr_permissions, Permissions)\nFile \"/usr/lib/python2.7/dist-packages/salt/utils/__init__.py\", line 2355, in compare_dicts\n    elif key not in new:\nTypeError: argument of type 'NoneType' is not iterable\n```\n### What issues does this PR fix or reference?\n\nnone\n### Tests written?\n\nYes\n",
        "date": "2016-06-10",
        "merge_hash": "f806c7e29000807727c814d4fba41b7c06de55ab",
        "files": [
            {
                "sha": "47832ede283db94fe9da8f4f32447c5f8b20e2a9",
                "filename": "salt/modules/boto_lambda.py",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/saltstack/salt/blob/f806c7e29000807727c814d4fba41b7c06de55ab/salt/modules/boto_lambda.py",
                "raw_url": "https://github.com/saltstack/salt/raw/f806c7e29000807727c814d4fba41b7c06de55ab/salt/modules/boto_lambda.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/modules/boto_lambda.py?ref=f806c7e29000807727c814d4fba41b7c06de55ab"
            },
            {
                "sha": "30383c5d72568427e8c473bcb5f40b53e862c0b0",
                "filename": "salt/states/boto_lambda.py",
                "status": "modified",
                "additions": 6,
                "deletions": 6,
                "changes": 12,
                "blob_url": "https://github.com/saltstack/salt/blob/f806c7e29000807727c814d4fba41b7c06de55ab/salt/states/boto_lambda.py",
                "raw_url": "https://github.com/saltstack/salt/raw/f806c7e29000807727c814d4fba41b7c06de55ab/salt/states/boto_lambda.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/salt/states/boto_lambda.py?ref=f806c7e29000807727c814d4fba41b7c06de55ab"
            },
            {
                "sha": "73b06633c23da0e95dc0ae7975a13deb3588d13b",
                "filename": "tests/unit/states/boto_lambda_test.py",
                "status": "modified",
                "additions": 48,
                "deletions": 0,
                "changes": 48,
                "blob_url": "https://github.com/saltstack/salt/blob/f806c7e29000807727c814d4fba41b7c06de55ab/tests/unit/states/boto_lambda_test.py",
                "raw_url": "https://github.com/saltstack/salt/raw/f806c7e29000807727c814d4fba41b7c06de55ab/tests/unit/states/boto_lambda_test.py",
                "contents_url": "https://api.github.com/repos/saltstack/salt/contents/tests/unit/states/boto_lambda_test.py?ref=f806c7e29000807727c814d4fba41b7c06de55ab"
            }
        ]
    }
]