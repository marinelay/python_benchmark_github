[
    {
        "url": "https://api.github.com/repos/spotify/luigi/issues/2617",
        "repository_url": "https://api.github.com/repos/spotify/luigi",
        "labels_url": "https://api.github.com/repos/spotify/luigi/issues/2617/labels{/name}",
        "comments_url": "https://api.github.com/repos/spotify/luigi/issues/2617/comments",
        "events_url": "https://api.github.com/repos/spotify/luigi/issues/2617/events",
        "html_url": "https://github.com/spotify/luigi/pull/2617",
        "id": 396960393,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjQzMDE3MDcw",
        "number": 2617,
        "title": "Fix call to message from TypeError not working with Python 3.6 (#2616)",
        "user": {
            "login": "offgrid-konrad",
            "id": 28871153,
            "node_id": "MDQ6VXNlcjI4ODcxMTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/28871153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/offgrid-konrad",
            "html_url": "https://github.com/offgrid-konrad",
            "followers_url": "https://api.github.com/users/offgrid-konrad/followers",
            "following_url": "https://api.github.com/users/offgrid-konrad/following{/other_user}",
            "gists_url": "https://api.github.com/users/offgrid-konrad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/offgrid-konrad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/offgrid-konrad/subscriptions",
            "organizations_url": "https://api.github.com/users/offgrid-konrad/orgs",
            "repos_url": "https://api.github.com/users/offgrid-konrad/repos",
            "events_url": "https://api.github.com/users/offgrid-konrad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/offgrid-konrad/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-01-08T15:35:45Z",
        "updated_at": "2019-01-09T20:42:36Z",
        "closed_at": "2019-01-09T20:42:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/spotify/luigi/pulls/2617",
            "html_url": "https://github.com/spotify/luigi/pull/2617",
            "diff_url": "https://github.com/spotify/luigi/pull/2617.diff",
            "patch_url": "https://github.com/spotify/luigi/pull/2617.patch"
        },
        "body": "<!--- This template is optional. Please use it as a starting point to help guide PRs -->\r\n\r\n<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n## Description\r\n<!--- Describe your changes -->\r\nThe issue is that the file luigi/contrib/s3.py uses a call to TypeError member e.message which is only available in Python 2 as opposed to e.args which is available in both Python 2 and Python 3.\r\n\r\nHere is the code snippet in luigi/contrib/s3.py from Luigi release 2.8.0 causing the issue (in fact, it seems it's the same code for all releases >= 2.7.6):\r\n```python\r\n        # At this stage, if no credentials provided, boto3 would handle their resolution for us\r\n        # For finding out about the order in which it tries to find these credentials\r\n        # please see here details\r\n        # http://boto3.readthedocs.io/en/latest/guide/configuration.html#configuring-credentials\r\n\r\n        if not (aws_access_key_id and aws_secret_access_key):\r\n            logger.debug('no credentials provided, delegating credentials resolution to boto3')\r\n\r\n        try:\r\n            self._s3 = boto3.resource('s3',\r\n                                      aws_access_key_id=aws_access_key_id,\r\n                                      aws_secret_access_key=aws_secret_access_key,\r\n                                      aws_session_token=aws_session_token,\r\n                                      **options)\r\n        except TypeError as e:\r\n            logger.error(e.message)\r\n            if 'got an unexpected keyword argument' in e.message:\r\n                raise DeprecatedBotoClientException(\r\n                    \"Now using boto3. Check that you're passing the correct arguments\")\r\n            raise\r\n```\r\n\r\nTo fix this issue, I propose to use `e.args[0]` instead of `e.message` like so:\r\n\r\n```python\r\nexcept TypeError as e:\r\n    logger.error(e.args[0])\r\n    if 'got an unexpected keyword argument' in e.args[0]:\r\n        raise DeprecatedBotoClientException(\r\n            \"Now using boto3. Check that you're passing the correct arguments\")\r\n    raise\r\n```\r\n\r\n## Motivation and Context\r\n<!--- Why is this change required? What problem does it solve? -->\r\n<!--- If it fixes an open issue, please link to the issue here. -->\r\nThe change resolves the issue, described in the Description. A link to the original issue: \r\n[https://github.com/spotify/luigi/issues/2616](https://github.com/spotify/luigi/issues/2616)\r\n\r\n## Have you tested this? If so, how?\r\n<!--- Valid responses are \"I have included unit tests.\" or --> \r\n<!--- \"I ran my jobs with this code and it works for me.\" -->\r\nI ran my jobs with this code and it works for me.\r\n\r\n<!---\r\nfor more information on how to submit valuable contributions,\r\nsee https://opensource.guide/how-to-contribute/#how-to-submit-a-contribution\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/spotify/luigi/issues/2323",
        "repository_url": "https://api.github.com/repos/spotify/luigi",
        "labels_url": "https://api.github.com/repos/spotify/luigi/issues/2323/labels{/name}",
        "comments_url": "https://api.github.com/repos/spotify/luigi/issues/2323/comments",
        "events_url": "https://api.github.com/repos/spotify/luigi/issues/2323/events",
        "html_url": "https://github.com/spotify/luigi/pull/2323",
        "id": 286054368,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTYxMTczMzY2",
        "number": 2323,
        "title": "Fix Python 3 TypeError in contrib.hive.HiveTableTarget.exists()",
        "user": {
            "login": "sd2k",
            "id": 5464991,
            "node_id": "MDQ6VXNlcjU0NjQ5OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5464991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sd2k",
            "html_url": "https://github.com/sd2k",
            "followers_url": "https://api.github.com/users/sd2k/followers",
            "following_url": "https://api.github.com/users/sd2k/following{/other_user}",
            "gists_url": "https://api.github.com/users/sd2k/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sd2k/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sd2k/subscriptions",
            "organizations_url": "https://api.github.com/users/sd2k/orgs",
            "repos_url": "https://api.github.com/users/sd2k/repos",
            "events_url": "https://api.github.com/users/sd2k/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sd2k/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-01-04T17:15:35Z",
        "updated_at": "2018-01-16T19:34:36Z",
        "closed_at": "2018-01-16T19:34:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/spotify/luigi/pulls/2323",
            "html_url": "https://github.com/spotify/luigi/pull/2323",
            "diff_url": "https://github.com/spotify/luigi/pull/2323.diff",
            "patch_url": "https://github.com/spotify/luigi/pull/2323.patch"
        },
        "body": "## Description\r\nStdout is `bytes` which is fine in Python 2 since the rest of the strings are too, but in Python 3 we need it to be `unicode` so we can do string comparisons. This fixes a long-standing bug, it seems!\r\n\r\n## Motivation and Context\r\nSee #1012.\r\n\r\n## Have you tested this? If so, how?\r\nI ran my jobs with this code and it works for me.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/spotify/luigi/issues/2168",
        "repository_url": "https://api.github.com/repos/spotify/luigi",
        "labels_url": "https://api.github.com/repos/spotify/luigi/issues/2168/labels{/name}",
        "comments_url": "https://api.github.com/repos/spotify/luigi/issues/2168/comments",
        "events_url": "https://api.github.com/repos/spotify/luigi/issues/2168/events",
        "html_url": "https://github.com/spotify/luigi/pull/2168",
        "id": 239760130,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTI4MzU1OTc4",
        "number": 2168,
        "title": "PySparkTask fix for bytes / str type error and import error",
        "user": {
            "login": "ntim",
            "id": 7419576,
            "node_id": "MDQ6VXNlcjc0MTk1NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7419576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ntim",
            "html_url": "https://github.com/ntim",
            "followers_url": "https://api.github.com/users/ntim/followers",
            "following_url": "https://api.github.com/users/ntim/following{/other_user}",
            "gists_url": "https://api.github.com/users/ntim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ntim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ntim/subscriptions",
            "organizations_url": "https://api.github.com/users/ntim/orgs",
            "repos_url": "https://api.github.com/users/ntim/repos",
            "events_url": "https://api.github.com/users/ntim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ntim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2017-06-30T12:06:57Z",
        "updated_at": "2017-07-13T13:19:10Z",
        "closed_at": "2017-07-13T13:19:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/spotify/luigi/pulls/2168",
            "html_url": "https://github.com/spotify/luigi/pull/2168",
            "diff_url": "https://github.com/spotify/luigi/pull/2168.diff",
            "patch_url": "https://github.com/spotify/luigi/pull/2168.patch"
        },
        "body": "## Description\r\nWith master, the following exception occurs when e.g. executing the \"pyspark_wc.py\" example: \r\n\r\n```\r\nERROR: [pid 18936] Worker Worker(salt=451680745, workers=1, host=..., username=..., pid=18936) failed    InlinePySparkWordCount()\r\nTraceback (most recent call last):\r\n  File \".../luigi/worker.py\", line 191, in run\r\n    new_deps = self._run_get_new_deps()\r\n  File \".../luigi/worker.py\", line 129, in _run_get_new_deps\r\n    task_gen = self.task.run()\r\n  File \".../luigi/contrib/spark.py\", line 281, in run\r\n    self._dump(fd)\r\n  File \".../luigi/contrib/spark.py\", line 292, in _dump\r\n    d = d.replace(b'(c__main__', \"(c\" + module_name)\r\nTypeError: can't concat bytes to str\r\n```\r\n\r\n## Motivation and Context\r\nResolves the issue with python 3.6 and python 2.7\r\n\r\n## Have you tested this? If so, how?\r\nThis stage can now be successful executed given the pyspark_wc.py file is put in the PYTHON_PATH (see #1576)\r\n\r\nResolves #1988 \r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/spotify/luigi/issues/1825",
        "repository_url": "https://api.github.com/repos/spotify/luigi",
        "labels_url": "https://api.github.com/repos/spotify/luigi/issues/1825/labels{/name}",
        "comments_url": "https://api.github.com/repos/spotify/luigi/issues/1825/comments",
        "events_url": "https://api.github.com/repos/spotify/luigi/issues/1825/events",
        "html_url": "https://github.com/spotify/luigi/pull/1825",
        "id": 172817685,
        "node_id": "MDExOlB1bGxSZXF1ZXN0ODI0NDg3NDk=",
        "number": 1825,
        "title": "Uses a sane default for pysftp_conn_kwargs",
        "user": {
            "login": "daveFNbuck",
            "id": 2091885,
            "node_id": "MDQ6VXNlcjIwOTE4ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2091885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daveFNbuck",
            "html_url": "https://github.com/daveFNbuck",
            "followers_url": "https://api.github.com/users/daveFNbuck/followers",
            "following_url": "https://api.github.com/users/daveFNbuck/following{/other_user}",
            "gists_url": "https://api.github.com/users/daveFNbuck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daveFNbuck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daveFNbuck/subscriptions",
            "organizations_url": "https://api.github.com/users/daveFNbuck/orgs",
            "repos_url": "https://api.github.com/users/daveFNbuck/repos",
            "events_url": "https://api.github.com/users/daveFNbuck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daveFNbuck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2016-08-23T21:58:11Z",
        "updated_at": "2017-06-02T00:00:19Z",
        "closed_at": "2016-08-24T07:05:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/spotify/luigi/pulls/1825",
            "html_url": "https://github.com/spotify/luigi/pull/1825",
            "diff_url": "https://github.com/spotify/luigi/pull/1825.diff",
            "patch_url": "https://github.com/spotify/luigi/pull/1825.patch"
        },
        "body": "## Description\n\npysftp_conn_kwargs defaults to None, which causes a `TypeError` when passed\nwith `**` for the kwargs of pysftp.connect. This fixes replaces `None` with `{}` when storing pysftp_conn_kwargs in the RemoteFileSystem.\n## Motivation and Context\n\nI found that since updating to the latest luigi yesterday, my sftp tasks have stopped working. There would be an error like `TypeError: type object argument after ** must be a mapping, not NoneType` in the luigi ftp library. I traced it down to the default value for the new optional argument pysftp_conn_kwargs in RemoteFileSystem. By storing `{}` when `None` is passed, the error is fixed.\n## Have you tested this? If so, how?\n\nI ran a previously failing job with this code and it succeeded.\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/spotify/luigi/issues/1999",
        "repository_url": "https://api.github.com/repos/spotify/luigi",
        "labels_url": "https://api.github.com/repos/spotify/luigi/issues/1999/labels{/name}",
        "comments_url": "https://api.github.com/repos/spotify/luigi/issues/1999/comments",
        "events_url": "https://api.github.com/repos/spotify/luigi/issues/1999/events",
        "html_url": "https://github.com/spotify/luigi/pull/1999",
        "id": 203020865,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTAzMDYxMjMz",
        "number": 1999,
        "title": "ExternalHiveTask use DictParameter",
        "user": {
            "login": "wugh",
            "id": 1518998,
            "node_id": "MDQ6VXNlcjE1MTg5OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1518998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wugh",
            "html_url": "https://github.com/wugh",
            "followers_url": "https://api.github.com/users/wugh/followers",
            "following_url": "https://api.github.com/users/wugh/following{/other_user}",
            "gists_url": "https://api.github.com/users/wugh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wugh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wugh/subscriptions",
            "organizations_url": "https://api.github.com/users/wugh/orgs",
            "repos_url": "https://api.github.com/users/wugh/repos",
            "events_url": "https://api.github.com/users/wugh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wugh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-01-25T06:11:03Z",
        "updated_at": "2017-06-30T10:22:35Z",
        "closed_at": "2017-06-30T10:22:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/spotify/luigi/pulls/1999",
            "html_url": "https://github.com/spotify/luigi/pull/1999",
            "diff_url": "https://github.com/spotify/luigi/pull/1999.diff",
            "patch_url": "https://github.com/spotify/luigi/pull/1999.patch"
        },
        "body": "Fix execution_summary error for `ExternalHiveTask`, the error message is fellow:\r\n```\r\nTraceback (most recent call last):\r\nFile \"run_script.py\", line 91, in \r\nluigi.run()\r\nFile \"/usr/local/lib/python2.7/site-packages/luigi/interface.py\", line 210, in run\r\nreturn _run(_args, *_kwargs)['success']\r\nFile \"/usr/local/lib/python2.7/site-packages/luigi/interface.py\", line 238, in _run\r\nreturn _schedule_and_run([cp.get_task_obj()], worker_scheduler_factory)\r\nFile \"/usr/local/lib/python2.7/site-packages/luigi/interface.py\", line 198, in _schedule_and_run\r\nlogger.info(execution_summary.summary(worker))\r\nFile \"/usr/local/lib/python2.7/site-packages/luigi/execution_summary.py\", line 384, in summary\r\nreturn _summary_wrap(_summary_format(_summary_dict(worker), worker))\r\nFile \"/usr/local/lib/python2.7/site-packages/luigi/execution_summary.py\", line 333, in _summary_format\r\nstr_output += '{0}\\n'.format(_get_str(group_tasks[status], status in _PENDING_SUB_STATUSES))\r\nFile \"/usr/local/lib/python2.7/site-packages/luigi/execution_summary.py\", line 132, in _get_str\r\nparams = _get_set_of_params(tasks)\r\nFile \"/usr/local/lib/python2.7/site-packages/luigi/execution_summary.py\", line 173, in _get_set_of_params\r\nparams[param] = {getattr(task, param[0]) for task in tasks}\r\nFile \"/usr/local/lib/python2.7/site-packages/luigi/execution_summary.py\", line 173, in \r\nparams[param] = {getattr(task, param[0]) for task in tasks}\r\nTypeError: unhashable type: 'dict'\r\n```\r\n\r\n## Description\r\n\r\nThis error make the `luigi` task return code not zero.\r\n\r\n## Have you tested this? If so, how?\r\n\r\nI ran my jobs with this code and it works for me.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/spotify/luigi/issues/2032",
        "repository_url": "https://api.github.com/repos/spotify/luigi",
        "labels_url": "https://api.github.com/repos/spotify/luigi/issues/2032/labels{/name}",
        "comments_url": "https://api.github.com/repos/spotify/luigi/issues/2032/comments",
        "events_url": "https://api.github.com/repos/spotify/luigi/issues/2032/events",
        "html_url": "https://github.com/spotify/luigi/pull/2032",
        "id": 207309331,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTA1OTU3ODIw",
        "number": 2032,
        "title": "Introduce Python3 compatibility in example",
        "user": {
            "login": "amarco90",
            "id": 1711369,
            "node_id": "MDQ6VXNlcjE3MTEzNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1711369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amarco90",
            "html_url": "https://github.com/amarco90",
            "followers_url": "https://api.github.com/users/amarco90/followers",
            "following_url": "https://api.github.com/users/amarco90/following{/other_user}",
            "gists_url": "https://api.github.com/users/amarco90/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amarco90/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amarco90/subscriptions",
            "organizations_url": "https://api.github.com/users/amarco90/orgs",
            "repos_url": "https://api.github.com/users/amarco90/repos",
            "events_url": "https://api.github.com/users/amarco90/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amarco90/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-02-13T19:03:55Z",
        "updated_at": "2017-02-14T04:53:34Z",
        "closed_at": "2017-02-14T04:53:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/spotify/luigi/pulls/2032",
            "html_url": "https://github.com/spotify/luigi/pull/2032",
            "diff_url": "https://github.com/spotify/luigi/pull/2032.diff",
            "patch_url": "https://github.com/spotify/luigi/pull/2032.patch"
        },
        "body": "The example in `examples/foo_complex.py` does not work in Python3 due to the division operator.\r\n\r\n## Description\r\nI fixed the error by importing the division operator from `__future__` and using the integer division operator (`//`).\r\n\r\n## Motivation and Context\r\nWhen running the example using Python3 I was getting the following error:\r\n\r\n      File \"/Users/amarco/Desktop/luigi/examples/foo_complex.py\", line 64, in requires\r\n        for i in range(valor / max_depth):\r\n    TypeError: 'float' object cannot be interpreted as an integer\r\n\r\n## Have you tested this? If so, how?\r\nI ran the example task and it completed successfully:\r\n\r\n    ===== Luigi Execution Summary =====\r\n    Scheduled 51 tasks of which:\r\n    * 51 ran successfully:\r\n        - 50 examples.Bar(num=0,1,10,11,12,13,14,15,16,17,18,...)\r\n        - 1 examples.Foo()\r\n\r\n    This progress looks :) because there were no failed tasks or missing external dependencies\r\n    ===== Luigi Execution Summary =====",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/spotify/luigi/issues/1836",
        "repository_url": "https://api.github.com/repos/spotify/luigi",
        "labels_url": "https://api.github.com/repos/spotify/luigi/issues/1836/labels{/name}",
        "comments_url": "https://api.github.com/repos/spotify/luigi/issues/1836/comments",
        "events_url": "https://api.github.com/repos/spotify/luigi/issues/1836/events",
        "html_url": "https://github.com/spotify/luigi/pull/1836",
        "id": 174222232,
        "node_id": "MDExOlB1bGxSZXF1ZXN0ODM0MTQ3MzQ=",
        "number": 1836,
        "title": "Properly use Python3's buffer interface.",
        "user": {
            "login": "sceeter89",
            "id": 6024799,
            "node_id": "MDQ6VXNlcjYwMjQ3OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6024799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sceeter89",
            "html_url": "https://github.com/sceeter89",
            "followers_url": "https://api.github.com/users/sceeter89/followers",
            "following_url": "https://api.github.com/users/sceeter89/following{/other_user}",
            "gists_url": "https://api.github.com/users/sceeter89/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sceeter89/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sceeter89/subscriptions",
            "organizations_url": "https://api.github.com/users/sceeter89/orgs",
            "repos_url": "https://api.github.com/users/sceeter89/repos",
            "events_url": "https://api.github.com/users/sceeter89/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sceeter89/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2016-08-31T09:09:58Z",
        "updated_at": "2016-09-05T02:19:48Z",
        "closed_at": "2016-09-05T02:19:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/spotify/luigi/pulls/1836",
            "html_url": "https://github.com/spotify/luigi/pull/1836",
            "diff_url": "https://github.com/spotify/luigi/pull/1836.diff",
            "patch_url": "https://github.com/spotify/luigi/pull/1836.patch"
        },
        "body": "## Description\n\nWhen using `luigi` with Python 3 there is issue running PigTask. Because output in `track_and_progress` is both read to unicode string and copied to temporary file, it failed as conversion to string happens before writing to file. I simply moved decoding after writing to temporary file.\n## Motivation and Context\n\nWithout this change, running PigTask ended with following error:\n\n>   File \"/projects/big-data/luigi-tasks/libs/pig_task.py\", line 57, in on_execute\n>    PigTask.run(self)\n>  File \"/home/etl/.projects/big-data/lib/python3.4/site-packages/luigi/contrib/pig.py\", line 127, in run\n>    self.track_and_progress(cmd)\n>  File \"/home/etl/.projects/big-data/lib/python3.4/site-packages/luigi/contrib/pig.py\", line 149, in >track_and_progress\n>    temp_stdout.write(line)\n> TypeError: 'str' does not support the buffer interface\n\nAnd while Pig script finished successfully, `luigi` marked it as failed.\n## Have you tested this? If so, how?\n\nAfter making this change locally our Pig scripts run without issues using Python3.4\n",
        "performed_via_github_app": null,
        "score": 1.0
    }
]