[
    {
        "url": "https://api.github.com/repos/pypa/pipenv/issues/4267",
        "repository_url": "https://api.github.com/repos/pypa/pipenv",
        "labels_url": "https://api.github.com/repos/pypa/pipenv/issues/4267/labels{/name}",
        "comments_url": "https://api.github.com/repos/pypa/pipenv/issues/4267/comments",
        "events_url": "https://api.github.com/repos/pypa/pipenv/issues/4267/events",
        "html_url": "https://github.com/pypa/pipenv/pull/4267",
        "id": 624353614,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyNzk0MzI5",
        "number": 4267,
        "title": "Make sure to import the vendored attrs",
        "user": {
            "login": "torsava",
            "id": 17247852,
            "node_id": "MDQ6VXNlcjE3MjQ3ODUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17247852?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/torsava",
            "html_url": "https://github.com/torsava",
            "followers_url": "https://api.github.com/users/torsava/followers",
            "following_url": "https://api.github.com/users/torsava/following{/other_user}",
            "gists_url": "https://api.github.com/users/torsava/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/torsava/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/torsava/subscriptions",
            "organizations_url": "https://api.github.com/users/torsava/orgs",
            "repos_url": "https://api.github.com/users/torsava/repos",
            "events_url": "https://api.github.com/users/torsava/events{/privacy}",
            "received_events_url": "https://api.github.com/users/torsava/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1093609756,
                "node_id": "MDU6TGFiZWwxMDkzNjA5NzU2",
                "url": "https://api.github.com/repos/pypa/pipenv/labels/Type:%20Release%20Blocker",
                "name": "Type: Release Blocker",
                "color": "c62828",
                "default": false,
                "description": "Must be resolved before the next release can be cut."
            },
            {
                "id": 917361115,
                "node_id": "MDU6TGFiZWw5MTczNjExMTU=",
                "url": "https://api.github.com/repos/pypa/pipenv/labels/Type:%20Vendored%20Dependencies",
                "name": "Type: Vendored Dependencies",
                "color": "fb8c00",
                "default": false,
                "description": "This issue affects vendored dependencies within pipenv."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-25T15:03:58Z",
        "updated_at": "2020-05-28T03:15:16Z",
        "closed_at": "2020-05-28T03:15:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/pypa/pipenv/pulls/4267",
            "html_url": "https://github.com/pypa/pipenv/pull/4267",
            "diff_url": "https://github.com/pypa/pipenv/pull/4267.diff",
            "patch_url": "https://github.com/pypa/pipenv/pull/4267.patch"
        },
        "body": "### The issue\r\n\r\nThe `attrs` module is vendored in pipenv, but when the package is installed on the system, the system version is imported first, and fails if the version is different.\r\n\r\nWe found this issue in Fedora, where we have python-attrs-19.1.0, which causes a failure because version 19.3.0 is expected (and vendored):\r\n\r\n    >   @attr.s(slots=True, eq=True, hash=True)\r\n        class SetupInfo(object):\r\n    E   TypeError: attrs() got an unexpected keyword argument 'eq'\r\n    pipenv/vendor/requirementslib/models/setup_info.py:1341: TypeError\r\n\r\n### The fix\r\n\r\nI've implemented a patch in Fedora that instead of `import attr` uses `from pipenv.vendor import attr`. I think it be useful upstream too, so I opened this PR.\r\n\r\nNews fragment is probably not necessary, but I can provide one if prompted.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/pypa/pipenv/issues/3314",
        "repository_url": "https://api.github.com/repos/pypa/pipenv",
        "labels_url": "https://api.github.com/repos/pypa/pipenv/issues/3314/labels{/name}",
        "comments_url": "https://api.github.com/repos/pypa/pipenv/issues/3314/comments",
        "events_url": "https://api.github.com/repos/pypa/pipenv/issues/3314/events",
        "html_url": "https://github.com/pypa/pipenv/pull/3314",
        "id": 384881958,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjMzOTc5NDYx",
        "number": 3314,
        "title": "Pass self when calling base class constructor.",
        "user": {
            "login": "vthirumale",
            "id": 38009368,
            "node_id": "MDQ6VXNlcjM4MDA5MzY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/38009368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vthirumale",
            "html_url": "https://github.com/vthirumale",
            "followers_url": "https://api.github.com/users/vthirumale/followers",
            "following_url": "https://api.github.com/users/vthirumale/following{/other_user}",
            "gists_url": "https://api.github.com/users/vthirumale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vthirumale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vthirumale/subscriptions",
            "organizations_url": "https://api.github.com/users/vthirumale/orgs",
            "repos_url": "https://api.github.com/users/vthirumale/repos",
            "events_url": "https://api.github.com/users/vthirumale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vthirumale/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2018-11-27T16:34:36Z",
        "updated_at": "2019-08-19T19:14:26Z",
        "closed_at": "2018-11-27T17:19:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/pypa/pipenv/pulls/3314",
            "html_url": "https://github.com/pypa/pipenv/pull/3314",
            "diff_url": "https://github.com/pypa/pipenv/pull/3314.diff",
            "patch_url": "https://github.com/pypa/pipenv/pull/3314.patch"
        },
        "body": "\r\n### The issue\r\nThere is a bug, `self` missing self when calling base class constructor.\r\n\r\nWhat is the thing you want to fix? Is it associated with an issue on GitHub? Please mention it.\r\n```\r\n   File \"/usr/local/lib/python2.7/site-packages/pipenv/exceptions.py\", line 168, in __init__\r\n     PipenvUsageError.__init__(message=fix_utf8(message), extra=extra, **kwargs)\r\n  TypeError: unbound method __init__() must be called with PipenvUsageError instance as first argument (got nothing instead)\r\n```\r\n### The fix\r\n\r\nHow does this pull request fix your problem? Did you consider any alternatives? Why is this the *best* solution, in your opinion?\r\n\r\nPass in `self` as the first argument.\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/pypa/pipenv/issues/3384",
        "repository_url": "https://api.github.com/repos/pypa/pipenv",
        "labels_url": "https://api.github.com/repos/pypa/pipenv/issues/3384/labels{/name}",
        "comments_url": "https://api.github.com/repos/pypa/pipenv/issues/3384/comments",
        "events_url": "https://api.github.com/repos/pypa/pipenv/issues/3384/events",
        "html_url": "https://github.com/pypa/pipenv/pull/3384",
        "id": 391264390,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4ODMwODY5",
        "number": 3384,
        "title": "Fix unhashable type error in --selective-upgrade",
        "user": {
            "login": "alexallah",
            "id": 106136,
            "node_id": "MDQ6VXNlcjEwNjEzNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/106136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexallah",
            "html_url": "https://github.com/alexallah",
            "followers_url": "https://api.github.com/users/alexallah/followers",
            "following_url": "https://api.github.com/users/alexallah/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexallah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexallah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexallah/subscriptions",
            "organizations_url": "https://api.github.com/users/alexallah/orgs",
            "repos_url": "https://api.github.com/users/alexallah/repos",
            "events_url": "https://api.github.com/users/alexallah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexallah/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-12-14T20:14:24Z",
        "updated_at": "2018-12-15T13:54:32Z",
        "closed_at": "2018-12-15T13:54:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/pypa/pipenv/pulls/3384",
            "html_url": "https://github.com/pypa/pipenv/pull/3384",
            "diff_url": "https://github.com/pypa/pipenv/pull/3384.diff",
            "patch_url": "https://github.com/pypa/pipenv/pull/3384.patch"
        },
        "body": "### The issue\r\n\r\npipenv install PACKAGE_NAME --selective-upgrade crashes with unhashable type: 'list\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/pipenv\", line 11, in <module>\r\n    sys.exit(cli())\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/click/core.py\", line 1137, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/click/decorators.py\", line 64, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/vendor/click/decorators.py\", line 17, in new_func\r\n    return f(get_current_context(), *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/cli/command.py\", line 249, in install\r\n    editable_packages=state.installstate.editables,\r\n  File \"/usr/local/lib/python3.7/site-packages/pipenv/core.py\", line 1855, in do_install\r\n    {packages: section[package__name]}, project=project, r=False\r\nTypeError: unhashable type: 'list'\r\n```\r\n\r\n`packages` variable can not have type list. It looks like we should pass only a package name instead.\r\n\r\n### The fix\r\n\r\nGet the package name and pass it into the function.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/pypa/pipenv/issues/36",
        "repository_url": "https://api.github.com/repos/pypa/pipenv",
        "labels_url": "https://api.github.com/repos/pypa/pipenv/issues/36/labels{/name}",
        "comments_url": "https://api.github.com/repos/pypa/pipenv/issues/36/comments",
        "events_url": "https://api.github.com/repos/pypa/pipenv/issues/36/events",
        "html_url": "https://github.com/pypa/pipenv/pull/36",
        "id": 202480497,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTAyNjgwOTM2",
        "number": 36,
        "title": "Don't throw a TypeError for requirements.txt in Python 3",
        "user": {
            "login": "alexwlchan",
            "id": 301220,
            "node_id": "MDQ6VXNlcjMwMTIyMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/301220?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexwlchan",
            "html_url": "https://github.com/alexwlchan",
            "followers_url": "https://api.github.com/users/alexwlchan/followers",
            "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions",
            "organizations_url": "https://api.github.com/users/alexwlchan/orgs",
            "repos_url": "https://api.github.com/users/alexwlchan/repos",
            "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexwlchan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-01-23T09:17:18Z",
        "updated_at": "2018-05-19T18:51:18Z",
        "closed_at": "2017-01-23T18:14:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/pypa/pipenv/pulls/36",
            "html_url": "https://github.com/pypa/pipenv/pull/36",
            "diff_url": "https://github.com/pypa/pipenv/pull/36.diff",
            "patch_url": "https://github.com/pypa/pipenv/pull/36.patch"
        },
        "body": "Opening the file as `r` instead or `rb` ensures that we don't have\r\nany implicit encoding/decoding of strings (so Python 3 is happy).\r\nIncludes a test that passes on both Python 2 and Python 3 which\r\nchecks this works correctly.\r\n\r\n~This fixes #27.~\r\n\r\nI can\u2019t distinguish numbers, it fixes **#25**.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/pypa/pipenv/issues/1533",
        "repository_url": "https://api.github.com/repos/pypa/pipenv",
        "labels_url": "https://api.github.com/repos/pypa/pipenv/issues/1533/labels{/name}",
        "comments_url": "https://api.github.com/repos/pypa/pipenv/issues/1533/comments",
        "events_url": "https://api.github.com/repos/pypa/pipenv/issues/1533/events",
        "html_url": "https://github.com/pypa/pipenv/pull/1533",
        "id": 301973535,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyNjUzMzU2",
        "number": 1533,
        "title": "Fix dependency list type mismatch",
        "user": {
            "login": "tekulvw",
            "id": 3731082,
            "node_id": "MDQ6VXNlcjM3MzEwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3731082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tekulvw",
            "html_url": "https://github.com/tekulvw",
            "followers_url": "https://api.github.com/users/tekulvw/followers",
            "following_url": "https://api.github.com/users/tekulvw/following{/other_user}",
            "gists_url": "https://api.github.com/users/tekulvw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tekulvw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tekulvw/subscriptions",
            "organizations_url": "https://api.github.com/users/tekulvw/orgs",
            "repos_url": "https://api.github.com/users/tekulvw/repos",
            "events_url": "https://api.github.com/users/tekulvw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tekulvw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-03-03T06:26:12Z",
        "updated_at": "2018-05-19T18:52:25Z",
        "closed_at": "2018-03-03T12:09:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/pypa/pipenv/pulls/1533",
            "html_url": "https://github.com/pypa/pipenv/pull/1533",
            "diff_url": "https://github.com/pypa/pipenv/pull/1533.diff",
            "patch_url": "https://github.com/pypa/pipenv/pull/1533.patch"
        },
        "body": "When the dependency list got sorted in 6261122d (current line 828) you'd start getting `TypeError` when the code on line 823 executed because it changed the dependency tuple to a dependency list.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/pypa/pipenv/issues/1244",
        "repository_url": "https://api.github.com/repos/pypa/pipenv",
        "labels_url": "https://api.github.com/repos/pypa/pipenv/issues/1244/labels{/name}",
        "comments_url": "https://api.github.com/repos/pypa/pipenv/issues/1244/comments",
        "events_url": "https://api.github.com/repos/pypa/pipenv/issues/1244/events",
        "html_url": "https://github.com/pypa/pipenv/pull/1244",
        "id": 284253789,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTU5OTM0ODUz",
        "number": 1244,
        "title": "Fix ensure_project bug on windows when missing pipfile",
        "user": {
            "login": "techalchemy",
            "id": 954310,
            "node_id": "MDQ6VXNlcjk1NDMxMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/954310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/techalchemy",
            "html_url": "https://github.com/techalchemy",
            "followers_url": "https://api.github.com/users/techalchemy/followers",
            "following_url": "https://api.github.com/users/techalchemy/following{/other_user}",
            "gists_url": "https://api.github.com/users/techalchemy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/techalchemy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/techalchemy/subscriptions",
            "organizations_url": "https://api.github.com/users/techalchemy/orgs",
            "repos_url": "https://api.github.com/users/techalchemy/repos",
            "events_url": "https://api.github.com/users/techalchemy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/techalchemy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-12-22T21:18:30Z",
        "updated_at": "2018-05-19T18:52:11Z",
        "closed_at": "2018-01-11T19:15:15Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/pypa/pipenv/pulls/1244",
            "html_url": "https://github.com/pypa/pipenv/pull/1244",
            "diff_url": "https://github.com/pypa/pipenv/pull/1244.diff",
            "patch_url": "https://github.com/pypa/pipenv/pull/1244.patch"
        },
        "body": "- New bug introduced by #1221 throws an error when running `pipenv install` on windows in a directory with no pipfile\r\n- This also updates the relevant tests to normalize paths for assertions to pass on appveyor\r\n- I just set up my own appveyor with a webhook so test failures caught this\r\n\r\n\r\n`Project.pipfile_location` is calling `utils.normalize_drive(loc)` even when `loc = None`, which throws the following error:\r\n\r\n```python\r\nFile \"C:\\projects\\pipenv-jqd6x\\pipenv\\cli.py\", line 1766, in install\r\n    ensure_project(three=three, python=python, system=system, warn=True, deploy=deploy)\r\n  File \"C:\\projects\\pipenv-jqd6x\\pipenv\\cli.py\", line 607, in ensure_project\r\n    if not project.pipfile_exists:\r\n  File \"C:\\projects\\pipenv-jqd6x\\pipenv\\project.py\", line 99, in pipfile_exists\r\n    return bool(self.pipfile_location)\r\n  File \"C:\\projects\\pipenv-jqd6x\\pipenv\\project.py\", line 227, in pipfile_location\r\n    self._pipfile_location = normalize_drive(loc)\r\n  File \"C:\\projects\\pipenv-jqd6x\\pipenv\\utils.py\", line 1200, in normalize_drive\r\n    drive, tail = os.path.splitdrive(path)\r\n  File \"c:\\python27-x64\\lib\\ntpath.py\", line 115, in splitdrive\r\n    if len(p) > 1:\r\nTypeError: object of type 'NoneType' has no len()\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/pypa/pipenv/issues/367",
        "repository_url": "https://api.github.com/repos/pypa/pipenv",
        "labels_url": "https://api.github.com/repos/pypa/pipenv/issues/367/labels{/name}",
        "comments_url": "https://api.github.com/repos/pypa/pipenv/issues/367/comments",
        "events_url": "https://api.github.com/repos/pypa/pipenv/issues/367/events",
        "html_url": "https://github.com/pypa/pipenv/pull/367",
        "id": 229876857,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTIxNDI5MjMz",
        "number": 367,
        "title": "Use sys.path.insert(1, v_path) instead of sys.path.append(v_path)",
        "user": {
            "login": "nonylene",
            "id": 7397316,
            "node_id": "MDQ6VXNlcjczOTczMTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7397316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nonylene",
            "html_url": "https://github.com/nonylene",
            "followers_url": "https://api.github.com/users/nonylene/followers",
            "following_url": "https://api.github.com/users/nonylene/following{/other_user}",
            "gists_url": "https://api.github.com/users/nonylene/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nonylene/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nonylene/subscriptions",
            "organizations_url": "https://api.github.com/users/nonylene/orgs",
            "repos_url": "https://api.github.com/users/nonylene/repos",
            "events_url": "https://api.github.com/users/nonylene/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nonylene/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-05-19T05:47:06Z",
        "updated_at": "2018-05-19T18:51:32Z",
        "closed_at": "2017-05-19T13:58:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/pypa/pipenv/pulls/367",
            "html_url": "https://github.com/pypa/pipenv/pull/367",
            "diff_url": "https://github.com/pypa/pipenv/pull/367.diff",
            "patch_url": "https://github.com/pypa/pipenv/pull/367.patch"
        },
        "body": "Packages under `pipenv/vendor` should be used than that installed by pip.\r\n\r\nThis will resolve package conflict issues like https://github.com/kennethreitz/pipenv/issues/355.\r\n\r\n`pipenv/vendor`  will be inserted into `sys.path` after the script directory.\r\n\r\ncf. https://docs.python.org/3/library/sys.html#sys.path, http://stackoverflow.com/a/10097543\r\n\r\n## Before\r\n\r\n```console\r\n$ pip3 install click==0.4\r\n$ pipenv\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/pipenv\", line 11, in <module>\r\n    load_entry_point('pipenv==4.0.1', 'console_scripts', 'pipenv')()\r\n  File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 560, in load_entry_point\r\n    return get_distribution(dist).load_entry_point(group, name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 2648, in load_entry_point\r\n    return ep.load()\r\n  File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 2302, in load\r\n    return self.resolve()\r\n  File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 2308, in resolve\r\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n  File \"/usr/local/lib/python3.5/dist-packages/pipenv/__init__.py\", line 14, in <module>\r\n    from .cli import cli\r\n  File \"/usr/local/lib/python3.5/dist-packages/pipenv/cli.py\", line 955, in <module>\r\n    def shell(three=None, python=False, compat=False, shell_args=None):\r\n  File \"/usr/local/lib/python3.5/dist-packages/click/decorators.py\", line 108, in decorator\r\n    return _make_command(f, name, attrs, cls)\r\n  File \"/usr/local/lib/python3.5/dist-packages/click/decorators.py\", line 82, in _make_command\r\n    callback=f, params=params, **attrs)\r\nTypeError: __init__() got an unexpected keyword argument 'context_settings'\r\nzsh: exit 1     pipenv\r\n```\r\n\r\n## After\r\n\r\n```\r\n$ pip3 install click==0.4\r\n$ pipenv\r\nUsage: pipenv [OPTIONS] COMMAND [ARGS]...\r\n\r\nOptions:\r\n  --where          Output project home information.\r\n  --venv           Output virtualenv information.\r\n  --rm             Remove the virtualenv.\r\n...\r\n```\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/pypa/pipenv/issues/97",
        "repository_url": "https://api.github.com/repos/pypa/pipenv",
        "labels_url": "https://api.github.com/repos/pypa/pipenv/issues/97/labels{/name}",
        "comments_url": "https://api.github.com/repos/pypa/pipenv/issues/97/comments",
        "events_url": "https://api.github.com/repos/pypa/pipenv/issues/97/events",
        "html_url": "https://github.com/pypa/pipenv/pull/97",
        "id": 203186044,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTAzMTc3Njg4",
        "number": 97,
        "title": "handle bad package names more gracefully",
        "user": {
            "login": "nateprewitt",
            "id": 5271761,
            "node_id": "MDQ6VXNlcjUyNzE3NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5271761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nateprewitt",
            "html_url": "https://github.com/nateprewitt",
            "followers_url": "https://api.github.com/users/nateprewitt/followers",
            "following_url": "https://api.github.com/users/nateprewitt/following{/other_user}",
            "gists_url": "https://api.github.com/users/nateprewitt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nateprewitt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nateprewitt/subscriptions",
            "organizations_url": "https://api.github.com/users/nateprewitt/orgs",
            "repos_url": "https://api.github.com/users/nateprewitt/repos",
            "events_url": "https://api.github.com/users/nateprewitt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nateprewitt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-01-25T18:37:24Z",
        "updated_at": "2018-05-19T18:51:20Z",
        "closed_at": "2017-01-25T18:38:01Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/pypa/pipenv/pulls/97",
            "html_url": "https://github.com/pypa/pipenv/pull/97",
            "diff_url": "https://github.com/pypa/pipenv/pull/97.diff",
            "patch_url": "https://github.com/pypa/pipenv/pull/97.patch"
        },
        "body": "This addresses an issue of trying to install bad package names which is tangential to, but possibly not completely covering, #95. I'm not sure if you'd like this to be resilient or hit a hard stop if it encounters a package it can't find.\r\n\r\nCurrent repro:\r\n\r\n```bash\r\n>>> pipenv install notreal\r\nTraceback (most recent call last):\r\n  File \"/Users/a/Work/OpenSource/sauna-test/.venv/bin/pipenv\", line 11, in <module>\r\n    load_entry_point('pipenv==3.1.9', 'console_scripts', 'pipenv')()\r\n  File \"/Users/a/Work/OpenSource/sauna-test/.venv/lib/python3.6/site-packages/click/core.py\", line 722, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Users/a/Work/OpenSource/sauna-test/.venv/lib/python3.6/site-packages/click/core.py\", line 697, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/a/Work/OpenSource/sauna-test/.venv/lib/python3.6/site-packages/click/core.py\", line 1066, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Users/a/Work/OpenSource/sauna-test/.venv/lib/python3.6/site-packages/click/core.py\", line 895, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/a/Work/OpenSource/sauna-test/.venv/lib/python3.6/site-packages/click/core.py\", line 535, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Users/a/Work/OpenSource/sauna-test/.venv/lib/python3.6/site-packages/pipenv-3.1.9-py3.6.egg/pipenv/cli.py\", line 533, in install\r\n    new_name = proper_case(old_name)\r\n  File \"/Users/a/Work/OpenSource/sauna-test/.venv/lib/python3.6/site-packages/pipenv-3.1.9-py3.6.egg/pipenv/cli.py\", line 425, in proper_case\r\n    return parse_download_fname(collected[-1])[0]\r\n  File \"/Users/a/Work/OpenSource/sauna-test/.venv/lib/python3.6/site-packages/pipenv-3.1.9-py3.6.egg/pipenv/cli.py\", line 219, in parse_download_fname\r\n    name = r['name']\r\nTypeError: 'NoneType' object is not subscriptable\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/pypa/pipenv/issues/2018",
        "repository_url": "https://api.github.com/repos/pypa/pipenv",
        "labels_url": "https://api.github.com/repos/pypa/pipenv/issues/2018/labels{/name}",
        "comments_url": "https://api.github.com/repos/pypa/pipenv/issues/2018/comments",
        "events_url": "https://api.github.com/repos/pypa/pipenv/issues/2018/events",
        "html_url": "https://github.com/pypa/pipenv/pull/2018",
        "id": 315429269,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTgyNDQwMDA1",
        "number": 2018,
        "title": "Parse pypy3 version string containing multiple lines",
        "user": {
            "login": "eckardt",
            "id": 52346,
            "node_id": "MDQ6VXNlcjUyMzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/52346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eckardt",
            "html_url": "https://github.com/eckardt",
            "followers_url": "https://api.github.com/users/eckardt/followers",
            "following_url": "https://api.github.com/users/eckardt/following{/other_user}",
            "gists_url": "https://api.github.com/users/eckardt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eckardt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eckardt/subscriptions",
            "organizations_url": "https://api.github.com/users/eckardt/orgs",
            "repos_url": "https://api.github.com/users/eckardt/repos",
            "events_url": "https://api.github.com/users/eckardt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eckardt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-04-18T10:51:14Z",
        "updated_at": "2018-05-19T18:52:51Z",
        "closed_at": "2018-04-18T11:18:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/pypa/pipenv/pulls/2018",
            "html_url": "https://github.com/pypa/pipenv/pull/2018",
            "diff_url": "https://github.com/pypa/pipenv/pull/2018.diff",
            "patch_url": "https://github.com/pypa/pipenv/pull/2018.patch"
        },
        "body": "Thanks for this great tool. It makes using python much more fun.\r\n\r\nI ran into the following issue when attempting to use it with pypy3.\r\n\r\n```\r\n$ pipenv --python /usr/local/bin/pypy3\r\nCreating a virtualenv for this project\u2026\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/bin/pipenv\", line 11, in <module>\r\n    load_entry_point('pipenv==11.10.0', 'console_scripts', 'pipenv')()\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 722, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 697, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 1043, in invoke\r\n    return Command.invoke(self, ctx)\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 895, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/vendor/click/core.py\", line 535, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/vendor/click/decorators.py\", line 17, in new_func\r\n    return f(get_current_context(), *args, **kwargs)\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/cli.py\", line 235, in cli\r\n    three=three, python=python, warn=True, site_packages=site_packages\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/core.py\", line 604, in ensure_project\r\n    three=three, python=python, site_packages=site_packages\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/core.py\", line 553, in ensure_virtualenv\r\n    do_create_virtualenv(python=python, site_packages=site_packages)\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/core.py\", line 901, in do_create_virtualenv\r\n    crayons.green('({0})'.format(python_version(python))),\r\n  File \"/usr/local/Cellar/pipenv/11.10.0/libexec/lib/python3.6/site-packages/pipenv/utils.py\", line 218, in python_version\r\n    return u'{major}.{minor}.{micro}'.format(**version)\r\nTypeError: format() argument after ** must be a mapping, not NoneType\r\n```\r\n\r\nIt looks like the version string generated from pypy3 is unexpected because it contains multiple lines.\r\n\r\n```\r\n$ /usr/local/bin/pypy3 --version\r\nPython 3.5.3 (3f6eaa010fce78cc7973bdc1dfdb95970f08fed2, Jan 13 2018, 18:14:01)\r\n[PyPy 5.10.1 with GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)]\r\n```\r\n\r\nPEP 440 at https://www.python.org/dev/peps/pep-0440/ is not very specific when it comes to the question of having more than one line as the version string, but we can just consider the first line only.",
        "performed_via_github_app": null,
        "score": 1.0
    }
]