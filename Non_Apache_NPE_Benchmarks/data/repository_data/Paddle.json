[
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/19970",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/19970/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/19970/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/19970/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/19970",
        "id": 497634834,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzIwNzI1MzY2",
        "number": 19970,
        "title": "refine error message of input TypeError in framework.py",
        "user": {
            "login": "luotao1",
            "id": 6836917,
            "node_id": "MDQ6VXNlcjY4MzY5MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6836917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luotao1",
            "html_url": "https://github.com/luotao1",
            "followers_url": "https://api.github.com/users/luotao1/followers",
            "following_url": "https://api.github.com/users/luotao1/following{/other_user}",
            "gists_url": "https://api.github.com/users/luotao1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luotao1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luotao1/subscriptions",
            "organizations_url": "https://api.github.com/users/luotao1/orgs",
            "repos_url": "https://api.github.com/users/luotao1/repos",
            "events_url": "https://api.github.com/users/luotao1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luotao1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-09-24T11:43:43Z",
        "updated_at": "2021-05-28T02:34:00Z",
        "closed_at": "2019-10-15T11:43:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/19970",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/19970",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/19970.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/19970.patch"
        },
        "body": "### Error example:\r\n```\r\nx = fluid.layers.data(name='x', shape=[1], dtype=\"float32\")\r\ny = fluid.create_lod_tensor(numpy.array([[-1]]), [[1]], fluid.CPUPlace())\r\nfluid.layers.greater_equal(x, y)\r\n```\r\n### before result:\r\n```\r\nValueError: not suprt args type , should be[ string_type, binary_type, Varibale]\r\n```\r\nThere are several errors in this message:\r\n  - It's not ValueError, but TypeError\r\n  - Typo: suprt->support, Varibale->Variable\r\n  - Don't show the current args type, and don't show which is string_type or binary_type\r\n### After result:\r\n```\r\nTypeError: (u'The type of \u2018Y\u2019 in operator greater_equal should be one of [basestring(), str, Varibale] in python2, or one of [str, bytes, Variable] in python3.but received : ', \r\n<paddle.fluid.core_avx.LoDTensor object at 0x5f56f48>)\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/25788",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/25788/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/25788/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/25788/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/25788",
        "id": 667529781,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDU4MTc4OTI4",
        "number": 25788,
        "title": "fix error in convert_dtype: ValueError->TypeError and polish message",
        "user": {
            "login": "liym27",
            "id": 33742067,
            "node_id": "MDQ6VXNlcjMzNzQyMDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/33742067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liym27",
            "html_url": "https://github.com/liym27",
            "followers_url": "https://api.github.com/users/liym27/followers",
            "following_url": "https://api.github.com/users/liym27/following{/other_user}",
            "gists_url": "https://api.github.com/users/liym27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liym27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liym27/subscriptions",
            "organizations_url": "https://api.github.com/users/liym27/orgs",
            "repos_url": "https://api.github.com/users/liym27/repos",
            "events_url": "https://api.github.com/users/liym27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liym27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-29T04:02:09Z",
        "updated_at": "2020-12-09T03:49:27Z",
        "closed_at": "2020-07-30T02:34:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/25788",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/25788",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/25788.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/25788.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nBug fixes\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nOthers\r\n### Describe\r\n<!-- Describe what this PR does -->\r\nfix error in convert_dtype: ValueError->TypeError and polish message\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27019",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27019/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27019/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27019/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/27019",
        "id": 692668190,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDc5MjQ1NDg5",
        "number": 27019,
        "title": "Remove \"TypeError\" from some files as required",
        "user": {
            "login": "wangchaochaohu",
            "id": 13411999,
            "node_id": "MDQ6VXNlcjEzNDExOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13411999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangchaochaohu",
            "html_url": "https://github.com/wangchaochaohu",
            "followers_url": "https://api.github.com/users/wangchaochaohu/followers",
            "following_url": "https://api.github.com/users/wangchaochaohu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangchaochaohu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangchaochaohu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangchaochaohu/subscriptions",
            "organizations_url": "https://api.github.com/users/wangchaochaohu/orgs",
            "repos_url": "https://api.github.com/users/wangchaochaohu/repos",
            "events_url": "https://api.github.com/users/wangchaochaohu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangchaochaohu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-09-04T03:41:42Z",
        "updated_at": "2020-09-04T13:55:51Z",
        "closed_at": "2020-09-04T13:55:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/27019",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/27019",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/27019.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/27019.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nOthers \r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nOthers \r\n### Describe\r\n<!-- Describe what this PR does -->\r\nremove raise ",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27066",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27066/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27066/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27066/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/27066",
        "id": 693271351,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDc5Nzc2MTk4",
        "number": 27066,
        "title": "[cherry-pick]Remove \"TypeError\" from some files as required (#27019)",
        "user": {
            "login": "wangchaochaohu",
            "id": 13411999,
            "node_id": "MDQ6VXNlcjEzNDExOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13411999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangchaochaohu",
            "html_url": "https://github.com/wangchaochaohu",
            "followers_url": "https://api.github.com/users/wangchaochaohu/followers",
            "following_url": "https://api.github.com/users/wangchaochaohu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangchaochaohu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangchaochaohu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangchaochaohu/subscriptions",
            "organizations_url": "https://api.github.com/users/wangchaochaohu/orgs",
            "repos_url": "https://api.github.com/users/wangchaochaohu/repos",
            "events_url": "https://api.github.com/users/wangchaochaohu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangchaochaohu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-09-04T15:06:16Z",
        "updated_at": "2020-09-05T03:05:03Z",
        "closed_at": "2020-09-05T03:05:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/27066",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/27066",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/27066.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/27066.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nOthers\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nDocs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\ncherry-pick https://github.com/PaddlePaddle/FluidDoc/pull/2540",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28319",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28319/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28319/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28319/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/28319",
        "id": 732823595,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTEyNzA5Njc3",
        "number": 28319,
        "title": "add log2 operator",
        "user": {
            "login": "Joejiong",
            "id": 18322401,
            "node_id": "MDQ6VXNlcjE4MzIyNDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18322401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Joejiong",
            "html_url": "https://github.com/Joejiong",
            "followers_url": "https://api.github.com/users/Joejiong/followers",
            "following_url": "https://api.github.com/users/Joejiong/following{/other_user}",
            "gists_url": "https://api.github.com/users/Joejiong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Joejiong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Joejiong/subscriptions",
            "organizations_url": "https://api.github.com/users/Joejiong/orgs",
            "repos_url": "https://api.github.com/users/Joejiong/repos",
            "events_url": "https://api.github.com/users/Joejiong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Joejiong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-10-30T02:04:13Z",
        "updated_at": "2020-11-12T06:33:02Z",
        "closed_at": "2020-11-12T06:33:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/28319",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/28319",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/28319.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/28319.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nNew features\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nOPs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\nAdd new op log2 and its API.\r\nDoc preview:\r\n\r\n![image](https://user-images.githubusercontent.com/18322401/97986848-4c689180-1e15-11eb-89d7-f1eab8374324.png)\r\n\r\nUnitest:\r\n```\r\nclass TestLog2(TestActivation):\r\n    def setUp(self):\r\n        self.op_type = \"log2\"\r\n        self.init_dtype()\r\n\r\n        x = np.random.uniform(0.1, 1, [11, 17]).astype(self.dtype)\r\n        out = np.log2(x)\r\n\r\n        self.inputs = {'X': OpTest.np_dtype_to_fluid_dtype(x)}\r\n        self.outputs = {'Out': out}\r\n\r\n    def test_check_grad(self):\r\n        if self.dtype == np.float16:\r\n            return\r\n        self.check_grad(['X'], 'Out')\r\n\r\n    def test_error(self):\r\n        in1 = fluid.layers.data(\r\n            name=\"in1\", shape=[11, 17], append_batch_size=False, dtype=\"int32\")\r\n        in2 = fluid.layers.data(\r\n            name=\"in2\", shape=[11, 17], append_batch_size=False, dtype=\"int64\")\r\n\r\n        self.assertRaises(TypeError, fluid.layers.log2, in1)\r\n        self.assertRaises(TypeError, fluid.layers.log2, in2)\r\n\r\n    def test_api(self):\r\n        with fluid.program_guard(fluid.Program(), fluid.Program()):\r\n            input_x = np.random.uniform(0.1, 1, [11, 17]).astype(\"float64\")\r\n            data_x = fluid.layers.data(\r\n                name=\"data_x\",\r\n                shape=[11, 17],\r\n                append_batch_size=False,\r\n                dtype=\"float64\")\r\n\r\n            out1 = fluid.layers.log2(data_x)\r\n            exe = fluid.Executor(place=fluid.CPUPlace())\r\n            exe.run(fluid.default_startup_program())\r\n            res1 = exe.run(fluid.default_main_program(),\r\n                           feed={\"data_x\": input_x},\r\n                           fetch_list=[out1])\r\n        expected_res = np.log2(input_x)\r\n        self.assertTrue(np.allclose(res1, expected_res))\r\n\r\n        # dygraph\r\n        with fluid.dygraph.guard():\r\n            np_x = np.random.uniform(0.1, 1, [11, 17]).astype(\"float64\")\r\n            data_x = fluid.dygraph.to_variable(np_x)\r\n            z = fluid.layers.log2(data_x)\r\n            np_z = z.numpy()\r\n            z_expected = np.array(np.log2(np_x))\r\n        self.assertTrue(np.allclose(np_z, z_expected))\r\n```\r\n![image](https://user-images.githubusercontent.com/18322401/97651502-3c5c5500-1a97-11eb-8e6e-f8c5d1790cf0.png)\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28993",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28993/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28993/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28993/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/28993",
        "id": 748713830,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTI1NjU3NTMx",
        "number": 28993,
        "title": "[Dynamic-to-Static] Fix bug of convert_logical_and/convert_logical_or:  the operands are executed sequentially",
        "user": {
            "login": "liym27",
            "id": 33742067,
            "node_id": "MDQ6VXNlcjMzNzQyMDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/33742067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liym27",
            "html_url": "https://github.com/liym27",
            "followers_url": "https://api.github.com/users/liym27/followers",
            "following_url": "https://api.github.com/users/liym27/following{/other_user}",
            "gists_url": "https://api.github.com/users/liym27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liym27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liym27/subscriptions",
            "organizations_url": "https://api.github.com/users/liym27/orgs",
            "repos_url": "https://api.github.com/users/liym27/repos",
            "events_url": "https://api.github.com/users/liym27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liym27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-11-23T11:20:29Z",
        "updated_at": "2020-12-09T03:48:37Z",
        "closed_at": "2020-11-24T06:32:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/28993",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/28993",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/28993.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/28993.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nBug fixes\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nOthers\r\n### Describe\r\n<!-- Describe what this PR does -->\r\n\r\n#### 1. The operands are executed sequentially according to the running logic of Python. So here the arguments\r\nshould be callable.\r\n#### 2. If the left hand operand is True, the right hand operand should be executed.\r\n For example:\r\n    `a = x > 1 or y < 1`\r\nTransformed code:\r\n   ` a = paddle.jit.dy2static.convert_logical_or(lambda:x>1, lambda:y<1)`\r\n\r\n In `convert_logical_or(lambda:x>1, lambda:y<1)`, `lambda:y<1` must be run after `lambda:x>1`. And\r\nif `x>1` is True, `y<1` should NOT be run.\r\n\r\n---\r\n\r\n### Before this PR:\r\n\r\n#### Case 1:\r\n```python\r\n@paddle.jit.to_static\r\ndef test1():\r\n    a = None\r\n    if a is not None and a > 1:\r\n        x = x - 1\r\n    else:\r\n        x = x + 1\r\n\r\ntest1()\r\n```\r\n\r\nError:\r\n```python\r\nTypeError: unorderable types: NoneType() > int()\r\n```\r\nBecause `a > 1` is run,   but `a` is None and `a > 1`  should not have been run.\r\n\r\n\r\n#### Case 2:\r\n```python\r\n@paddle.jit.to_static\r\ndef test():\r\n    x = paddle.zeros([1])\r\n\r\n    a = None\r\n\r\n    if a is not None:\r\n        z = x+1\r\n\r\n    if a is not None and z < -1:\r\n        x = x - 1\r\n    return x\r\n\r\ntest2()\r\n```\r\n\r\nError:\r\n```python\r\nInvalidArgumentError: The Tensor in the less_than Op's Input Variable X(z) is not initialized.\r\n  [Hint: Expected t->IsInitialized() == true, but received t->IsInitialized():0 != true:1.] (at /home/teamcity/work/ef54dc8a5b211854/paddle/fluid/framework/operator.cc:1419)\r\n  [operator < less_than > error]  [operator < run_program > error]\r\n\r\n```\r\nBecause `z < -1` is run,  the OP `less_than`  is added in the program, but `z` is not initialized. Actually, `z < -1` should not have been run.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26490",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26490/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26490/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26490/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26490",
        "id": 682526283,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDcwNzUzMDY5",
        "number": 26490,
        "title": "fix logical related api; test=develop",
        "user": {
            "login": "Joejiong",
            "id": 18322401,
            "node_id": "MDQ6VXNlcjE4MzIyNDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18322401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Joejiong",
            "html_url": "https://github.com/Joejiong",
            "followers_url": "https://api.github.com/users/Joejiong/followers",
            "following_url": "https://api.github.com/users/Joejiong/following{/other_user}",
            "gists_url": "https://api.github.com/users/Joejiong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Joejiong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Joejiong/subscriptions",
            "organizations_url": "https://api.github.com/users/Joejiong/orgs",
            "repos_url": "https://api.github.com/users/Joejiong/repos",
            "events_url": "https://api.github.com/users/Joejiong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Joejiong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-08-20T08:29:57Z",
        "updated_at": "2020-08-24T09:35:49Z",
        "closed_at": "2020-08-24T09:35:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/26490",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26490",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/26490.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/26490.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\nFunction optimization\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\n\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\n APIs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\n\r\nLogic\u8fd0\u7b97\u5305\u62ec\u4ee5\u4e0b\u7b97\u5b50\uff1alogical_and\u3001logical_or\u3001logical_xor\r\n\r\n- \u4e0d\u652f\u6301broadcast\r\n- \u6309\u76ee\u524dpaddle\u4e0d\u652f\u6301braodcast\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5f53\u4e24\u4e2a\u8f93\u5165tensor\u7ef4\u5ea6\u4e0d\u76f8\u7b49\u65f6\u5e94\u8be5\u62a5\u9519\u3002\r\n\r\n\u6d4b\u8bd5\u4ee3\u7801\uff1a\r\n```\r\nfrom __future__ import print_function\r\n\r\nimport op_test\r\nimport unittest\r\nimport numpy as np\r\nimport paddle\r\nimport paddle.fluid as fluid\r\nfrom paddle.static import Program, program_guard\r\n\r\n\r\ndef create_test_class(op_type, callback, binary_op=True):\r\n    class Cls(op_test.OpTest):\r\n        def setUp(self):\r\n            a = np.random.choice(a=[True, False], size=(10, 7)).astype(bool)\r\n            if binary_op:\r\n                b = np.random.choice(a=[True, False], size=(10, 7)).astype(bool)\r\n                c = callback(a, b)\r\n            else:\r\n                c = callback(a)\r\n            self.outputs = {'Out': c}\r\n            self.op_type = op_type\r\n            if binary_op:\r\n                self.inputs = {'X': a, 'Y': b}\r\n            else:\r\n                self.inputs = {'X': a}\r\n\r\n        def test_output(self):\r\n            self.check_output()\r\n\r\n        def test_error(self):\r\n            with program_guard(Program(), Program()):\r\n                \r\n                # test 1 type error, x, y must be bool type\r\n                x = fluid.layers.data(name='x', shape=[2], dtype='bool')\r\n                y = fluid.layers.data(name='y', shape=[2], dtype='bool')\r\n                a = fluid.layers.data(name='a', shape=[2], dtype='int32')\r\n                op = eval(\"fluid.layers.%s\" % self.op_type)\r\n                if self.op_type != \"logical_not\":\r\n                    self.assertRaises(TypeError, op, x=x, y=y, out=1)\r\n                    self.assertRaises(TypeError, op, x=x, y=a)\r\n                    self.assertRaises(TypeError, op, x=a, y=y)\r\n                else:\r\n                    self.assertRaises(TypeError, op, x=x, out=1)\r\n                    self.assertRaises(TypeError, op, x=a)\r\n                \r\n                # test 2 type error, x, y must be bool type\r\n                x_data = fluid.layers.data(name='x_data', shape=[2], dtype='bool')\r\n                y_data = fluid.layers.data(name='y_data', shape=[2,2], dtype='bool')\r\n                \r\n                if self.op_type != \"logical_not\":\r\n                    self.assertRaises(TypeError, op, x=x_data, y=y_data, out=1)\r\n                    self.assertRaises(TypeError, op, x=y_data, y=x_data)\r\n\r\n\r\n    globals()[op_type] = Cls\r\n\r\n\r\ncreate_test_class('logical_and', lambda _a, _b: np.logical_and(_a, _b))\r\ncreate_test_class('logical_or', lambda _a, _b: np.logical_or(_a, _b))\r\ncreate_test_class('logical_not', lambda _a: np.logical_not(_a), False)\r\ncreate_test_class('logical_xor', lambda _a, _b: np.logical_xor(_a, _b))\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26808",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26808/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26808/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26808/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26808",
        "id": 688884133,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDc2MDMzNjU3",
        "number": 26808,
        "title": "[Dy2stat] enhance error message for StaticLayer.concrete_program",
        "user": {
            "login": "Aurelius84",
            "id": 9301846,
            "node_id": "MDQ6VXNlcjkzMDE4NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9301846?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aurelius84",
            "html_url": "https://github.com/Aurelius84",
            "followers_url": "https://api.github.com/users/Aurelius84/followers",
            "following_url": "https://api.github.com/users/Aurelius84/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aurelius84/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aurelius84/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aurelius84/subscriptions",
            "organizations_url": "https://api.github.com/users/Aurelius84/orgs",
            "repos_url": "https://api.github.com/users/Aurelius84/repos",
            "events_url": "https://api.github.com/users/Aurelius84/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aurelius84/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-08-31T04:18:19Z",
        "updated_at": "2020-08-31T11:15:55Z",
        "closed_at": "2020-08-31T11:15:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/26808",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26808",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/26808.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/26808.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nFunction optimization\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nAPIs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\nenhance error message for StaticLayer.concrete_program.\r\n\r\n#### Before\r\n```bash\r\nValueError: No valid transformed program for function: foo_func(a,b,c,d), input_spec: None.\r\n```\r\nIt will also trigger another error before this in `len(flatten_input_spec) > 0`. In this PR, I fix it.\r\n```\r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n\r\n#### After\r\n```bash\r\nValueError: No valid transformed program for function: foo_func(a,b,c,d), input_spec: None.\r\n            Please specific `input_spec` in `@paddle.jit.to_static` or feed input tensor to call the decorated function at once.\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28647",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28647/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28647/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28647/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/28647",
        "id": 743499724,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTIxMzgxMDYz",
        "number": 28647,
        "title": "delete axis parameter in multiply api",
        "user": {
            "login": "Joejiong",
            "id": 18322401,
            "node_id": "MDQ6VXNlcjE4MzIyNDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18322401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Joejiong",
            "html_url": "https://github.com/Joejiong",
            "followers_url": "https://api.github.com/users/Joejiong/followers",
            "following_url": "https://api.github.com/users/Joejiong/following{/other_user}",
            "gists_url": "https://api.github.com/users/Joejiong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Joejiong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Joejiong/subscriptions",
            "organizations_url": "https://api.github.com/users/Joejiong/orgs",
            "repos_url": "https://api.github.com/users/Joejiong/repos",
            "events_url": "https://api.github.com/users/Joejiong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Joejiong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-11-16T06:04:28Z",
        "updated_at": "2020-11-24T13:07:43Z",
        "closed_at": "2020-11-24T13:07:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/28647",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/28647",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/28647.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/28647.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nBug fixes\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nAPIs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\ndelete axis parameter in multiply api\r\n\r\nunittest code:\r\n```\r\nclass TestMultiplyAPI(unittest.TestCase):\r\n    \"\"\"TestMultiplyAPI.\"\"\"\r\n\r\n    def __run_static_graph_case(self, x_data, y_data):\r\n        with program_guard(Program(), Program()):\r\n            paddle.enable_static()\r\n            x = paddle.static.data(\r\n                name='x', shape=x_data.shape, dtype=x_data.dtype)\r\n            y = paddle.static.data(\r\n                name='y', shape=y_data.shape, dtype=y_data.dtype)\r\n            res = tensor.multiply(x, y)\r\n\r\n            place = fluid.CUDAPlace(0) if fluid.core.is_compiled_with_cuda(\r\n            ) else fluid.CPUPlace()\r\n            exe = fluid.Executor(place)\r\n            outs = exe.run(fluid.default_main_program(),\r\n                           feed={'x': x_data,\r\n                                 'y': y_data},\r\n                           fetch_list=[res])\r\n            res = outs[0]\r\n            return res\r\n\r\n    def __run_static_graph_case_with_numpy_input(self, x_data, y_data):\r\n        with program_guard(Program(), Program()):\r\n            paddle.enable_static()\r\n\r\n            res = tensor.multiply(x_data, y_data)\r\n            place = fluid.CUDAPlace(0) if fluid.core.is_compiled_with_cuda(\r\n            ) else fluid.CPUPlace()\r\n            exe = fluid.Executor(place)\r\n            outs = exe.run(fluid.default_main_program(),\r\n                           feed={'x': x_data,\r\n                                 'y': y_data},\r\n                           fetch_list=[res])\r\n            res = outs[0]\r\n            return res\r\n\r\n    def __run_dynamic_graph_case(self, x_data, y_data):\r\n        paddle.disable_static()\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        res = paddle.multiply(x, y)\r\n        return res.numpy()\r\n\r\n    def __run_dynamic_graph_case_with_numpy_input(\r\n            self,\r\n            x_data,\r\n            y_data, ):\r\n        paddle.disable_static()\r\n        res = paddle.multiply(x_data, y_data)\r\n        return res.numpy()\r\n\r\n    def test_multiply(self):\r\n        \"\"\"test_multiply.\"\"\"\r\n        np.random.seed(7)\r\n\r\n        # test static computation graph: 1-d array\r\n        x_data = np.random.rand(200)\r\n        y_data = np.random.rand(200)\r\n        res = self.__run_static_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph: 1-d array\r\n        x_data = np.random.rand(200)\r\n        y_data = np.random.rand(200)\r\n        res = self.__run_static_graph_case_with_numpy_input(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph: 2-d array\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(2, 500)\r\n        res = self.__run_static_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph with_primitives: 2-d array\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(2, 500)\r\n        res = self.__run_static_graph_case_with_numpy_input(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph: broadcast\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(500)\r\n        res = self.__run_static_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph with_primitives: broadcast\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(500)\r\n        res = self.__run_static_graph_case_with_numpy_input(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: 1-d array\r\n        x_data = np.random.rand(200)\r\n        y_data = np.random.rand(200)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic numpy input computation graph: 1-d array\r\n        x_data = np.random.rand(200)\r\n        y_data = np.random.rand(200)\r\n        res = self.__run_dynamic_graph_case_with_numpy_input(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: 2-d array\r\n        x_data = np.random.rand(20, 50)\r\n        y_data = np.random.rand(20, 50)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic numpy input computation graph: 1-d array\r\n        x_data = np.random.rand(20, 50)\r\n        y_data = np.random.rand(20, 50)\r\n        res = self.__run_dynamic_graph_case_with_numpy_input(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: broadcast\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(500)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph with numpy tensor: broadcast\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(500)\r\n        res = self.__run_dynamic_graph_case_with_numpy_input(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n\r\nclass TestMultiplyError(unittest.TestCase):\r\n    \"\"\"TestMultiplyError.\"\"\"\r\n\r\n    def test_errors(self):\r\n        \"\"\"test_errors.\"\"\"\r\n        # test static computation graph: dtype can not be int8\r\n        paddle.enable_static()\r\n        with program_guard(Program(), Program()):\r\n            x = paddle.static.data(name='x', shape=[100], dtype=np.int8)\r\n            y = paddle.static.data(name='y', shape=[100], dtype=np.int8)\r\n            self.assertRaises(TypeError, tensor.multiply, x, y)\r\n\r\n        # test static computation graph: inputs must be broadcastable \r\n        with program_guard(Program(), Program()):\r\n            x = paddle.static.data(name='x', shape=[20, 50], dtype=np.float64)\r\n            y = paddle.static.data(name='y', shape=[20], dtype=np.float64)\r\n            self.assertRaises(ValueError, tensor.multiply, x, y)\r\n\r\n        np.random.seed(7)\r\n        # test dynamic computation graph: dtype can not be int8\r\n        paddle.disable_static()\r\n        x_data = np.random.randn(200).astype(np.int8)\r\n        y_data = np.random.randn(200).astype(np.int8)\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        self.assertRaises(RuntimeError, paddle.multiply, x, y)\r\n\r\n        # test dynamic computation graph: inputs must be broadcastable\r\n        x_data = np.random.rand(200, 5)\r\n        y_data = np.random.rand(200)\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        self.assertRaises(ValueError, paddle.multiply, x, y)\r\n\r\n        # test dynamic computation graph: inputs must be broadcastable(python)\r\n        x_data = np.random.rand(200, 5)\r\n        y_data = np.random.rand(200)\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        self.assertRaises(ValueError, paddle.multiply, x, y)\r\n\r\n        # test dynamic computation graph: dtype must be same\r\n        x_data = np.random.randn(200).astype(np.int64)\r\n        y_data = np.random.randn(200).astype(np.float64)\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        self.assertRaises(TypeError, paddle.multiply, x, y)\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n\r\n```\r\ntest results success:\r\n![image](https://user-images.githubusercontent.com/18322401/99218172-bc631880-2814-11eb-99a1-85d23c940181.png)\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26886",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26886/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26886/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26886/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26886",
        "id": 690093337,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDc3MDM5NTkw",
        "number": 26886,
        "title": "refine paddle.stack",
        "user": {
            "login": "zhiqiu",
            "id": 6888866,
            "node_id": "MDQ6VXNlcjY4ODg4NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6888866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhiqiu",
            "html_url": "https://github.com/zhiqiu",
            "followers_url": "https://api.github.com/users/zhiqiu/followers",
            "following_url": "https://api.github.com/users/zhiqiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhiqiu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhiqiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhiqiu/subscriptions",
            "organizations_url": "https://api.github.com/users/zhiqiu/orgs",
            "repos_url": "https://api.github.com/users/zhiqiu/repos",
            "events_url": "https://api.github.com/users/zhiqiu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhiqiu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-09-01T12:18:28Z",
        "updated_at": "2020-09-03T05:32:38Z",
        "closed_at": "2020-09-03T05:32:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/26886",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26886",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/26886.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/26886.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nBug fixes\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nAPIs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\npaddle.stack does not support a single Tensor as input anymore.\r\n\r\nBefore this PR, `paddle.stack` accepts a single Tensor `x` as input, and implicitly convert it to a list of Tensor `[x]`.\r\n\r\nThis is not a good design since it violates the single responsibility. The responsibility of stack is to stack several Tensors, so this PR prohibits that usage.\r\n\r\n**An Exception,** input as Variable of `LOD_Tensor_Array` type in static graph is still ok, since it means `array of tensors`.\r\n\r\nFor example, the following code will result in an error.\r\n```\r\nimport paddle\r\n\r\npaddle.disable_static()\r\nx1 = paddle.rand([2,2])\r\nresult = paddle.stack(x1, axis=0)\r\n```\r\n- dygraph \r\n```\r\nTraceback (most recent call last):\r\n  File \"test_stack.py\", line 8, in <module>\r\n    result = paddle.stack(x1, axis=0)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/tensor/manipulation.py\", line 468, in stack\r\n    return layers.stack(x, axis, name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/layers/nn.py\", line 10055, in stack\r\n    return core.ops.stack(x, 'axis', axis)\r\npaddle.fluid.core_avx.EnforceNotMet: \r\n\r\n--------------------------------------\r\nC++ Traceback (most recent call last):\r\n--------------------------------------\r\n0   paddle::platform::EnforceNotMet::EnforceNotMet(paddle::platform::ErrorSummary const&, char const*, int)\r\n1   paddle::platform::GetCurrentTraceBackString[abi:cxx11]()\r\n\r\n----------------------\r\nError Message Summary:\r\n----------------------\r\nInvalidArgumentError: stack(): argument 'X' (position 0) must be list of Tensors, but got Tensor (at /Paddle/Paddle/paddle/fluid/pybind/op_function.h:88)\r\n```\r\n\r\n- static graph\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_stack.py\", line 8, in <module>\r\n    result = paddle.stack(x1, axis=0)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/tensor/manipulation.py\", line 468, in stack\r\n    return layers.stack(x, axis, name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/layers/nn.py\", line 10058, in stack\r\n    raise TypeError(\"The type of '%s' in %s must be %s, but received %s\" % ( 'x', 'stack', 'list[Tensor] or tuple[Tensor]', type(x)))\r\nTypeError: The type of 'x' in stack must be list[Tensor] or tuple[Tensor], but received <class 'paddle.fluid.framework.Variable'>\r\n```\r\n\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27690",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27690/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27690/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27690/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/27690",
        "id": 710250909,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDk0MTMwODMz",
        "number": 27690,
        "title": "Mutiply bug allow non-tensor data input",
        "user": {
            "login": "Joejiong",
            "id": 18322401,
            "node_id": "MDQ6VXNlcjE4MzIyNDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18322401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Joejiong",
            "html_url": "https://github.com/Joejiong",
            "followers_url": "https://api.github.com/users/Joejiong/followers",
            "following_url": "https://api.github.com/users/Joejiong/following{/other_user}",
            "gists_url": "https://api.github.com/users/Joejiong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Joejiong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Joejiong/subscriptions",
            "organizations_url": "https://api.github.com/users/Joejiong/orgs",
            "repos_url": "https://api.github.com/users/Joejiong/repos",
            "events_url": "https://api.github.com/users/Joejiong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Joejiong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-09-28T13:09:14Z",
        "updated_at": "2020-10-12T09:31:18Z",
        "closed_at": "2020-10-12T09:31:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/27690",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/27690",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/27690.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/27690.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nBug fixes\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nAPIs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\n\r\n```\r\nfrom __future__ import print_function\r\nimport paddle\r\nimport paddle.tensor as tensor\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nimport numpy as np\r\nimport unittest\r\n\r\n\r\nclass TestMultiplyAPI(unittest.TestCase):\r\n    \"\"\"TestMultiplyAPI.\"\"\"\r\n\r\n    def __run_static_graph_case(self, x_data, y_data, axis=-1):\r\n        with program_guard(Program(), Program()):\r\n            paddle.enable_static()\r\n            x = paddle.static.data(\r\n                name='x', shape=x_data.shape, dtype=x_data.dtype)\r\n            y = paddle.static.data(\r\n                name='y', shape=y_data.shape, dtype=y_data.dtype)\r\n            res = tensor.multiply(x, y, axis=axis)\r\n\r\n            place = fluid.CUDAPlace(0) if fluid.core.is_compiled_with_cuda(\r\n            ) else fluid.CPUPlace()\r\n            exe = fluid.Executor(place)\r\n            outs = exe.run(fluid.default_main_program(),\r\n                           feed={'x': x_data,\r\n                                 'y': y_data},\r\n                           fetch_list=[res])\r\n            res = outs[0]\r\n            return res\r\n\r\n    def __run_dynamic_graph_case(self, x_data, y_data, axis=-1):\r\n        paddle.disable_static()\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        res = paddle.multiply(x, y, axis=axis)\r\n        return res.numpy()\r\n\r\n    def __run_dynamic_graph_case_with_numpy_input(self, x_data, y_data,\r\n                                                  axis=-1):\r\n        paddle.disable_static()\r\n        res = paddle.multiply(x_data, y_data, axis=axis)\r\n        return res.numpy()\r\n\r\n    def test_multiply(self):\r\n        \"\"\"test_multiply.\"\"\"\r\n        np.random.seed(7)\r\n        # test static computation graph: 1-d array\r\n        x_data = np.random.rand(200)\r\n        y_data = np.random.rand(200)\r\n        res = self.__run_static_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph: 2-d array\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(2, 500)\r\n        res = self.__run_static_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph: broadcast\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(500)\r\n        res = self.__run_static_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph: broadcast with axis\r\n        x_data = np.random.rand(2, 300, 40)\r\n        y_data = np.random.rand(300)\r\n        res = self.__run_static_graph_case(x_data, y_data, axis=1)\r\n        expected = np.multiply(x_data, y_data[..., np.newaxis])\r\n        self.assertTrue(np.allclose(res, expected))\r\n\r\n        # test dynamic computation graph: 1-d array\r\n        x_data = np.random.rand(200)\r\n        y_data = np.random.rand(200)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic numpy input computation graph: 1-d array\r\n        x_data = np.random.rand(200)\r\n        y_data = np.random.rand(200)\r\n        res = self.__run_dynamic_graph_case_with_numpy_input(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: 2-d array\r\n        x_data = np.random.rand(20, 50)\r\n        y_data = np.random.rand(20, 50)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic numpy input computation graph: 1-d array\r\n        x_data = np.random.rand(20, 50)\r\n        y_data = np.random.rand(20, 50)\r\n        res = self.__run_dynamic_graph_case_with_numpy_input(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: broadcast\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(500)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: broadcast\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(500)\r\n        res = self.__run_dynamic_graph_case_with_numpy_input(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: broadcast with axis\r\n        x_data = np.random.rand(2, 300, 40)\r\n        y_data = np.random.rand(300)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data, axis=1)\r\n        expected = np.multiply(x_data, y_data[..., np.newaxis])\r\n        self.assertTrue(np.allclose(res, expected))\r\n\r\n\r\nclass TestMultiplyError(unittest.TestCase):\r\n    \"\"\"TestMultiplyError.\"\"\"\r\n\r\n    def test_errors(self):\r\n        \"\"\"test_errors.\"\"\"\r\n        # test static computation graph: dtype can not be int8\r\n        paddle.enable_static()\r\n        with program_guard(Program(), Program()):\r\n            x = paddle.static.data(name='x', shape=[100], dtype=np.int8)\r\n            y = paddle.static.data(name='y', shape=[100], dtype=np.int8)\r\n            self.assertRaises(TypeError, tensor.multiply, x, y)\r\n\r\n        # test static computation graph: inputs must be broadcastable \r\n        with program_guard(Program(), Program()):\r\n            x = paddle.static.data(name='x', shape=[20, 50], dtype=np.float64)\r\n            y = paddle.static.data(name='y', shape=[20], dtype=np.float64)\r\n            self.assertRaises(fluid.core.EnforceNotMet, tensor.multiply, x, y)\r\n\r\n        np.random.seed(7)\r\n        # test dynamic computation graph: dtype can not be int8\r\n        paddle.disable_static()\r\n        x_data = np.random.randn(200).astype(np.int8)\r\n        y_data = np.random.randn(200).astype(np.int8)\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        self.assertRaises(fluid.core.EnforceNotMet, paddle.multiply, x, y)\r\n\r\n        # test dynamic computation graph: inputs must be broadcastable\r\n        x_data = np.random.rand(200, 5)\r\n        y_data = np.random.rand(200)\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        self.assertRaises(fluid.core.EnforceNotMet, paddle.multiply, x, y)\r\n\r\n        # test dynamic computation graph: inputs must be broadcastable(python)\r\n        x_data = np.random.rand(200, 5)\r\n        y_data = np.random.rand(200)\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        self.assertRaises(fluid.core.EnforceNotMet, paddle.multiply, x, y)\r\n\r\n        # test dynamic computation graph: dtype must be same\r\n        x_data = np.random.randn(200).astype(np.int64)\r\n        y_data = np.random.randn(200).astype(np.float64)\r\n        x = paddle.to_tensor(x_data)\r\n        y = paddle.to_tensor(y_data)\r\n        self.assertRaises(TypeError, paddle.multiply, x, y)\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n![image](https://user-images.githubusercontent.com/18322401/94436288-d9914880-01ce-11eb-9ff1-5f47f4d7fd5f.png)\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23459",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23459/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23459/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23459/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23459",
        "id": 593299378,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk4MTA2NDQz",
        "number": 23459,
        "title": "API (Switch) error message enhancement. test=develop",
        "user": {
            "login": "liym27",
            "id": 33742067,
            "node_id": "MDQ6VXNlcjMzNzQyMDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/33742067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liym27",
            "html_url": "https://github.com/liym27",
            "followers_url": "https://api.github.com/users/liym27/followers",
            "following_url": "https://api.github.com/users/liym27/following{/other_user}",
            "gists_url": "https://api.github.com/users/liym27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liym27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liym27/subscriptions",
            "organizations_url": "https://api.github.com/users/liym27/orgs",
            "repos_url": "https://api.github.com/users/liym27/repos",
            "events_url": "https://api.github.com/users/liym27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liym27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-03T11:00:08Z",
        "updated_at": "2020-06-17T05:46:06Z",
        "closed_at": "2020-04-08T14:59:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23459",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23459",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23459.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23459.patch"
        },
        "body": "## Api Switch \u589e\u5f3a\u8f93\u5165\u7c7b\u578b\u68c0\u67e5 [\u4ec5\u6d89\u53capython\u7aef]\r\n```python\r\nclass paddle.fluid.layers.Switch(name=None)\r\n```\r\n#### \u68c0\u67e5\u6210\u5458\u51fd\u6570`case(condition)`\u7684\u8f93\u5165`condition`:\r\n   - \u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n   - \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3a\"bool\", \r\n\r\n\u62a5\u9519\u6837\u4f8b\uff1a\r\n```\r\nTypeError: The data type of 'condition' in the member function case of fluid.layer.Switch must be ['bool'], but received float32. \r\n\r\nTypeError: The type of 'condition' in the member function case of Switch must be <class 'paddle.fluid.framework.Variable'>, but received <type 'int'>. \r\n```\r\n\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23445",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23445/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23445/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23445/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23445",
        "id": 593132968,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk3OTY4Mjk4",
        "number": 23445,
        "title": "Api/Op (select_input/select_ouput) error message enhancement.",
        "user": {
            "login": "liym27",
            "id": 33742067,
            "node_id": "MDQ6VXNlcjMzNzQyMDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/33742067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liym27",
            "html_url": "https://github.com/liym27",
            "followers_url": "https://api.github.com/users/liym27/followers",
            "following_url": "https://api.github.com/users/liym27/following{/other_user}",
            "gists_url": "https://api.github.com/users/liym27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liym27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liym27/subscriptions",
            "organizations_url": "https://api.github.com/users/liym27/orgs",
            "repos_url": "https://api.github.com/users/liym27/repos",
            "events_url": "https://api.github.com/users/liym27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liym27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-03T06:32:18Z",
        "updated_at": "2020-06-17T05:46:00Z",
        "closed_at": "2020-04-09T04:18:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23445",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23445",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23445.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23445.patch"
        },
        "body": "## select_input/select_output op\u62a5\u9519\u4fe1\u606f\u589e\u5f3a\r\n```Python\r\ndef select_input(inputs, mask)\r\ndef select_output(input, outputs, mask)\r\n```\r\n> \u56e0\u4e3a\u8fd92\u4e2a\u63a5\u53e3\u7684\u5355\u6d4b\u5728\u540c\u4e00\u6587\u4ef6\uff0c\u4e14\u901a\u7528\u4e4b\u5904\u8f83\u591a\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u4e2aPR\u4e2d\u4fee\u6539\u3002\r\n\r\n~~Op shape\u62a5\u9519\u68c0\u67e5\u589e\u5f3a~~\r\n\r\n### \u4e00\u3001 Python API\u7684input\u7c7b\u578b\u68c0\u67e5\r\n#### 1. \u300cselect_input\u300d\u7684\u8f93\u5165\u300cinputs\u300d\u7684\u7c7b\u578b\u662ftuple/list\r\n- \u4fee\u6539\u540e\u62a5\u9519\uff1a\r\n```\r\nTypeError: The type of 'inputs' in select_input must be (<type 'list'>, <type 'tuple'>), but received <type 'int'>. \r\n```\r\n\r\n#### 2. \u300cselect_input\u300d\u7684\u8f93\u5165\u300cmask\u300d\u7684\u7c7b\u578b\u662fVariable\uff0cdtype\u662fint32/int64\r\n- \u4fee\u6539\u540e\u62a5\u9519\uff1a\r\n```\r\nTypeError: The type of 'mask' in select_input must be <class 'paddle.fluid.framework.Variable'>, but received <type 'int'>. \r\n\r\nTypeError: The data type of 'mask' in select_input must be ['int32'], but received float32. \r\n```\r\n\r\n#### 3. \u300cselect_output\u300d\u7684\u8f93\u5165\u300cinput\u300d\u7684\u7c7b\u578b\u662fVariable\r\n- \u4fee\u6539\u540e\u62a5\u9519\uff1a\r\n```\r\nTypeError: The type of 'input' in select_output must be <class 'paddle.fluid.framework.Variable'>, but received <type 'int'>. \r\n```\r\n\r\n#### 4. \u300cselect_output\u300d\u7684\u8f93\u5165\u300cmask\u300d\u7684\u7c7b\u578b\u662fVariable\uff0cdtype\u662fint32/int64\r\n- \u4fee\u6539\u540e\u62a5\u9519\uff1a\r\n```\r\nTypeError: The type of 'mask' in select_output must be <class 'paddle.fluid.framework.Variable'>, but received <type 'int'>. \r\n\r\nTypeError: The data type of 'mask' in select_output must be ['int32'], but received float32. \r\n```\r\n\r\n#### 5. \u300cselect_output\u300d\u7684\u8f93\u5165\u300coutputs\u300d\u7684\u7c7b\u578b\u662flist/tuple\r\n- \u4fee\u6539\u540e\u62a5\u9519\uff1a\r\n```\r\nTypeError: The type of 'outputs' in select_output must be (<type 'list'>, <type 'tuple'>), but received <class 'paddle.fluid.framework.Variable'>. \r\n```\r\n\r\n----\r\n\r\n### \u4e8c\u3001 c++\u4e0d\u5408\u89c4\u62a5\u9519\u68c0\u67e5\u589e\u5f3a\r\n#### 1.Mask\u6570\u636e\u6bd4Inputs\u7684size\u5927\u65f6\uff1a\r\n- \u4fee\u6539\u524d\u62a5\u9519\uff1a\u62a5\u9519\u5185\u5bb9\u6ca1\u6709\u6253\u5370\u6570\u636e\u4fe1\u606f\r\n```\r\nSelected branch number is greater than actual branch num in SelectInputOp\r\n```\r\n\r\n- \u4fee\u6539\u540e\u62a5\u9519\r\n```\r\nInvalidArgumentError: Input 'Mask' in SelectInputOp is invalid. 'Mask' must be less than the size of input vector 'X'. But received Mask = 10, X's size = 2.\r\n```\r\n\r\n#### 2. Mask\u7684\u6570\u636e\u5143\u7d20\u4e2a\u6570\u4e0d\u7b49\u4e8e1\u65f6\uff1a\r\n- \u4fee\u6539\u524d\u62a5\u9519\uff1a\u62a5\u9519\u5185\u5bb9\u6ca1\u6709\u6253\u5370\u6570\u636e\u4fe1\u606f\r\n```\r\nMask in SelectOutputOp must have numel 1.\r\n```\r\n\r\n- \u4fee\u6539\u540e\u62a5\u9519\uff1a\r\n```\r\nInvalidArgumentError: Mask in SelectInputOp or SelectOutputOp must have numel 1. But received 2, and it's shape is [2].\r\n```\r\n\r\n#### 3.Mask\u6570\u636e\u6bd4Out\u7684size\u5927\u65f6\uff1a\r\n- \u4fee\u6539\u524d\u62a5\u9519\uff1a\u62a5\u9519\u5185\u5bb9\u6ca1\u6709\u6253\u5370\u6570\u636e\u4fe1\u606f\r\n```\r\nSelected branch number is greater than actual branch num in num in SelectOutputOp\r\n```\r\n\r\n- \u4fee\u6539\u540e\u62a5\u9519\r\n```\r\nInvalidArgumentError: Input 'Mask' in SelectOutputOp is invalid. 'Mask' must be less than the size of output vector 'Out'. But received Mask = 10, Out's size = 2.\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/25098",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/25098/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/25098/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/25098/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/25098",
        "id": 640258025,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1Njk4MDA5",
        "number": 25098,
        "title": "Refine check_type Error Message for @declarative",
        "user": {
            "login": "Aurelius84",
            "id": 9301846,
            "node_id": "MDQ6VXNlcjkzMDE4NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9301846?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aurelius84",
            "html_url": "https://github.com/Aurelius84",
            "followers_url": "https://api.github.com/users/Aurelius84/followers",
            "following_url": "https://api.github.com/users/Aurelius84/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aurelius84/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aurelius84/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aurelius84/subscriptions",
            "organizations_url": "https://api.github.com/users/Aurelius84/orgs",
            "repos_url": "https://api.github.com/users/Aurelius84/repos",
            "events_url": "https://api.github.com/users/Aurelius84/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aurelius84/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-06-17T08:44:51Z",
        "updated_at": "2020-06-19T03:56:44Z",
        "closed_at": "2020-06-19T03:56:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/25098",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/25098",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/25098.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/25098.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nOthers\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nOthers\r\n### Describe\r\n<!-- Describe what this PR does -->\r\nRefine check_type Error Message for @declarative\r\n\r\n**Sample code:**\r\n```python\r\nwith fluid.dygraph.guard():\r\n    x = fluid.dygraph.to_variable(np.zeros([10, 10]))\r\n\r\ny = fluid.layers.matmul(x, x)\r\n```\r\n\r\n**\u62a5\u9519\u8f93\u51fa\uff1a**\r\n```\r\nTypeError: Please use fluid.dygraph.guard() as context to run it in imperative Mode.\r\nBecause the type of 'y' in matmul is a imperative Variable.\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23427",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23427/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23427/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23427/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23427",
        "id": 592563783,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTIyODk3",
        "number": 23427,
        "title": "API (layers.data/fluid.data) error message enhancement",
        "user": {
            "login": "liym27",
            "id": 33742067,
            "node_id": "MDQ6VXNlcjMzNzQyMDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/33742067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liym27",
            "html_url": "https://github.com/liym27",
            "followers_url": "https://api.github.com/users/liym27/followers",
            "following_url": "https://api.github.com/users/liym27/following{/other_user}",
            "gists_url": "https://api.github.com/users/liym27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liym27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liym27/subscriptions",
            "organizations_url": "https://api.github.com/users/liym27/orgs",
            "repos_url": "https://api.github.com/users/liym27/repos",
            "events_url": "https://api.github.com/users/liym27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liym27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-02T11:36:38Z",
        "updated_at": "2020-06-17T05:46:08Z",
        "closed_at": "2020-04-08T15:02:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23427",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23427",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23427.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23427.patch"
        },
        "body": "## API fluid.data/fluid.layers.data \u62a5\u9519\u4fe1\u606f\u589e\u5f3a [\u4ec5\u6d89\u53caPython\u7aef]\r\n```Python\r\npaddle.fluid.data(name, shape, dtype='float32', lod_level=0)\r\n\r\npaddle.fluid.layers.data(name, shape, append_batch_size=True, dtype='float32', lod_level=0, type=VarType.LOD_TENSOR, stop_gradient=True)\r\n```\r\n> \u56e0\u4e3a\u8fd92\u4e2a\u63a5\u53e3\u7684\u5355\u6d4b\u5728\u540c\u4e00\u6587\u4ef6\uff0c\u4e14\u901a\u7528\u4e4b\u5904\u8f83\u591a\uff0c\u6240\u4ee5\u5728\u540c\u4e00\u4e2aPR\u4e2d\u4fee\u6539\u3002\r\n\r\n\r\n#### 1. \u53c2\u6570`name`\u7684\u7c7b\u578b\u662f`str/unicode`\r\n- \u62a5\u9519\u6837\u4f8b\uff1a\r\n```\r\nTypeError: The type of 'name' in data must be (<type 'str'>, <type 'unicode'>), but received <type 'int'>.\r\n```\r\n\r\n#### 2. \u53c2\u6570`shape`\u7684\u7c7b\u578b\u662f`list/tuple`\r\n- \u62a5\u9519\u6837\u4f8b\uff1a\r\n```\r\nTypeError: The type of 'shape' in data must be (<type 'list'>, <type 'tuple'>), but received <type 'int'>. \r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26508",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26508/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26508/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26508/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26508",
        "id": 682726347,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDcwOTE3NjYx",
        "number": 26508,
        "title": "fix multiply check different type; test=develop",
        "user": {
            "login": "Joejiong",
            "id": 18322401,
            "node_id": "MDQ6VXNlcjE4MzIyNDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18322401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Joejiong",
            "html_url": "https://github.com/Joejiong",
            "followers_url": "https://api.github.com/users/Joejiong/followers",
            "following_url": "https://api.github.com/users/Joejiong/following{/other_user}",
            "gists_url": "https://api.github.com/users/Joejiong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Joejiong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Joejiong/subscriptions",
            "organizations_url": "https://api.github.com/users/Joejiong/orgs",
            "repos_url": "https://api.github.com/users/Joejiong/repos",
            "events_url": "https://api.github.com/users/Joejiong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Joejiong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-08-20T13:39:23Z",
        "updated_at": "2020-08-25T08:31:35Z",
        "closed_at": "2020-08-25T08:31:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/26508",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26508",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/26508.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/26508.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nFunction optimization\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nAPIs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\n\r\n- paddle\u6682\u65f6\u4e0d\u652f\u6301type promotion\uff1b\r\n- \u62a5\u9519\u4fe1\u606f\u5e94\u7b80\u6d01\u6613\u61c2\uff0c\u79fb\u52a8\u81f3python \u7aef\uff1b\r\n\r\n\u6d4b\u8bd5\u4ee3\u7801\uff1a\r\n```\r\nfrom __future__ import print_function\r\nimport paddle\r\nimport paddle.tensor as tensor\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nimport numpy as np\r\nimport unittest\r\n\r\n\r\nclass TestMultiplyAPI(unittest.TestCase):\r\n    \"\"\"TestMultiplyAPI.\"\"\"\r\n\r\n    def __run_static_graph_case(self, x_data, y_data, axis=-1):\r\n        with program_guard(Program(), Program()):\r\n            x = paddle.static.data(\r\n                name='x', shape=x_data.shape, dtype=x_data.dtype)\r\n            y = paddle.static.data(\r\n                name='y', shape=y_data.shape, dtype=y_data.dtype)\r\n            res = tensor.multiply(x, y, axis=axis)\r\n\r\n            place = fluid.CUDAPlace(0) if fluid.core.is_compiled_with_cuda(\r\n            ) else fluid.CPUPlace()\r\n            exe = fluid.Executor(place)\r\n            outs = exe.run(fluid.default_main_program(),\r\n                           feed={'x': x_data,\r\n                                 'y': y_data},\r\n                           fetch_list=[res])\r\n            res = outs[0]\r\n            return res\r\n\r\n    def __run_dynamic_graph_case(self, x_data, y_data, axis=-1):\r\n        paddle.disable_static()\r\n        x = paddle.to_variable(x_data)\r\n        y = paddle.to_variable(y_data)\r\n        res = paddle.multiply(x, y, axis=axis)\r\n        return res.numpy()\r\n\r\n    def test_multiply(self):\r\n        \"\"\"test_multiply.\"\"\"\r\n        np.random.seed(7)\r\n        # test static computation graph: 1-d array\r\n        x_data = np.random.rand(200)\r\n        y_data = np.random.rand(200)\r\n        res = self.__run_static_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph: 2-d array\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(2, 500)\r\n        res = self.__run_static_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph: broadcast\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(500)\r\n        res = self.__run_static_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test static computation graph: broadcast with axis\r\n        x_data = np.random.rand(2, 300, 40)\r\n        y_data = np.random.rand(300)\r\n        res = self.__run_static_graph_case(x_data, y_data, axis=1)\r\n        expected = np.multiply(x_data, y_data[..., np.newaxis])\r\n        self.assertTrue(np.allclose(res, expected))\r\n\r\n        # test dynamic computation graph: 1-d array\r\n        x_data = np.random.rand(200)\r\n        y_data = np.random.rand(200)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: 2-d array\r\n        x_data = np.random.rand(20, 50)\r\n        y_data = np.random.rand(20, 50)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: broadcast\r\n        x_data = np.random.rand(2, 500)\r\n        y_data = np.random.rand(500)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data)\r\n        self.assertTrue(np.allclose(res, np.multiply(x_data, y_data)))\r\n\r\n        # test dynamic computation graph: broadcast with axis\r\n        x_data = np.random.rand(2, 300, 40)\r\n        y_data = np.random.rand(300)\r\n        res = self.__run_dynamic_graph_case(x_data, y_data, axis=1)\r\n        expected = np.multiply(x_data, y_data[..., np.newaxis])\r\n        self.assertTrue(np.allclose(res, expected))\r\n\r\n\r\nclass TestMultiplyError(unittest.TestCase):\r\n    \"\"\"TestMultiplyError.\"\"\"\r\n\r\n    def test_errors(self):\r\n        \"\"\"test_errors.\"\"\"\r\n        # test static computation graph: dtype can not be int8\r\n        paddle.enable_static()\r\n        with program_guard(Program(), Program()):\r\n            x = paddle.static.data(name='x', shape=[100], dtype=np.int8)\r\n            y = paddle.static.data(name='y', shape=[100], dtype=np.int8)\r\n            self.assertRaises(TypeError, tensor.multiply, x, y)\r\n\r\n        # test static computation graph: inputs must be broadcastable \r\n        with program_guard(Program(), Program()):\r\n            x = paddle.static.data(name='x', shape=[20, 50], dtype=np.float64)\r\n            y = paddle.static.data(name='y', shape=[20], dtype=np.float64)\r\n            self.assertRaises(fluid.core.EnforceNotMet, tensor.multiply, x, y)\r\n\r\n        np.random.seed(7)\r\n        # test dynamic computation graph: dtype can not be int8\r\n        paddle.disable_static()\r\n        x_data = np.random.randn(200).astype(np.int8)\r\n        y_data = np.random.randn(200).astype(np.int8)\r\n        x = paddle.to_variable(x_data)\r\n        y = paddle.to_variable(y_data)\r\n        self.assertRaises(fluid.core.EnforceNotMet, paddle.multiply, x, y)\r\n\r\n        # test dynamic computation graph: inputs must be broadcastable\r\n        x_data = np.random.rand(200, 5)\r\n        y_data = np.random.rand(200)\r\n        x = paddle.to_variable(x_data)\r\n        y = paddle.to_variable(y_data)\r\n        self.assertRaises(fluid.core.EnforceNotMet, paddle.multiply, x, y)\r\n\r\n        # test dynamic computation graph: inputs must be broadcastable(python)\r\n        x_data = np.random.rand(200, 5)\r\n        y_data = np.random.rand(200)\r\n        x = paddle.to_variable(x_data)\r\n        y = paddle.to_variable(y_data)\r\n        self.assertRaises(fluid.core.EnforceNotMet, paddle.multiply, x, y)\r\n\r\n        # test dynamic computation graph: dtype must be same\r\n        x_data = np.random.randn(200).astype(np.int64)\r\n        y_data = np.random.randn(200).astype(np.float64)\r\n        x = paddle.to_variable(x_data)\r\n        y = paddle.to_variable(y_data)\r\n        self.assertRaises(TypeError, paddle.multiply, x, y)\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27247",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27247/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27247/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/27247/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/27247",
        "id": 697940971,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDgzODM0MDU0",
        "number": 27247,
        "title": "move DataLoader._worker_loop to top level",
        "user": {
            "login": "chenwhql",
            "id": 22561442,
            "node_id": "MDQ6VXNlcjIyNTYxNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22561442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenwhql",
            "html_url": "https://github.com/chenwhql",
            "followers_url": "https://api.github.com/users/chenwhql/followers",
            "following_url": "https://api.github.com/users/chenwhql/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenwhql/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenwhql/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenwhql/subscriptions",
            "organizations_url": "https://api.github.com/users/chenwhql/orgs",
            "repos_url": "https://api.github.com/users/chenwhql/repos",
            "events_url": "https://api.github.com/users/chenwhql/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenwhql/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-09-10T13:11:59Z",
        "updated_at": "2020-09-14T05:51:32Z",
        "closed_at": "2020-09-14T05:51:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/27247",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/27247",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/27247.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/27247.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nBug fixes\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nAPIs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\n\r\nmove `DataLoader._worker_loop` to top level\r\n\r\nOtherwise, it will cause errors when using `paddle.distributed.spawn` method to start multi-process DataLoader because the `_worker_loop` cannot be pickled.\r\n\r\nerror example:\r\n\r\n```\r\nI0910 12:49:50.989151  8382 nccl_context.cc:127] init nccl context nranks: 2 local rank: 0 gpu id: 0\r\nI0910 12:49:50.989272  8383 nccl_context.cc:127] init nccl context nranks: 2 local rank: 1 gpu id: 1\r\nW0910 12:49:51.561908  8382 device_context.cc:320] Please NOTE: device: 0, CUDA Capability: 61, Driver API Version: 10.1, Runtime API Version: 10.0\r\nW0910 12:49:51.562680  8383 device_context.cc:320] Please NOTE: device: 1, CUDA Capability: 61, Driver API Version: 10.1, Runtime API Version: 10.0\r\nW0910 12:49:51.568655  8382 device_context.cc:328] device: 0, cuDNN Version: 7.5.\r\nW0910 12:49:51.569162  8383 device_context.cc:328] device: 1, cuDNN Version: 7.5.\r\nException ignored in: <bound method _DataLoaderIterMultiProcess.__del__ of <paddle.fluid.dataloader.dataloader_iter._DataLoaderIterMultiProcess object at 0x7f71cbeb5898>>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/dataloader/dataloader_iter.py\", line 719, in __del__\r\n    self._try_shutdown_all()\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/dataloader/dataloader_iter.py\", line 456, in _try_shutdown_all\r\n    if not self._shutdown:\r\nAttributeError: '_DataLoaderIterMultiProcess' object has no attribute '_shutdown'\r\nException ignored in: <bound method _DataLoaderIterMultiProcess.__del__ of <paddle.fluid.dataloader.dataloader_iter._DataLoaderIterMultiProcess object at 0x7fcf918958d0>>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/dataloader/dataloader_iter.py\", line 719, in __del__\r\n    self._try_shutdown_all()\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/dataloader/dataloader_iter.py\", line 456, in _try_shutdown_all\r\n    if not self._shutdown:\r\nAttributeError: '_DataLoaderIterMultiProcess' object has no attribute '_shutdown'\r\nTraceback (most recent call last):\r\n  File \"spawn_dataloader.py\", line 72, in <module>\r\n    dist.spawn(train, nprocs=2)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/distributed/spawn.py\", line 409, in spawn\r\n    while not context.join():\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/distributed/spawn.py\", line 210, in join\r\n    self._throw_exception(error_index)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/distributed/spawn.py\", line 228, in _throw_exception\r\n    raise Exception(msg)\r\nException: \r\n\r\n----------------------------------------------\r\nProcess 0 terminated with the following error:\r\n----------------------------------------------\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/distributed/spawn.py\", line 159, in _func_wrapper\r\n    result = func(*args)\r\n  File \"/work/scripts/spawn/spawn_dataloader.py\", line 58, in train\r\n    for batch_id, (image, label) in enumerate(loader()):\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/reader.py\", line 406, in __call__\r\n    return self.__iter__()\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/reader.py\", line 403, in __iter__\r\n    return _DataLoaderIterMultiProcess(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/dataloader/dataloader_iter.py\", line 381, in __init__\r\n    self._init_workers()\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/dataloader/dataloader_iter.py\", line 413, in _init_workers\r\n    worker.start()\r\n  File \"/usr/lib/python3.5/multiprocessing/process.py\", line 105, in start\r\n    self._popen = self._Popen(self)\r\n  File \"/usr/lib/python3.5/multiprocessing/context.py\", line 212, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"/usr/lib/python3.5/multiprocessing/context.py\", line 274, in _Popen\r\n    return Popen(process_obj)\r\n  File \"/usr/lib/python3.5/multiprocessing/popen_spawn_posix.py\", line 33, in __init__\r\n    super().__init__(process_obj)\r\n  File \"/usr/lib/python3.5/multiprocessing/popen_fork.py\", line 20, in __init__\r\n    self._launch(process_obj)\r\n  File \"/usr/lib/python3.5/multiprocessing/popen_spawn_posix.py\", line 48, in _launch\r\n    reduction.dump(process_obj, fp)\r\n  File \"/usr/lib/python3.5/multiprocessing/reduction.py\", line 59, in dump\r\n    ForkingPickler(file, protocol).dump(obj)\r\nTypeError: can't pickle _thread.lock objects\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23429",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23429/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23429/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23429/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23429",
        "id": 592586500,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTQxNTU5",
        "number": 23429,
        "title": "API (switch_case) error message enhancement.",
        "user": {
            "login": "liym27",
            "id": 33742067,
            "node_id": "MDQ6VXNlcjMzNzQyMDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/33742067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liym27",
            "html_url": "https://github.com/liym27",
            "followers_url": "https://api.github.com/users/liym27/followers",
            "following_url": "https://api.github.com/users/liym27/following{/other_user}",
            "gists_url": "https://api.github.com/users/liym27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liym27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liym27/subscriptions",
            "organizations_url": "https://api.github.com/users/liym27/orgs",
            "repos_url": "https://api.github.com/users/liym27/repos",
            "events_url": "https://api.github.com/users/liym27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liym27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-02T12:17:08Z",
        "updated_at": "2020-06-17T05:46:11Z",
        "closed_at": "2020-04-03T09:23:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23429",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23429",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23429.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23429.patch"
        },
        "body": "## switch api \u589e\u5f3a\u8f93\u5165\u7c7b\u578b\u68c0\u67e5\r\n```python\r\nswitch_case(branch_index, branch_fns, default=None, name=None)\r\n```\r\n1. \u68c0\u67e5`branch_index`:\r\n   - \u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n   - \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3a\"uint8\", \"int32\", \"int64\"\r\n\r\n2. \u68c0\u67e5`branch_fns`:\r\n   - \u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3a list, tuple, dict\r\n```\r\nTypeError: The type of 'branch_fns' in switch_case must be (<type 'list'>, <type 'tuple'>, <type 'dict'>), but received <type 'int'>.\r\n```\r\n\r\n**\u6ce8\uff1a\u8be5api\u539f\u672c\u7684\u62a5\u9519\u4fe1\u606f\u5df2\u5f88\u5b8c\u5584\uff0c\u672cPR\u5c3d\u53ef\u80fd\u5c06\u7c7b\u578b\u68c0\u67e5\u7edf\u4e00\u7528`check_variable_and_dtype`\u548c`check_type`\u63a5\u53e3\u3002\u65e0\u6cd5\u7edf\u4e00\u5230\u4e0a\u8ff02\u4e2a\u63a5\u53e3\u7684\uff0c\u4e0d\u505a\u4fee\u6539\u3002**\r\n\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26377",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26377/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26377/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26377/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26377",
        "id": 680236976,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4ODMyOTg2",
        "number": 26377,
        "title": "Print user-friendly error message in core.ops [part 2]",
        "user": {
            "login": "zhiqiu",
            "id": 6888866,
            "node_id": "MDQ6VXNlcjY4ODg4NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6888866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhiqiu",
            "html_url": "https://github.com/zhiqiu",
            "followers_url": "https://api.github.com/users/zhiqiu/followers",
            "following_url": "https://api.github.com/users/zhiqiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhiqiu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhiqiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhiqiu/subscriptions",
            "organizations_url": "https://api.github.com/users/zhiqiu/orgs",
            "repos_url": "https://api.github.com/users/zhiqiu/repos",
            "events_url": "https://api.github.com/users/zhiqiu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhiqiu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-08-17T13:29:26Z",
        "updated_at": "2020-08-18T09:14:39Z",
        "closed_at": "2020-08-18T09:14:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/26377",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26377",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/26377.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/26377.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nOthers\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nAPIs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\nRelated #26261\r\n\r\nThis PR enhances the error message when the OP got an attribute of the wrong type.\r\nFor example, \r\n\r\n`paddle.mean(x=tensor, axis=np.random.uniform(0, 1, [2,10]))  `\r\n\r\nIn this API, `axis` should be `int` but got `numpy.ndarray`.\r\n\r\n\r\n\r\n- before (dynamic graph)\r\n```\r\nTraceback (most recent call last):\r\n  File \"aa.py\", line 13, in <module>\r\n    loss = model(x, np.random.uniform(0,1,[2,10]))\r\n  File \"aa.py\", line 5, in model\r\n    return paddle.mean(x, axis)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/tensor/stat.py\", line 97, in mean\r\n    'reduce_all', reduce_all)\r\nRuntimeError: Unable to cast Python instance to C++ type (compile in debug mode for details)\r\n```\r\n\r\n- after (dynamic graph)\r\n```\r\nTraceback (most recent call last):\r\n  File \"aa.py\", line 13, in <module>\r\n    loss = model(x, np.random.uniform(0,1,[2,100]))\r\n  File \"aa.py\", line 5, in model\r\n    return paddle.mean(x, axis)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/tensor/stat.py\", line 97, in mean\r\n    'reduce_all', reduce_all)\r\npaddle.fluid.core_avx.EnforceNotMet: \r\n\r\n--------------------------------------\r\nC++ Traceback (most recent call last):\r\n--------------------------------------\r\n0   paddle::platform::EnforceNotMet::EnforceNotMet(paddle::platform::ErrorSummary const&, char const*, int)\r\n1   paddle::platform::GetCurrentTraceBackString[abi:cxx11]()\r\n\r\n----------------------\r\nError Message Summary:\r\n----------------------\r\nInvalidArgumentError: reduce_mean(): argument (position 2) must be Attribute type (one of str, bool, int, int64, float, or list of them), but got numpy.ndarray (at /Paddle/Paddle/paddle/fluid/pybind/op_function.h:121)\r\n```\r\n- static graph\r\n```\r\nTraceback (most recent call last):\r\n  File \"aa.py\", line 13, in <module>\r\n    loss = model(x, np.random.uniform(0,1,[2,10]))\r\n  File \"aa.py\", line 5, in model\r\n    return paddle.mean(x, axis)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/tensor/stat.py\", line 107, in mean\r\n    type='reduce_mean', inputs={'X': x}, outputs={'Out': out}, attrs=attrs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/layer_helper.py\", line 43, in append_op\r\n    return self.main_program.current_block().append_op(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/framework.py\", line 2847, in append_op\r\n    attrs=kwargs.get(\"attrs\", None))\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/framework.py\", line 2048, in __init__\r\n    self._update_desc_attr(attr_name, attr_val)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/fluid/framework.py\", line 2313, in _update_desc_attr\r\n    self.desc._set_attr(name, val)\r\nTypeError: _set_attr(): incompatible function arguments. The following argument types are supported:\r\n    1. (self: paddle.fluid.core_avx.OpDesc, arg0: str, arg1: Variant) -> None\r\n\r\nInvoked with: <paddle.fluid.core_avx.OpDesc object at 0x7f93cbab5880>, 'dim', array([[0.73971283, 0.75059874, 0.75798314, 0.90461967, 0.22399589,\r\n        0.61482389, 0.02209774, 0.10888649, 0.31326088, 0.06176087],\r\n       [0.22037032, 0.36700745, 0.96432121, 0.33347811, 0.22299534,\r\n        0.44126188, 0.21502262, 0.55826981, 0.53548203, 0.85884811]])\r\n```\r\nThe error message in static graph could be refined in the future.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26261",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26261/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26261/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/26261/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26261",
        "id": 678569501,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDY3NDk0NDg1",
        "number": 26261,
        "title": "Print user-friendly error message in core.ops",
        "user": {
            "login": "zhiqiu",
            "id": 6888866,
            "node_id": "MDQ6VXNlcjY4ODg4NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6888866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhiqiu",
            "html_url": "https://github.com/zhiqiu",
            "followers_url": "https://api.github.com/users/zhiqiu/followers",
            "following_url": "https://api.github.com/users/zhiqiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhiqiu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhiqiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhiqiu/subscriptions",
            "organizations_url": "https://api.github.com/users/zhiqiu/orgs",
            "repos_url": "https://api.github.com/users/zhiqiu/repos",
            "events_url": "https://api.github.com/users/zhiqiu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhiqiu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-08-13T16:29:16Z",
        "updated_at": "2020-08-17T09:13:20Z",
        "closed_at": "2020-08-17T09:13:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/26261",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/26261",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/26261.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/26261.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nOthers\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nAPIs\r\n### Describe\r\n<!-- Describe what this PR does -->\r\nPrint user-friendly error message in static graph when calling `core.ops`\r\n\r\nclose #26133, #26116, \r\nrelated #24580, #24313, #22043, etc\r\n\r\nPlus, this PR changes `VarBase` to `Tensor` in the error message, which is a supplement of #25978 \r\n#### Background\r\nIn dygraph mode, python layers calls `core.ops` directly without checking the input type .\r\n**Note, Any type checking in python side is expensive, so we want to skip them in dygraph mode** \r\n\r\nHowever Not checking input argument may result in unfriendly error message when passing wrong type.\r\nFor example, run the following code,\r\n```\r\nx = numpy.array([2, 10])\r\npaddle.mean(x)  # the input of mean() should be tensor, but x is numpy.array\r\n```\r\n\r\nThe error message is as follows,\r\n- before \r\n```\r\nTraceback (most recent call last):\r\n  File \"aa.py\", line 13, in <module>\r\n    loss = model(x.numpy())\r\n  File \"aa.py\", line 5, in model\r\n    return paddle.mean(x)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/tensor/stat.py\", line 97, in mean\r\n    'reduce_all', reduce_all)\r\nTypeError: reduce_mean(): incompatible function arguments. The following argument types are supported:\r\n    1. (arg0: paddle::imperative::VarBase, *args) -> paddle::imperative::VarBase\r\n\r\nInvoked with: array([[0.10672294, 0.6228927 , 0.6516766 , 0.08035766, 0.94429654,\r\n        0.13813469, 0.8996017 , 0.67340076, 0.7289856 , 0.8632255 ],\r\n       [0.7602252 , 0.8281108 , 0.7380024 , 0.11440231, 0.31372833,\r\n        0.98088557, 0.32748088, 0.830154  , 0.36513907, 0.62751514]],\r\n      dtype=float32), 'dim', [0], 'keep_dim', False, 'reduce_all', True\r\n```\r\nAs shown, pybind11 calls `repr` for each argument when finding incompatible function arguments. If an argument is `numpy.array`(which is a common wrong case in deep learning program), the data content will be shown, which is friendly especially when `numpy.array` has a large shape.\r\nThe reason is that paddle use `pybind11` to do python-c++ interaction, and the error message is generated in pybind11. \r\n\r\nSince we cannot change the error message in pybind11, I split some type-checking and type-converting logic from pybind11, and do them in Paddle itself.\r\n\r\nAfter this PR, the error message is,\r\n```\r\nTraceback (most recent call last):\r\n  File \"aa.py\", line 13, in <module>\r\n    loss = model(x.numpy())\r\n  File \"aa.py\", line 5, in model\r\n    return paddle.mean(x)\r\n  File \"/usr/local/lib/python3.5/dist-packages/paddle/tensor/stat.py\", line 97, in mean\r\n    'reduce_all', reduce_all)\r\npaddle.fluid.core_avx.EnforceNotMet: \r\n\r\n--------------------------------------\r\nC++ Traceback (most recent call last):\r\n--------------------------------------\r\n0   paddle::platform::EnforceNotMet::EnforceNotMet(paddle::platform::ErrorSummary const&, char const*, int)\r\n1   paddle::platform::GetCurrentTraceBackString[abi:cxx11]()\r\n\r\n----------------------\r\nError Message Summary:\r\n----------------------\r\nInvalidArgumentError: reduce_mean(): argument 'X' (position 0) must be Tensor, but got numpy.ndarray (at /Paddle/Paddle/paddle/fluid/pybind/op_function.h:50) \r\n```\r\n\r\n#### Performance\r\nThe time of training ptb_lm model for one epoch on a single v100 card.  (run each for 3 times and calculate the average time)\r\n\r\n- before PR: 98.21 s\r\n- after PR: 98.86 s\r\n\r\nThe diff is 0.65%, which means that this PR has little effect on the performance of dygraph model.\r\n\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23450",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23450/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23450/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23450/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23450",
        "id": 593253380,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDY4NzM1",
        "number": 23450,
        "title": "API(fluid.gridents) error message enhancement",
        "user": {
            "login": "Aurelius84",
            "id": 9301846,
            "node_id": "MDQ6VXNlcjkzMDE4NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9301846?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aurelius84",
            "html_url": "https://github.com/Aurelius84",
            "followers_url": "https://api.github.com/users/Aurelius84/followers",
            "following_url": "https://api.github.com/users/Aurelius84/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aurelius84/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aurelius84/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aurelius84/subscriptions",
            "organizations_url": "https://api.github.com/users/Aurelius84/orgs",
            "repos_url": "https://api.github.com/users/Aurelius84/repos",
            "events_url": "https://api.github.com/users/Aurelius84/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aurelius84/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-03T09:39:27Z",
        "updated_at": "2020-04-09T04:17:37Z",
        "closed_at": "2020-04-09T04:17:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23450",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23450",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23450.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23450.patch"
        },
        "body": "### gradients API\u8f93\u5165\u7c7b\u578b\u68c0\u67e5\uff08\u4ec5\u6d89\u53capython\u7aef\uff09\r\n\u6d4b\u8bd5\u6837\u4f8b\uff1a\r\n```python\r\nx = fluid.data(name='x', shape=[None, 2, 8, 8], dtype='float32')\r\nx.stop_gradient = False\r\nconv = fluid.layers.conv2d(x, 4, 1, bias_attr=False)\r\ny = fluid.layers.relu(conv)\r\n```\r\n#### 1. targets\u53c2\u6570\u5fc5\u987b\u662f`list/Variable`\r\n```python\r\nx_grad = fluid.gradients(y.name, x)\r\n```\r\n\r\n+ \u4f18\u5316\u524d\uff0c\u9519\u8bef\u62a5\u5728\u5b50\u51fd\u6570`calc_gradient`\u5177\u4f53\u4ee3\u7801\u6267\u884c\u5904\uff0c\u5bf9\u7528\u6237\u4e0d\u660e\u6717\r\n```\r\nFile \"backward.py\", line 1578, in calc_gradient\r\n    block = targets[0].block\r\nAttributeError: 'str' object has no attribute 'block'\r\n```\r\n+ \u4f18\u5316\u540e\uff0c\u5728gradients\u63a5\u53e3\u5904\u76f4\u63a5\u62a5\u9519\r\n```python\r\nTypeError: The type of 'targets' in fluid.backward.gradients must be (<class 'paddle.fluid.framework.Variable'>, <class 'list'>), but received <class 'str'>.\r\n```\r\n\r\n#### 2. inputs\u53c2\u6570\u5fc5\u987b\u662f`list/Variable`\r\n```python\r\nx_grad = fluid.gradients(y, x.name)\r\n```\r\n\r\n+ \u4f18\u5316\u524d\uff0c\u9519\u8bef\u62a5\u5728\u5b50\u51fd\u6570`calc_gradient`\u5177\u4f53\u4ee3\u7801\u6267\u884c\u5904\uff0c\u5bf9\u7528\u6237\u4e0d\u660e\u6717\r\n```python\r\nFile \"backward.py\", line 1638, in calc_gradient\r\n    if input.block.program != prog:\r\nAttributeError: 'str' object has no attribute 'block'\r\n```\r\n+ \u4f18\u5316\u540e\uff0c\u5728gradients\u63a5\u53e3\u5904\u76f4\u63a5\u62a5\u9519\r\n```python\r\nTypeError: The type of 'inputs' in fluid.backward.gradients must be (<class 'paddle.fluid.framework.Variable'>, <class 'list'>), but received <class 'str'>.\r\n```\r\n\r\n#### 3. target_gradients\u53c2\u6570\u5fc5\u987b\u662f`Variable\u6216None`\r\n```python\r\nx_grad = fluid.gradients([y], [x], target_gradients=x.name)\r\n```\r\n+ \u4f18\u5316\u524d\uff0c\u9519\u8bef\u62a5\u5728\u5b50\u51fd\u6570`calc_gradient`\u5177\u4f53\u4ee3\u7801\u6267\u884c\u5904\uff0c\u5bf9\u7528\u6237\u4e0d\u660e\u6717\r\n```python\r\nFile \"backward.py\", line 1625, in calc_gradient\r\n    if target.shape != grad.shape:\r\nAttributeError: 'str' object has no attribute 'shape'\r\n```\r\n+ \u4f18\u5316\u540e\uff0c\u5728gradients\u63a5\u53e3\u5904\u76f4\u63a5\u62a5\u9519\r\n```python\r\nTypeError: The type of 'target_gradients' in fluid.backward.gradients must be (<class 'paddle.fluid.framework.Variable'>, <class 'list'>, <class 'NoneType'>), but received <class 'str'>.\r\n```\r\n\r\n#### 4. no_grad_set\u53c2\u6570\u5fc5\u987b\u662f`set\u6216None`\r\n```python\r\nx_grad = fluid.gradients([y], x, no_grad_set=conv)\r\n```\r\n\r\n+ \u4f18\u5316\u524d\uff0c\u9519\u8bef\u62a5\u5728\u5b50\u51fd\u6570`_get_no_grad_set_name`\u5177\u4f53\u4ee3\u7801\u6267\u884c\u5904\uff0c\u5bf9\u7528\u6237\u4e0d\u660e\u6717\r\n```python\r\nFile \"backward.py\", line 1141, in _get_no_grad_set_name\r\n    format(type(no_grad_set)))\r\nTypeError: The type of no_grad_set should be set or list or tuple, but received <class 'paddle.fluid.framework.Variable'>\r\n```\r\n+ \u4f18\u5316\u540e\uff0c\u5728gradients\u63a5\u53e3\u5904\u76f4\u63a5\u62a5\u9519\r\n```python\r\nTypeError: The type of 'no_grad_set' in fluid.backward.gradients must be (<class 'set'>, <class 'NoneType'>), but received <class 'paddle.fluid.framework.Variable'>.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23539",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23539/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23539/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23539/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23539",
        "id": 595672293,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwMTA0ODIy",
        "number": 23539,
        "title": "API(PRelu) error message enhancement",
        "user": {
            "login": "songyouwei",
            "id": 2573291,
            "node_id": "MDQ6VXNlcjI1NzMyOTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2573291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/songyouwei",
            "html_url": "https://github.com/songyouwei",
            "followers_url": "https://api.github.com/users/songyouwei/followers",
            "following_url": "https://api.github.com/users/songyouwei/following{/other_user}",
            "gists_url": "https://api.github.com/users/songyouwei/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/songyouwei/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/songyouwei/subscriptions",
            "organizations_url": "https://api.github.com/users/songyouwei/orgs",
            "repos_url": "https://api.github.com/users/songyouwei/repos",
            "events_url": "https://api.github.com/users/songyouwei/events{/privacy}",
            "received_events_url": "https://api.github.com/users/songyouwei/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-07T08:00:37Z",
        "updated_at": "2020-04-10T13:35:15Z",
        "closed_at": "2020-04-10T13:33:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23539",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23539",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23539.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23539.patch"
        },
        "body": "`dygraph.PRelu` Python API\u7c7b\u578b\u68c0\u67e5\u589e\u5f3a\r\n\u5f53\u6b64\u52a8\u6001\u56feAPI\u5728\u9759\u6001\u56fe\u4e0b\u8fd0\u884c\u65f6\uff1a\r\n\r\n\u68c0\u67e5input\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n\u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat32\r\n\u5f02\u5e38\u60c5\u51b5\u793a\u4f8b\u5982\u4e0b:\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nlayer = fluid.PRelu(\r\n    mode='all',\r\n    param_attr=fluid.ParamAttr(\r\n        initializer=fluid.initializer.Constant(1.0)))\r\n# the input must be Variable.\r\nx0 = fluid.create_lod_tensor(\r\n    np.array([-1, 3, 5, 5]), [[1, 1, 1, 1]], fluid.CPUPlace())\r\nlayer(x0)\r\n# TypeError: The type of 'input' in PRelu must be <class 'paddle.fluid.framework.Variable'>, but received <class 'paddle.fluid.core_avx.LoDTensor'>. \r\n\r\ndata_t = fluid.data(name=\"input\", shape=[5, 200, 100, 100], dtype=\"float64\")\r\nlayer(data_t)\r\n# TypeError: The data type of 'input' in PRelu must be ['float32'], but received float64.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23535",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23535/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23535/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23535/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23535",
        "id": 595656629,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwMDkxODM3",
        "number": 23535,
        "title": "API(GRUUnit) error message enhancement",
        "user": {
            "login": "songyouwei",
            "id": 2573291,
            "node_id": "MDQ6VXNlcjI1NzMyOTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2573291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/songyouwei",
            "html_url": "https://github.com/songyouwei",
            "followers_url": "https://api.github.com/users/songyouwei/followers",
            "following_url": "https://api.github.com/users/songyouwei/following{/other_user}",
            "gists_url": "https://api.github.com/users/songyouwei/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/songyouwei/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/songyouwei/subscriptions",
            "organizations_url": "https://api.github.com/users/songyouwei/orgs",
            "repos_url": "https://api.github.com/users/songyouwei/repos",
            "events_url": "https://api.github.com/users/songyouwei/events{/privacy}",
            "received_events_url": "https://api.github.com/users/songyouwei/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-07T07:33:14Z",
        "updated_at": "2020-04-10T13:35:19Z",
        "closed_at": "2020-04-10T13:33:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23535",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23535",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23535.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23535.patch"
        },
        "body": "`dygraph.GRUUnit` Python API\u7c7b\u578b\u68c0\u67e5\u589e\u5f3a\r\n\u5f53\u6b64\u52a8\u6001\u56feAPI\u5728\u9759\u6001\u56fe\u4e0b\u8fd0\u884c\u65f6\uff1a\r\n\r\n\u68c0\u67e5input\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n\u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat32/float64\r\n\u5f02\u5e38\u60c5\u51b5\u793a\u4f8b\u5982\u4e0b:\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nD = 5\r\nlayer = fluid.dygraph.nn.GRUUnit(size=D * 3)\r\n# the input must be Variable.\r\nx0 = fluid.create_lod_tensor(\r\n    np.array([-1, 3, 5, 5]), [[1, 1, 1, 1]], fluid.CPUPlace())\r\nlayer(x0, x0)\r\n# TypeError: The type of 'input' in GRUUnit must be <class 'paddle.fluid.framework.Variable'>, but received <class 'paddle.fluid.core_avx.LoDTensor'>. \r\n\r\nx = fluid.data(name='x', shape=[-1, D * 3], dtype='float16')\r\nhidden = fluid.data(name='hidden', shape=[-1, D], dtype='float32')\r\nlayer(x, hidden)\r\n# TypeError: The data type of 'input' in GRUUnit must be ['float32', 'float64'], but received float16.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23533",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23533/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23533/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23533/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23533",
        "id": 595651514,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwMDg3NjE4",
        "number": 23533,
        "title": "API(Embedding) error message enhancement",
        "user": {
            "login": "songyouwei",
            "id": 2573291,
            "node_id": "MDQ6VXNlcjI1NzMyOTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2573291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/songyouwei",
            "html_url": "https://github.com/songyouwei",
            "followers_url": "https://api.github.com/users/songyouwei/followers",
            "following_url": "https://api.github.com/users/songyouwei/following{/other_user}",
            "gists_url": "https://api.github.com/users/songyouwei/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/songyouwei/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/songyouwei/subscriptions",
            "organizations_url": "https://api.github.com/users/songyouwei/orgs",
            "repos_url": "https://api.github.com/users/songyouwei/repos",
            "events_url": "https://api.github.com/users/songyouwei/events{/privacy}",
            "received_events_url": "https://api.github.com/users/songyouwei/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-07T07:24:11Z",
        "updated_at": "2020-04-10T13:35:24Z",
        "closed_at": "2020-04-10T13:25:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23533",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23533",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23533.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23533.patch"
        },
        "body": "`dygraph.Embedding` Python API\u7c7b\u578b\u68c0\u67e5\u589e\u5f3a\r\n\u5f53\u6b64\u52a8\u6001\u56feAPI\u5728\u9759\u6001\u56fe\u4e0b\u8fd0\u884c\u65f6\uff1a\r\n\r\n\u68c0\u67e5input\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n\u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3aint64\r\n\u5f02\u5e38\u60c5\u51b5\u793a\u4f8b\u5982\u4e0b:\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\ndict_size = 20\r\nlayer = fluid.dygraph.nn.Embedding(\r\n    size=[dict_size, 32], param_attr='emb.w', is_sparse=False)\r\nx0 = fluid.create_lod_tensor(\r\n    np.array([-1, 3, 5, 5]), [[1, 1, 1, 1]], fluid.CPUPlace())\r\nlayer(x0)\r\n# TypeError: The type of 'input' in Embedding must be <class 'paddle.fluid.framework.Variable'>, but received <class 'paddle.fluid.core_avx.LoDTensor'>. \r\n\r\ndata_t = fluid.data(name='word', shape=[1], dtype='int32')\r\nlayer(data_t)\r\n# TypeError: The data type of 'input' in Embedding must be ['int64'], but received int32.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23528",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23528/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23528/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23528/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23528",
        "id": 595637624,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwMDc2Mzc0",
        "number": 23528,
        "title": "API(BilinearTensorProduct) error message enhancement",
        "user": {
            "login": "songyouwei",
            "id": 2573291,
            "node_id": "MDQ6VXNlcjI1NzMyOTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2573291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/songyouwei",
            "html_url": "https://github.com/songyouwei",
            "followers_url": "https://api.github.com/users/songyouwei/followers",
            "following_url": "https://api.github.com/users/songyouwei/following{/other_user}",
            "gists_url": "https://api.github.com/users/songyouwei/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/songyouwei/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/songyouwei/subscriptions",
            "organizations_url": "https://api.github.com/users/songyouwei/orgs",
            "repos_url": "https://api.github.com/users/songyouwei/repos",
            "events_url": "https://api.github.com/users/songyouwei/events{/privacy}",
            "received_events_url": "https://api.github.com/users/songyouwei/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-07T06:57:23Z",
        "updated_at": "2020-04-10T13:35:28Z",
        "closed_at": "2020-04-10T13:24:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23528",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23528",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23528.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23528.patch"
        },
        "body": "`dygraph.BilinearTensorProduct` Python API\u7c7b\u578b\u68c0\u67e5\u589e\u5f3a\r\n\u5f53\u6b64\u52a8\u6001\u56feAPI\u5728\u9759\u6001\u56fe\u4e0b\u8fd0\u884c\u65f6\uff1a\r\n\r\n\u68c0\u67e5input\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n\u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat32, float64\r\n\u5f02\u5e38\u60c5\u51b5\u793a\u4f8b\u5982\u4e0b:\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nlayer = fluid.dygraph.nn.BilinearTensorProduct(\r\n    input1_dim=5, input2_dim=4, output_dim=1000)\r\n# the input must be Variable.\r\nx0 = fluid.create_lod_tensor(\r\n    np.array([-1, 3, 5, 5]), [[1, 1, 1, 1]], fluid.CPUPlace())\r\nlayer(x0, x0)\r\n# TypeError: The type of 'x' in BilinearTensorProduct must be <class 'paddle.fluid.framework.Variable'>, but received <class 'paddle.fluid.core_avx.LoDTensor'>. \r\n\r\nx1 = fluid.data(name='x1', shape=[-1, 5], dtype=\"float16\")\r\nx2 = fluid.data(name='x2', shape=[-1, 4], dtype=\"float32\")\r\nlayer(x1, x2)\r\n# TypeError: The data type of 'x' in BilinearTensorProduct must be ['float32', 'float64'], but received float16.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23607",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23607/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23607/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23607/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23607",
        "id": 596315893,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwNjM0Njgw",
        "number": 23607,
        "title": "API/OP (Pool2D) error message enhancement ",
        "user": {
            "login": "JepsonWong",
            "id": 16509038,
            "node_id": "MDQ6VXNlcjE2NTA5MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16509038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JepsonWong",
            "html_url": "https://github.com/JepsonWong",
            "followers_url": "https://api.github.com/users/JepsonWong/followers",
            "following_url": "https://api.github.com/users/JepsonWong/following{/other_user}",
            "gists_url": "https://api.github.com/users/JepsonWong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JepsonWong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JepsonWong/subscriptions",
            "organizations_url": "https://api.github.com/users/JepsonWong/orgs",
            "repos_url": "https://api.github.com/users/JepsonWong/repos",
            "events_url": "https://api.github.com/users/JepsonWong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JepsonWong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-08T05:20:56Z",
        "updated_at": "2020-04-10T03:39:04Z",
        "closed_at": "2020-04-10T03:22:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23607",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23607",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23607.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23607.patch"
        },
        "body": "error message enhancement for **Pool2D**.\r\n\r\n* check the input's type is Variable\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid.dygraph import nn\r\nimport numpy as np\r\n\r\ndata = np.random.random((3, 32, 32, 5)).astype('float32')\r\npool2d = fluid.dygraph.Pool2D(\r\n    pool_size=2,\r\n    pool_type='max',\r\n    pool_stride=1,\r\n    global_pooling=False)\r\nret = pool2d(data)\r\nTypeError: The type of 'input' in Pool2D must be <class 'paddle.fluid.framework.Variable'>, but received <type 'numpy.ndarray'>.\r\n```\r\n\r\n* check the input's dtype is in ['int8', 'uint8', 'float16', 'float32', 'float64']\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid.dygraph import nn\r\nimport numpy as np\r\n\r\ndata = fluid.layers.data(name='x1', shape=[3, 32, 32, 5], dtype=\"int32\")\r\npool2d = fluid.dygraph.Pool2D(\r\n    pool_size=2,\r\n    pool_type='max',\r\n    pool_stride=1,\r\n    global_pooling=False)\r\nret = pool2d(data)\r\nTypeError: The data type of 'input' in Pool2D must be ['int8', 'uint8', 'float16', 'float32', 'float64'], but received int32.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23590",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23590/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23590/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23590/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23590",
        "id": 596274870,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwNjAxNjc0",
        "number": 23590,
        "title": "API/OP (Conv2DTranspose) error message enhancement",
        "user": {
            "login": "JepsonWong",
            "id": 16509038,
            "node_id": "MDQ6VXNlcjE2NTA5MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16509038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JepsonWong",
            "html_url": "https://github.com/JepsonWong",
            "followers_url": "https://api.github.com/users/JepsonWong/followers",
            "following_url": "https://api.github.com/users/JepsonWong/following{/other_user}",
            "gists_url": "https://api.github.com/users/JepsonWong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JepsonWong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JepsonWong/subscriptions",
            "organizations_url": "https://api.github.com/users/JepsonWong/orgs",
            "repos_url": "https://api.github.com/users/JepsonWong/repos",
            "events_url": "https://api.github.com/users/JepsonWong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JepsonWong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-08T03:02:17Z",
        "updated_at": "2020-04-10T03:39:46Z",
        "closed_at": "2020-04-10T03:18:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23590",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23590",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23590.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23590.patch"
        },
        "body": "error message enhancement for **Conv2DTranspose**.\r\n\r\n* check the input's type is Variable\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid.dygraph import nn\r\nimport numpy as np\r\n\r\nimages = np.ones([2, 3, 5, 5], dtype='float32')\r\nconv2d = nn.Conv2DTranspose(\r\n    num_channels=3, num_filters=3, filter_size=[2, 2])\r\nret = conv2d(images)\r\nTypeError: The type of 'input' in Conv2DTranspose must be <class 'paddle.fluid.framework.Variable'>, but received <type 'numpy.ndarray'>.\r\n```\r\n\r\n* check the input's dtype is in ['float16', 'float32', 'float64']\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid.dygraph import nn\r\nimport numpy as np\r\n\r\nimages = fluid.layers.data(name='pixel', shape=[2, 3, 5, 5], dtype='int32')\r\nconv2d = nn.Conv2DTranspose(\r\n    num_channels=3, num_filters=3, filter_size=[2, 2])\r\nret = conv2d(images)\r\nTypeError: The data type of 'input' in Conv2DTranspose must be ['float16', 'float32', 'float64'], but received int32.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23595",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23595/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23595/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23595/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23595",
        "id": 596289594,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwNjEzMzk4",
        "number": 23595,
        "title": "API/OP (Linear) error message enhancement",
        "user": {
            "login": "JepsonWong",
            "id": 16509038,
            "node_id": "MDQ6VXNlcjE2NTA5MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16509038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JepsonWong",
            "html_url": "https://github.com/JepsonWong",
            "followers_url": "https://api.github.com/users/JepsonWong/followers",
            "following_url": "https://api.github.com/users/JepsonWong/following{/other_user}",
            "gists_url": "https://api.github.com/users/JepsonWong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JepsonWong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JepsonWong/subscriptions",
            "organizations_url": "https://api.github.com/users/JepsonWong/orgs",
            "repos_url": "https://api.github.com/users/JepsonWong/repos",
            "events_url": "https://api.github.com/users/JepsonWong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JepsonWong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-08T03:51:56Z",
        "updated_at": "2020-04-09T12:48:20Z",
        "closed_at": "2020-04-09T12:41:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23595",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23595",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23595.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23595.patch"
        },
        "body": "error message enhancement for **Linear**.\r\n\r\n* check the input's type is Variable\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid.dygraph import nn\r\nimport numpy as np\r\n\r\ninp = np.ones([3, 32, 32], dtype='float32')\r\nlinear = nn.Linear(32, 4, bias_attr=fluid.initializer.ConstantInitializer(value=1))\r\nlinear_ret1 = linear(inp)\r\nTypeError: The type of 'input' in Linear must be <class 'paddle.fluid.framework.Variable'>, but received <type 'numpy.ndarray'>.\r\n```\r\n\r\n* check the input's dtype is in ['float16', 'float32', 'float64']\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid.dygraph import nn\r\nimport numpy as np\r\n\r\ninp = fluid.layers.data(name='pixel', shape=[3, 32, 32], dtype='int32')\r\nlinear = nn.Linear(32, 4, bias_attr=fluid.initializer.ConstantInitializer(value=1))\r\nlinear_ret2 = linear(inp)\r\nTypeError: The data type of 'input' in Linear must be ['float16', 'float32', 'float64'], but received int32.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23561",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23561/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23561/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23561/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23561",
        "id": 595793944,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwMjA1Njg0",
        "number": 23561,
        "title": "API/OP (Conv2D) error message enhancement",
        "user": {
            "login": "JepsonWong",
            "id": 16509038,
            "node_id": "MDQ6VXNlcjE2NTA5MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16509038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JepsonWong",
            "html_url": "https://github.com/JepsonWong",
            "followers_url": "https://api.github.com/users/JepsonWong/followers",
            "following_url": "https://api.github.com/users/JepsonWong/following{/other_user}",
            "gists_url": "https://api.github.com/users/JepsonWong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JepsonWong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JepsonWong/subscriptions",
            "organizations_url": "https://api.github.com/users/JepsonWong/orgs",
            "repos_url": "https://api.github.com/users/JepsonWong/repos",
            "events_url": "https://api.github.com/users/JepsonWong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JepsonWong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-07T11:22:41Z",
        "updated_at": "2020-04-09T12:49:39Z",
        "closed_at": "2020-04-09T12:40:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23561",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23561",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23561.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23561.patch"
        },
        "body": "API/OP (**Conv2D**) error message enhancement.\r\n\r\n* check the input's type is Variable\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid.dygraph import nn\r\nimport numpy as np\r\n\r\nimages = np.ones([2, 3, 5, 5], dtype='float32')\r\nconv2d = nn.Conv2D(\r\n    num_channels=3, num_filters=3, filter_size=[2, 2])\r\nconv2d_ret1 = conv2d(images)\r\n\r\n# TypeError: The type of 'input' in Conv2D must be <class 'paddle.fluid.framework.Variable'>, but received <type 'numpy.ndarray'>\r\n```\r\n\r\n* check the input's dtype is in ['float16', 'float32', 'float64']\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid.dygraph import nn\r\nimport numpy as np\r\n\r\nimages = fluid.layers.data(\r\n    name='pixel', shape=[3, 5, 5], dtype='int32')\r\nconv2d = nn.Conv2D(\r\n    num_channels=3, num_filters=3, filter_size=[2, 2])\r\nconv2d_ret2 = conv2d(images)\r\nTypeError: The data type of 'input' in Conv2D must be ['float16', 'float32', 'float64'], but received int32.\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23534",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23534/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23534/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23534/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23534",
        "id": 595653414,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwMDg5MjAx",
        "number": 23534,
        "title": "API(LayerNorm) error message enhancement",
        "user": {
            "login": "chenwhql",
            "id": 22561442,
            "node_id": "MDQ6VXNlcjIyNTYxNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22561442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenwhql",
            "html_url": "https://github.com/chenwhql",
            "followers_url": "https://api.github.com/users/chenwhql/followers",
            "following_url": "https://api.github.com/users/chenwhql/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenwhql/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenwhql/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenwhql/subscriptions",
            "organizations_url": "https://api.github.com/users/chenwhql/orgs",
            "repos_url": "https://api.github.com/users/chenwhql/repos",
            "events_url": "https://api.github.com/users/chenwhql/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenwhql/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-07T07:27:36Z",
        "updated_at": "2020-04-09T02:58:37Z",
        "closed_at": "2020-04-09T02:58:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23534",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23534",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23534.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23534.patch"
        },
        "body": "## dygraph.LayerNorm Python API\u7c7b\u578b\u68c0\u67e5\u589e\u5f3a\r\n\u5f53\u6b64\u52a8\u6001\u56feAPI\u5728\u9759\u6001\u56fe\u4e0b\u8fd0\u884c\u65f6\uff1a\r\n- 1. \u68c0\u67e5input\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n- 2. \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat32, float64\r\n\r\n\u4e24\u4e2a\u5f02\u5e38\u60c5\u51b5\u793a\u4f8b\u5982\u4e0b\uff08\u53ef\u624b\u52a8\u6267\u884c\uff09:\r\n\r\n- type error\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nlayer_norm = fluid.LayerNorm([32, 32])\r\nx1 = np.random.random((3, 32, 32)).astype('float32')\r\nlayer_norm(x1)\r\n# TypeError: The type of 'input' in LayerNorm must be <class 'paddle.fluid.framework.Variable'>, but received <class 'numpy.ndarray'>. \r\n```\r\n\r\n- dtype error\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nlayer_norm = fluid.LayerNorm([32, 32])\r\nx2 = fluid.layers.data(name='x2', shape=[3, 32, 32], dtype=\"int32\")\r\nlayer_norm(x2)\r\n# TypeError: The data type of 'input' in LayerNorm must be ['float32', 'float64'], but received int32. \r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23784",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23784/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23784/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23784/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23784",
        "id": 598636378,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAyNDQ1OTM5",
        "number": 23784,
        "title": "Fix print_signatures.py when defaults=None",
        "user": {
            "login": "sneaxiy",
            "id": 32832641,
            "node_id": "MDQ6VXNlcjMyODMyNjQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32832641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sneaxiy",
            "html_url": "https://github.com/sneaxiy",
            "followers_url": "https://api.github.com/users/sneaxiy/followers",
            "following_url": "https://api.github.com/users/sneaxiy/following{/other_user}",
            "gists_url": "https://api.github.com/users/sneaxiy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sneaxiy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sneaxiy/subscriptions",
            "organizations_url": "https://api.github.com/users/sneaxiy/orgs",
            "repos_url": "https://api.github.com/users/sneaxiy/repos",
            "events_url": "https://api.github.com/users/sneaxiy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sneaxiy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-13T02:46:25Z",
        "updated_at": "2020-04-13T07:21:48Z",
        "closed_at": "2020-04-13T07:21:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23784",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23784",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23784.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23784.patch"
        },
        "body": "When the API is something like:\r\n\r\n```\r\ndef test(*args, **kwargs):\r\n    pass\r\n```\r\n\r\nThe `defaults` field of its spec would be None, and original implementation of `print_signatures.py` would produce empty spec (because of the `except TypeError` branch) for this kind of API.\r\n\r\nAfter this PR's revision, the spec would become:\r\n```\r\nArgSpec(args=[], varargs=args, keywords=kwargs, defaults=None)\r\n```\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23525",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23525/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23525/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23525/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23525",
        "id": 595628536,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwMDY5MDA3",
        "number": 23525,
        "title": "API(BatchNorm) error message enhancement",
        "user": {
            "login": "chenwhql",
            "id": 22561442,
            "node_id": "MDQ6VXNlcjIyNTYxNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22561442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenwhql",
            "html_url": "https://github.com/chenwhql",
            "followers_url": "https://api.github.com/users/chenwhql/followers",
            "following_url": "https://api.github.com/users/chenwhql/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenwhql/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenwhql/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenwhql/subscriptions",
            "organizations_url": "https://api.github.com/users/chenwhql/orgs",
            "repos_url": "https://api.github.com/users/chenwhql/repos",
            "events_url": "https://api.github.com/users/chenwhql/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenwhql/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-07T06:38:00Z",
        "updated_at": "2020-04-08T03:06:18Z",
        "closed_at": "2020-04-08T03:06:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23525",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23525",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23525.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23525.patch"
        },
        "body": "## dygraph.BatchNorm Python API\u7c7b\u578b\u68c0\u67e5\u589e\u5f3a\r\n\u5f53\u6b64\u52a8\u6001\u56feAPI\u5728\u9759\u6001\u56fe\u4e0b\u8fd0\u884c\u65f6\uff1a\r\n- 1. \u68c0\u67e5input\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n- 2. \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat16, float32, float64\r\n\r\n\u4e24\u4e2a\u5f02\u5e38\u60c5\u51b5\u793a\u4f8b\u5982\u4e0b\uff08\u53ef\u624b\u52a8\u6267\u884c\uff09:\r\n\r\n- type error\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nbatch_norm = fluid.dygraph.BatchNorm(10)\r\nx1 = fluid.create_lod_tensor(\r\n    np.array([-1, 3, 5, 5]), [[1, 1, 1, 1]], fluid.CPUPlace())\r\nbatch_norm(x1)\r\n# TypeError: The type of 'input' in BatchNorm must be <class 'paddle.fluid.framework.Variable'>, but received <class 'paddle.fluid.core_avx.LoDTensor'>.\r\n```\r\n\r\n- dtype error\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nbatch_norm = fluid.dygraph.BatchNorm(10)\r\nx2 = fluid.layers.data(name='x2', shape=[3, 4, 5, 6], dtype=\"int32\")\r\nbatch_norm(x2)\r\n# TypeError: The data type of 'input' in BatchNorm must be ['float16', 'float32', 'float64'], but received int32. \r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23446",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23446/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23446/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23446/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23446",
        "id": 593142155,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk3OTc2MjU1",
        "number": 23446,
        "title": "API(append_backward) error message enhancement",
        "user": {
            "login": "Aurelius84",
            "id": 9301846,
            "node_id": "MDQ6VXNlcjkzMDE4NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9301846?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aurelius84",
            "html_url": "https://github.com/Aurelius84",
            "followers_url": "https://api.github.com/users/Aurelius84/followers",
            "following_url": "https://api.github.com/users/Aurelius84/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aurelius84/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aurelius84/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aurelius84/subscriptions",
            "organizations_url": "https://api.github.com/users/Aurelius84/orgs",
            "repos_url": "https://api.github.com/users/Aurelius84/repos",
            "events_url": "https://api.github.com/users/Aurelius84/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aurelius84/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-03T06:44:01Z",
        "updated_at": "2020-04-10T11:11:18Z",
        "closed_at": "2020-04-10T11:11:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23446",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23446",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23446.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23446.patch"
        },
        "body": "### append_backward API\u8f93\u5165\u7c7b\u578b\u68c0\u67e5\uff08\u4ec5\u6d89\u53capython\u7aef\uff09\r\n\r\n#### 1. loss\u53c2\u6570\u5fc5\u987b\u4e3a`Variable`\r\n```python\r\nfluid.backward.append_backward(loss=avg_loss.name)  # \u82e5\u4f20\u5165string\u7c7b\u578b\r\n```\r\n+ \u4f18\u5316\u524d\u53ea\u6709\u4e00\u4e2aassert\u8bed\u53e5\u76f8\u5173\u62a5\u9519\r\n```python\r\n  File \"backward.py\", line 1245, in append_backward\r\n    assert isinstance(loss, framework.Variable)\r\nAssertionError\r\n```\r\n+ \u4f18\u5316\u540e\uff0c\u4f1a\u63d0\u793a\u5f53\u524d\u8f6c\u5165\u7684\u7c7b\u578b\r\n```python\r\nTypeError: The type of 'loss' in fluid.backward.append_backward must be <class 'paddle.fluid.framework.Variable'>, but received <class 'str'>.\r\n```\r\n\r\n#### 2. parameter_list\u53c2\u6570\u4e3a`list[Variable|str]`\r\n```python\r\nparam_names = [\r\n    param.name\r\n    for param in fluid.default_main_program().block(0).all_parameters()\r\n]\r\nparam_names[0] = np.random.random([10])\r\nfluid.backward.append_backward(loss=avg_loss, parameter_list=self.param_names)\r\n```\r\n+ \u4f18\u5316\u524d\uff0c\u82e5parameter_list\u7684\u5143\u7d20\u4e0d\u662fVaribale\u6216str\uff0c\u62a5\u5982\u4e0b\u9519\uff1a\r\n```python\r\nTypeError: The type of parameter_list's member must be paddle.fluid.Variable or str, but received <class 'numpy.ndarray'>.\r\n```\r\n+ \u4f18\u5316\u540e\uff0c\u589e\u52a0\u4e86\u5177\u4f53\u5143\u7d20\u7684\u4f4d\u7f6e\u4fe1\u606f\r\n```python\r\nTypeError: The type of 'parameter_list[0]' in fluid.backward.append_backward must be (<class 'paddle.fluid.framework.Variable'>, (<class 'str'>,)), but received <class 'numpy.ndarray'>.\r\n```\r\n\r\n#### 3. callbacks\u53c2\u6570\u5fc5\u987b\u4e3alist\r\n```python\r\ndef callback(block, context):\r\n    return\r\n\r\nfluid.backward.append_backward(loss=avg_loss, callbacks=callback)\r\n```\r\n+ \u4f18\u5316\u524d\uff0c\u4ec5\u4f1a\u8f93\u51faassert\u4fe1\u606f\r\n```python\r\n_append_backward_ops_\r\n    assert (isinstance(callbacks, list))\r\nAssertionError\r\n```\r\n+ \u4f18\u5316\u540e\uff0c\u6309\u7167\u89c4\u8303\u8f93\u51fa\u62a5\u9519\u4fe1\u606f\r\n```python\r\nTypeError: The type of 'callbacks' in fluid.backward.append_backward must be <class 'list'>, but received <class 'function'>.\r\n```\r\n\r\n+  \u79fb\u9664\u4e86\u5bf9`fluid.gradients`\u7684no_grad_set\u7684\u5f3a\u5236set\u7c7b\u578b\u68c0\u67e5\r\n\r\n> \u4e4b\u524d\u5b58\u5728no_grad_set\u4f20\u5165list\u3001tuple\u7684\u60c5\u51b5\uff0c\u5df2\u5728\u5185\u90e8\u8fdb\u884c\u517c\u5bb9\u5904\u7406\uff0c\u5e76\u5df2\u7ecf\u7ed9\u51fa\u4e86\u5b8c\u5907\u7684\u62a5\u9519\u4fe1\u606f\u63d0\u793a\uff0c\u6545\u6b64\u5904\u79fb\u9664\u5bf9`fluid.gradients`\u7684no_grad_set\u7684\u5f3a\u5236set\u7c7b\u578b\u68c0\u67e5\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28124",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28124/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28124/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/28124/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/28124",
        "id": 725320569,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTA2NTcyNjgw",
        "number": 28124,
        "title": "Enrich the python error types of paddle & polish format",
        "user": {
            "login": "chenwhql",
            "id": 22561442,
            "node_id": "MDQ6VXNlcjIyNTYxNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22561442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenwhql",
            "html_url": "https://github.com/chenwhql",
            "followers_url": "https://api.github.com/users/chenwhql/followers",
            "following_url": "https://api.github.com/users/chenwhql/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenwhql/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenwhql/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenwhql/subscriptions",
            "organizations_url": "https://api.github.com/users/chenwhql/orgs",
            "repos_url": "https://api.github.com/users/chenwhql/repos",
            "events_url": "https://api.github.com/users/chenwhql/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenwhql/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-10-20T08:05:30Z",
        "updated_at": "2020-10-27T03:07:46Z",
        "closed_at": "2020-10-27T03:07:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/28124",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/28124",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/28124.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/28124.patch"
        },
        "body": "<!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 -->\r\n### PR types\r\n<!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] -->\r\nNew features\r\n### PR changes\r\n<!-- One of [ OPs | APIs | Docs | Others ] -->\r\nOthers\r\n### Describe\r\n<!-- Describe what this PR does -->\r\n\r\nPaddle\u6846\u67b6\u4e2dC++\u7aef5000\u4f59\u6761\u4e0d\u5408\u89c4\u62a5\u9519\u7684\u9010\u6761\u5b8c\u5584\u5de5\u4f5c\u5df2\u7ecf\u57fa\u672c\u6536\u5c3e\uff0c\u6846\u67b6\u7684\u62a5\u9519\u8d28\u91cf\u76f8\u6bd4\u4e00\u5e74\u524d\u5df2\u7ecf\u6709\u4e86\u663e\u8457\u7684\u63d0\u5347\uff0c\u4e00\u5e74\u524d\uff0c\u6846\u67b6\u4e2d\u4ecd\u6709\u6570\u5343\u6761\u8fc7\u77ed\u7684\u3001\u8868\u610f\u4e0d\u660e\u7684\u3001\u751a\u81f3\u6ca1\u6709\u63d0\u793a\u7684\u62a5\u9519\uff0c\u6240\u4ee5\u57fa\u4e8e\u6211\u4eec\u5f53\u65f6\u7684\u72b6\u51b5\uff0c\u662f\u4e0d\u5177\u5907\u9690\u85cfC++\u6808\u7684\u6761\u4ef6\u7684\uff0c\u4e00\u65e6\u9690\u85cf\uff0c\u5f88\u591a\u539f\u672c\u5c31\u6ca1\u6709\u62a5\u9519\u63d0\u793a\u7684\u51fa\u9519\u57fa\u672c\u5c31\u65e0\u6cd5\u8c03\u8bd5\u4e86\uff0c\u5c3d\u7ba1\u90a3\u65f6\u7ade\u54c1\u9ed8\u8ba4\u90fd\u662f\u6ca1\u6709C++\u62a5\u9519\u6808\u7684\u3002\r\n\r\n\u4f46\u8fd9\u4e00\u5e74\u7ecf\u8fc7\u5927\u91cf\u540c\u5b66\u7684\u5b8c\u5584\uff0c\u62a5\u9519\u6574\u4f53\u7684\u8d28\u91cf\u63d0\u5347\u660e\u663e\uff0c\u6211\u4eec\u662f\u65f6\u5019\u9700\u8981\u6b63\u89c6C++\u6808\u7ed9\u5927\u591a\u6570\u666e\u901a\u7528\u6237\u5e26\u6765\u7684\u56f0\u6270\u4e86\u3002\r\n\r\n\u4f9d\u636e\u5a49\u5a77\u7684\u95ee\u5377\u8c03\u7814\u548c\u6df1\u8bbf\uff0cC++\u6808\u5927\u591a\u6570\u7528\u6237\u5e76\u4e0d\u5173\u5fc3\uff0c\u4e14\u957f\u671f\u4ee5\u6765\u4e5f\u4e00\u76f4\u88abAIStudio\u7684\u7528\u6237\u8bdf\u75c5\uff0c\u56e0\u6b64\u6211\u4eec\u57fa\u672c\u5f97\u51fa\u4e86\uff1a**\u8981\u57282.0\u6b63\u5f0f\u7248\u53d1\u5e03\u65f6\uff0c\u9ed8\u8ba4\u9690\u85cfC++\u6808\u7684\u7ed3\u8bba**\u3002\r\n\r\n\u4f46\u8003\u8651\u5230\u7814\u53d1\u4eba\u5458\u548c\u8d44\u6df1\u7528\u6237\u53ef\u80fd\u4ecd\u7136\u4f1a\u4f9d\u8d56C++\u6808\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u4fbf\u5229\u7684\u91cd\u65b0\u6253\u5f00C++\u6808\u7684\u65b9\u6cd5\uff1a\r\n\r\n\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff1a`export FLAGS_call_stack_level=2`\r\n\r\n> \u73b0\u5728\u9ed8\u8ba4FLAGS_call_stack_level=2\uff0c\u672cPR\u5e76\u6ca1\u6709\u8bbe\u7f6e\u9ed8\u8ba4\u9690\u85cfC++\u6808\uff0c\u9ed8\u8ba4\u9690\u85cf\u7684\u914d\u7f6e\u540e\u7eed\u518d\u8fdb\u884c\r\n\r\n----\r\n\r\n\u57fa\u4e8e\u4ee5\u4e0a\u80cc\u666f\uff0c\u73b0\u5728\u5c06paddle\u5185\u90e8\u5b9a\u4e49\u7684\u62a5\u9519\u7c7b\u578b\u6620\u5c04\u81f3python\u7aef\u539f\u751f\u62a5\u9519\u7c7b\u578b\uff0c\u4ee5\u8f83\u4e3a\u4e30\u5bcc\u7684python\u539f\u751f\u62a5\u9519\u7c7b\u578b\u66ff\u4ee3\u539f\u5148\u7406\u89e3\u6210\u672c\u8f83\u9ad8\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38`paddle.fluid.core_avx.EnforceNotMet`\uff0c\u4f7fpaddle 2.0\u7684\u62a5\u9519\u66f4\u52a0\u89c4\u8303\u3002\r\n\r\n\u4e3b\u8981\u6539\u52a8\u5305\u62ec\u4ee5\u4e0b\u51e0\u70b9\uff1a\r\n\r\n1. **\u79fb\u9664\u7406\u89e3\u6210\u672c\u9ad8\u7684paddle\u81ea\u5b9a\u4e49\u5f02\u5e38`paddle.fluid.core_avx.EnforceNotMet`**\r\n  paddle\u622a\u81f3\u76ee\u524d\u4e3a\u6b62\uff0c\u6574\u4e2aC++\u7aef\u90fd\u5728\u4f7f\u7528\u8fd9\u4e2a\u4e0d\u6613\u7406\u89e3\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u8fd9\u4e2a\u7c7b\u578b\u548cpython\u7684`ValueError`\u3001`TypeError`\u662f\u540c\u7ea7\u522b\u7684\uff0c\u4f46\u6211\u4eec\u7684`EnforceNotMet`\u7740\u5b9e\u751f\u50fb\uff0c\u7edf\u4e00\u4f7f\u7528python\u539f\u751f\u5f02\u5e38\u662f\u66f4\u52a0\u6807\u51c6\u7684\u505a\u6cd5\r\n  \r\n![image](https://user-images.githubusercontent.com/22561442/96952988-abc7c700-1522-11eb-9a02-99f40a6087c0.png)\r\n\r\n\r\n2. **\u79fb\u9664\u81ea\u5b9a\u4e49\u5206\u9694\u6807\u5fd7`Error Message Summary`**\r\n  `Error Message Summary`\u786e\u5b9e\u5728**\u8ba9\u7528\u6237\u66f4\u660e\u663e\u5730\u770b\u5230\u7684\u62a5\u9519\u4fe1\u606f**\u8fd9\u4e00\u70b9\u4e0a\u662f\u6709\u6548\u679c\u7684\uff0c\u4f46\u662f\u4e0d\u591f\u6807\u51c6\uff0c\u8fd9\u53ea\u662fpaddle\u72ec\u6709\u7684\u4e00\u79cd\u6bd4\u8f83low\u7684\u6807\u5fd7\uff0c\u4e00\u822cpython\u7528\u6237\u4f1a\u627e\u5173\u952e\u8bcd`***Error`\u786e\u8ba4\u62a5\u9519\u4fe1\u606f\u7684\u4f4d\u7f6e\uff0c\u989d\u5916\u7684\u5206\u9694\u4e0d\u662f\u521a\u9700\uff0c\u4ece\u957f\u8fdc\u8003\u8651\uff0c\u6211\u4eec\u5e94\u8be5\u4fdd\u6301\u81ea\u5df1\u7684\u6807\u51c6\u6027\uff0c\u800c\u4e0d\u662f\u5f15\u5165\u4e00\u4e9b\u5947\u602a\u7684\u6807\u5fd7\uff0c\u56e0\u6b64\u672cPR\u6539\u4e3a\u76f4\u63a5\u548c\u539f\u751fpython\u6808\u4fdd\u6301\u4e00\u6837\u7684\u62a5\u9519\u6548\u679c\r\n  \r\n![image](https://user-images.githubusercontent.com/22561442/96953020-beda9700-1522-11eb-8674-7b966da56a1a.png)\r\n\r\n\r\n3. **\u5c06\u6846\u67b6\u62a5\u9519\u7c7b\u578b\u4f53\u7cfb\u6620\u5c04\u5230python\u539f\u751f\u7684\u5f02\u5e38\u4f53\u7cfb**\r\n  \u4e0d\u589e\u52a0\u81ea\u5b9a\u4e49\u7684\u5f02\u5e38\u7c7b\u578b\u662f\u76ee\u524d\u7684\u8d8b\u52bf\uff0c\u672cPR\u5c06paddle\u5185\u5b9a\u4e49\u7684\u62a5\u9519\u7c7b\u578b\u6309\u5982\u4e0b\u89c4\u5219\u6620\u5c04\u5230\u7684python\u539f\u751f\u7684\u5f02\u5e38\u7c7b\u578b\u4e0a\uff0cpaddle\u5185\u7684\u9519\u8bef\u7c7b\u578b\u4f5c\u4e3a\u5b50\u7c7b\u578b\u9644\u5728\u4e3b\u62a5\u9519\u7c7b\u578b\u4e4b\u540e\uff0c\u964d\u4f4e\u7528\u6237\u7406\u89e3\u6210\u672c\u3002\r\n\r\n```\r\n/* Paddle Exception mapping rules:\r\n *   - InvalidArgumentError -> ValueError\r\n *   - NotFoundError -> RuntimeError\r\n *   - OutOfRangeError -> IndexError\r\n *   - AlreadyExistsError -> RuntimeError\r\n *   - ResourceExhaustedError -> MemoryError\r\n *   - PreconditionNotMetError -> RuntimeError\r\n *   - PermissionDeniedError -> RuntimeError\r\n *   - ExecutionTimeoutError -> RuntimeError\r\n *   - UnimplementedError -> NotImplementedError\r\n *   - UnavailableError -> RuntimeError\r\n *   - FatalError -> SystemError\r\n *   - ExternalError -> OSError\r\n */ \r\n```\r\n\r\n\u6ce8\u610f\uff1a\u672cPR\u4ec5\u9488\u5bf9\u9690\u85cfC++\u6808\u65f6\u7684\u62a5\u9519\u683c\u5f0f\u8fdb\u884c\u5b8c\u5584\uff01\u4ee5\u4e0b\u793a\u4f8b\u4e3a\u8bbe\u7f6e`FLAGS_call_stack_level=1`\u65f6\u7684\u663e\u793a\u6548\u679c\uff0c\u76ee\u524d`FLAGS_call_stack_level`\u9ed8\u8ba4\u4ecd\u4e3a2\uff0c\u5373\u9ed8\u8ba4\u663e\u793aC++\u6808\uff0c\u5728\u663e\u793aC++\u6808\u7684\u60c5\u51b5\u4e0b\uff0c\u62a5\u9519\u683c\u5f0f\u4ecd\u4e0e\u4e4b\u524d\u4e00\u81f4\uff0c\u57fa\u672c\u65e0\u53d8\u5316\u3002\r\n\r\n#### Dynamic mode Example\r\n\r\nBefore this PR:\r\n```\r\nTraceback (most recent call last):\r\n  File \"base_error_case2.py\", line 9, in <module>\r\n    res = linear(data)\r\n  File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/dygraph/layers.py\", line 829, in __call__\r\n    outputs = self.forward(*inputs, **kwargs)\r\n  File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/dygraph/nn.py\", line 970, in forward\r\n    self._use_mkldnn)\r\npaddle.fluid.core_avx.EnforceNotMet: \r\n----------------------\r\nError Message Summary:\r\n----------------------\r\nInvalidArgumentError: Input X's width should be equal to the Y's height, but received X's shape: [10, 2],Y's shape: [1, 10].\r\n  [Hint: Expected mat_dim_x.width_ == mat_dim_y.height_, but received mat_dim_x.width_:2 != mat_dim_y.height_:1.] (at /work/paddle_py2/paddle/fluid/operators/matmul_op.cc:586)\r\n  [operator < matmul > error]\r\n```\r\n\r\nAfter this PR:\r\n```\r\nTraceback (most recent call last):\r\n  File \"base_error_case2.py\", line 9, in <module>\r\n    res = linear(data)\r\n  File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/dygraph/layers.py\", line 829, in __call__\r\n    outputs = self.forward(*inputs, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/dygraph/nn.py\", line 970, in forward\r\n    self._use_mkldnn)\r\nValueError: (InvalidArgument) Input X's width should be equal to the Y's height, but received X's shape: [10, 2],Y's shape: [1, 10].\r\n  [Hint: Expected mat_dim_x.width_ == mat_dim_y.height_, but received mat_dim_x.width_:2 != mat_dim_y.height_:1.] (at /work/paddle/paddle/fluid/operators/matmul_op.cc:586)\r\n  [operator < matmul > error]\r\n```\r\n\r\n#### Static mode Example\r\n\r\nBefore this PR:\r\n```\r\nTraceback (most recent call last):\r\n  File \"base_error_case1.py\", line 29, in <module>\r\n    loss_data, = exe.run(fluid.default_main_program(), feed={'X': x, 'Y': y}, fetch_list=[avg_loss.name])\r\n  File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/executor.py\", line 1107, in run\r\n    six.reraise(*sys.exc_info())\r\n  File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/executor.py\", line 1105, in run\r\n    return_merged=return_merged)\r\n  File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/executor.py\", line 1229, in _run_impl\r\n    use_program_cache=use_program_cache)\r\n  File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/executor.py\", line 1314, in _run_program\r\n    fetch_var_name)\r\npaddle.fluid.core_avx.EnforceNotMet: \r\n\r\n  Compile Traceback (most recent call last):\r\n    File \"base_error_case1.py\", line 12, in <module>\r\n      predict = fluid.layers.fc(input=x, size=1, act=None)\r\n    File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/layers/nn.py\", line 352, in fc\r\n      \"y_num_col_dims\": 1})\r\n    File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/layer_helper.py\", line 43, in append_op\r\n      return self.main_program.current_block().append_op(*args, **kwargs)\r\n    File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/framework.py\", line 2917, in append_op\r\n      attrs=kwargs.get(\"attrs\", None))\r\n    File \"/usr/local/python2.7.15/lib/python2.7/site-packages/paddle/fluid/framework.py\", line 2014, in __init__\r\n      for frame in traceback.extract_stack():\r\n----------------------\r\nError Message Summary:\r\n----------------------\r\nInvalidArgumentError: After flatten the input tensor X and Y to 2-D dimensions matrix X1 and Y1, the matrix X1's width must be equal with matrix Y1's height. But received X's shape = [8, 12], X1's shape = [8, 12], X1's width = 12; Y's shape = [13, 1], Y1's shape = [13, 1], Y1's height = 13.\r\n  [Hint: Expected x_mat_dims[1] == y_mat_dims[0], but received x_mat_dims[1]:12 != y_mat_dims[0]:13.] (at /work/paddle_py2/paddle/fluid/operators/mul_op.cc:83)\r\n  [operator < mul > error]\r\n```\r\n\r\nAfter this PR:\r\n```\r\nTraceback (most recent call last):\r\n  File \"base_error_case1.py\", line 29, in <module>\r\n    loss_data, = exe.run(fluid.default_main_program(), feed={'X': x, 'Y': y}, fetch_list=[avg_loss.name])\r\n  File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/executor.py\", line 1107, in run\r\n    six.reraise(*sys.exc_info())\r\n  File \"/usr/local/lib/python3.7/site-packages/six.py\", line 703, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/executor.py\", line 1105, in run\r\n    return_merged=return_merged)\r\n  File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/executor.py\", line 1229, in _run_impl\r\n    use_program_cache=use_program_cache)\r\n  File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/executor.py\", line 1314, in _run_program\r\n    fetch_var_name)\r\nValueError: In user code:\r\n\r\n    File \"base_error_case1.py\", line 12, in <module>\r\n      predict = fluid.layers.fc(input=x, size=1, act=None)\r\n    File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/layers/nn.py\", line 352, in fc\r\n      \"y_num_col_dims\": 1})\r\n    File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/layer_helper.py\", line 43, in append_op\r\n      return self.main_program.current_block().append_op(*args, **kwargs)\r\n    File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/framework.py\", line 2917, in append_op\r\n      attrs=kwargs.get(\"attrs\", None))\r\n    File \"/usr/local/lib/python3.7/site-packages/paddle/fluid/framework.py\", line 2014, in __init__\r\n      for frame in traceback.extract_stack():\r\n\r\n    InvalidArgumentError: After flatten the input tensor X and Y to 2-D dimensions matrix X1 and Y1, the matrix X1's width must be equal with matrix Y1's height. But received X's shape = [8, 12], X1's shape = [8, 12], X1's width = 12; Y's shape = [13, 1], Y1's shape = [13, 1], Y1's height = 13.\r\n      [Hint: Expected x_mat_dims[1] == y_mat_dims[0], but received x_mat_dims[1]:12 != y_mat_dims[0]:13.] (at /work/paddle/paddle/fluid/operators/mul_op.cc:83)\r\n      [operator < mul > error]\r\n```\r\n\r\n\r\n\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23568",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23568/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23568/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/23568/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23568",
        "id": 595824812,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwMjMxNDcz",
        "number": 23568,
        "title": "API(fluid.layers.array_read/array_write) error message enhancement",
        "user": {
            "login": "wangchaochaohu",
            "id": 13411999,
            "node_id": "MDQ6VXNlcjEzNDExOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13411999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangchaochaohu",
            "html_url": "https://github.com/wangchaochaohu",
            "followers_url": "https://api.github.com/users/wangchaochaohu/followers",
            "following_url": "https://api.github.com/users/wangchaochaohu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangchaochaohu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangchaochaohu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangchaochaohu/subscriptions",
            "organizations_url": "https://api.github.com/users/wangchaochaohu/orgs",
            "repos_url": "https://api.github.com/users/wangchaochaohu/repos",
            "events_url": "https://api.github.com/users/wangchaochaohu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangchaochaohu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-04-07T12:18:01Z",
        "updated_at": "2020-04-10T07:46:39Z",
        "closed_at": "2020-04-10T07:46:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/23568",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/23568",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/23568.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/23568.patch"
        },
        "body": "### API fluid.layers.array_read/array_write\u62a5\u9519\u4fe1\u606f\u589e\u5f3a [\u4ec5\u6d89\u53caPython\u7aef]\r\n- C++\u7aef\u5df2\u5728https://github.com/PaddlePaddle/Paddle/pull/23468 \u8fdb\u884c\u4fee\u6539\u3002\r\n- API\u63a5\u53e3\r\n```python\r\ndef array_write(x, i , array=None):\r\ndef array_read(array, i):\r\n```\r\n\u5bf9\u8f93\u5165\uff08x  i  arrary\u7b49\u8f93\u5165\u53d8\u91cf\uff09\u662f\u5426\u662fVariable \u8fdb\u884c\u68c0\u67e5\r\n\r\n![image](https://user-images.githubusercontent.com/13411999/78747054-122c3400-799b-11ea-8a17-ce47559a648f.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/13411999/78747825-f3c73800-799c-11ea-8846-1bf40d9bf344.png)\r\n\r\n\r\n###Pytho \u7aef\u6d4b\u8bd5\u4ee3\u7801\r\n```\r\n\r\n            import paddle.fluid as fluid\r\n            import numpy as np\r\n            arr = fluid.layers.create_array(dtype='float32')\r\n            tmp = np.random.randn(2, 1).astype('float32')\r\n            i = fluid.layers.fill_constant(shape=[1], dtype='float32', value=10)\r\n            arr = fluid.layers.array_write(tmp, i, array=arr)\r\n            item = fluid.layers.array_read(arr, i)\r\n            input = fluid.layers.Print(item, message=\"The LoDTensor of the i-th position:\")\r\n            main_program = fluid.default_main_program()\r\n            exe = fluid.Executor(fluid.CPUPlace())\r\n            exe.run(main_program)\r\n\r\n\r\n```\r\n\u62a5\u9519\u4fe1\u606f\r\n```\r\nTypeError: The data type of 'i' in array_write must be ['int32', 'int64'], but received float32.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/17308",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/17308/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/17308/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/17308/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/17308",
        "id": 442102118,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc3Mjg2ODY2",
        "number": 17308,
        "title": "Fix examples of fluid.layers.sums and fluid.layers.DynamicRNN",
        "user": {
            "login": "Xreki",
            "id": 12538138,
            "node_id": "MDQ6VXNlcjEyNTM4MTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12538138?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Xreki",
            "html_url": "https://github.com/Xreki",
            "followers_url": "https://api.github.com/users/Xreki/followers",
            "following_url": "https://api.github.com/users/Xreki/following{/other_user}",
            "gists_url": "https://api.github.com/users/Xreki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Xreki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Xreki/subscriptions",
            "organizations_url": "https://api.github.com/users/Xreki/orgs",
            "repos_url": "https://api.github.com/users/Xreki/repos",
            "events_url": "https://api.github.com/users/Xreki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Xreki/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-05-09T08:01:26Z",
        "updated_at": "2020-01-10T09:42:43Z",
        "closed_at": "2019-05-22T03:58:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/17308",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/17308",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/17308.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/17308.patch"
        },
        "body": "#### 1. Correct the example of `fluid.layers.sums`\r\n- Fix following errors:\r\n```\r\nTraceback (most recent call last):\r\n  File \"api.py\", line 14, in <module>\r\n    sums()\r\n  File \"api.py\", line 6, in sums\r\n    a0 = layers.array_read(array=tmp, i=i)\r\nNameError: global name 'layers' is not defined\r\n ```\r\n and:\r\n```\r\nTraceback (most recent call last):\r\n  File \"api.py\", line 14, in <module>\r\n    sums()\r\n  File \"api.py\", line 6, in sums\r\n    a0 = fluid.layers.array_read(array=tmp, i=i)\r\n  File \"/usr/local/lib/python2.7/dist-packages/paddle/fluid/layers/control_flow.py\", line 1177, in array_read\r\n    raise TypeError(\"array should be tensor array vairable\")\r\nTypeError: array should be tensor array vairable\r\n```\r\n\r\n - documentation preview:\r\n\r\n![image](https://user-images.githubusercontent.com/12538138/58080071-0c8ff900-7be5-11e9-816c-85b13a16e993.png)\r\n\r\n#### 2. Correct the example of `fluid.layers.DynamicRNN` and its functions\r\n- Example of `DynamicRNN` class, fix following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"api.py\", line 45, in <module>\r\n    dynamic_rnn()\r\n  File \"api.py\", line 27, in dynamic_rnn\r\n    data = fluid.layers.data(name='sentence', dtype='int64', lod_level=1)\r\nTypeError: data() takes at least 2 arguments (3 given)\r\n```\r\n\r\ndocumentation preview:\r\n![image](https://user-images.githubusercontent.com/12538138/58080143-32b59900-7be5-11e9-8d75-c0fcd0ce4734.png)\r\n\r\n\r\n- Add example for `static_input`:\r\n![image](https://user-images.githubusercontent.com/12538138/58080164-3fd28800-7be5-11e9-9f64-8c600da2ab26.png)\r\n\r\n\r\n- Example of `memory`:\r\n![image](https://user-images.githubusercontent.com/12538138/58080222-57117580-7be5-11e9-89c7-e96d3f24b4e0.png)\r\n\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/21349",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/21349/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/21349/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/21349/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/21349",
        "id": 527922619,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ1MDgwNTUz",
        "number": 21349,
        "title": "cherry-pick error info check of Print_op for release1.6",
        "user": {
            "login": "lijianshe02",
            "id": 48898730,
            "node_id": "MDQ6VXNlcjQ4ODk4NzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48898730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lijianshe02",
            "html_url": "https://github.com/lijianshe02",
            "followers_url": "https://api.github.com/users/lijianshe02/followers",
            "following_url": "https://api.github.com/users/lijianshe02/following{/other_user}",
            "gists_url": "https://api.github.com/users/lijianshe02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lijianshe02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lijianshe02/subscriptions",
            "organizations_url": "https://api.github.com/users/lijianshe02/orgs",
            "repos_url": "https://api.github.com/users/lijianshe02/repos",
            "events_url": "https://api.github.com/users/lijianshe02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lijianshe02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-25T08:17:34Z",
        "updated_at": "2019-11-25T12:27:17Z",
        "closed_at": "2019-11-25T12:27:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/21349",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/21349",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/21349.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/21349.patch"
        },
        "body": "cherry-pick from PR #21250 and fix the input dtype list\r\n\u4e3aPrint python api\u7684\u8f93\u5165input\u52a0\u7c7b\u578b\u68c0\u67e5\uff1a\r\n- \u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n- \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat32, float64, int32_t, int64_t, bool\r\n- \u5728\u5355\u6d4b\u4e2d\u8986\u76d6\u7c7b\u578b\u9519\u8bef\u548c\u6570\u636e\u7c7b\u578b\u9519\u8bef\u4e24\u4e2a\u5f02\u5e38\u60c5\u51b5\r\n- \u53ef\u624b\u52a8\u8fd0\u884c\u793a\u4f8b\uff0c\u770b\u4e0b\u9519\u8bef\uff1a\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nx1 = fluid.create_lod_tensor(np.array([[-1]]), [[1]], fluid.CPUPlace())\r\nfluid.layers.Print(x1)\r\n```\r\n> TypeError: The type of 'input' in fluid.layers.Print must be <class 'paddle.fluid.framework.Variable'>, but received <class 'paddle.fluid.core_avx.LoDTensor'>.\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nx2 = fluid.layers.data(name='x2', shape=[4], dtype=\"float16\")\r\nfluid.layers.Print(x2)\r\n```\r\n> TypeError: The data type of 'input' in fluid.layers.Print must be ['float32', 'float64', 'int32', 'int64, 'bool'], but received float16.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20172",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20172/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20172/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20172/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20172",
        "id": 503224529,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI1MTIxNDA1",
        "number": 20172,
        "title": "enhance shape error message of fc API",
        "user": {
            "login": "Aurelius84",
            "id": 9301846,
            "node_id": "MDQ6VXNlcjkzMDE4NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9301846?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aurelius84",
            "html_url": "https://github.com/Aurelius84",
            "followers_url": "https://api.github.com/users/Aurelius84/followers",
            "following_url": "https://api.github.com/users/Aurelius84/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aurelius84/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aurelius84/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aurelius84/subscriptions",
            "organizations_url": "https://api.github.com/users/Aurelius84/orgs",
            "repos_url": "https://api.github.com/users/Aurelius84/repos",
            "events_url": "https://api.github.com/users/Aurelius84/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aurelius84/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-07T04:18:46Z",
        "updated_at": "2020-01-06T06:19:05Z",
        "closed_at": "2019-10-10T02:01:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20172",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20172",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20172.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20172.patch"
        },
        "body": "**fluid.layers.fc**:\r\n+ Add input type check, error info as follows:\r\n```python\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    input_data = np.random.random((2, 4)).astype(\"float32\")\r\n    fluid.layers.fc(input=input_data, size=1)\r\n```\r\n`TypeError: The type of 'input' in fc must be Variable, but received <type 'numpy.ndarray'>`\r\n+ if input is list, error info as follows:\r\n```python\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    input_data = np.random.random((2, 4)).astype(\"float32\")\r\n    fluid.layers.fc(input=[input_data], size=1)\r\n```\r\n`TypeError: The type of input[0] in fc must be Variable, but received <type 'numpy.ndarray'>`\r\n+ Add data type check, error info as follows:\r\n```python\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    x = fluid.data(name='x', shape=[3,4],dtype='int32')\r\n    fluid.layers.fc(input=x, size=1)\r\n```\r\n`TypeError: The data type of 'input' in fc must be float32 or float64, but received int32.`\r\n\r\n**sum OP**\uff1aEnhance error message in InferShape of SumOp\r\n+ should have same shape\r\n```python\r\nimport paddle.fluid as fluid\r\nimport paddle.fluid.layers as layers\r\nimport numpy as np\r\ninput0 = layers.data(name=\"input0\", shape=[-1,13], dtype='float32')\r\ninput1 = layers.data(name=\"input1\", shape=[-1,13], dtype='float32')\r\nout = layers.sum([input0, input1])\r\nplace = fluid.CPUPlace()\r\nexe = fluid.Executor(place)\r\nexe.run(fluid.default_startup_program())\r\ninput0_data = np.random.random([6, 13]).astype(\"float64\")\r\ninput1_data = np.random.random([2, 13]).astype(\"float64\")\r\nret = exe.run(\r\n    feed={\r\n        'input0': input0_data,\r\n        'input1': input1_data\r\n    },\r\n    fetch_list=[out],\r\n    return_numpy=False)\r\n```\r\n**before:** `PaddleCheckError: Expected in_dim == x_dim, but received in_dim:6, 13 != x_dim:2, 13.`\r\n**after:** `ShapeError: The input tensor X of SumOp must have same shape.But received X[0]'s shape = [6, 13], X[1]'s shape = [2, 13].`\r\n+ should have same dimensions\r\n```python\r\nShapeError: The input tensor X of SumOp must have same shape.But received X[0]'s shape = [6, 13], X[1]'s shape = [2, 13]\r\n```\r\n**before:** `PaddleCheckError: Expected in_dim[j] == x_dim[j], but received in_dim[j]:12 != x_dim[j]:13`\r\n**after:** `ShapeError: The input tensor X of SumOp must have same shape if not -1.But received X[0]'s shape = [-1, 12], X[1]'s shape = [-1, 13].`\r\n\r\n```python\r\nShapeError: The input tensor X of SumOp must have same shape.But received X[0]'s shape = [6, 13], X[1]'s shape = [2, 13]\r\n```\r\n**before:** `PaddleCheckError: Expected in_dim.size() == x_dim.size(), but received in_dim.size():3 != x_dim.size():2`\r\n**after:** `ShapeError: The input tensor X of SumOp must have same dimensions. But received X[0]'s dimensions = 3, X[0]'s shape = [-1, 12, 13], X[1]'s dimensions = 2, X[1]'s shape = [-1, 13]`",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20349",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20349/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20349/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20349/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20349",
        "id": 504988798,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI2NTE3MzIy",
        "number": 20349,
        "title": "[cherry-pick] Enhance shape error message of fc API (#20172)",
        "user": {
            "login": "Aurelius84",
            "id": 9301846,
            "node_id": "MDQ6VXNlcjkzMDE4NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9301846?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aurelius84",
            "html_url": "https://github.com/Aurelius84",
            "followers_url": "https://api.github.com/users/Aurelius84/followers",
            "following_url": "https://api.github.com/users/Aurelius84/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aurelius84/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aurelius84/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aurelius84/subscriptions",
            "organizations_url": "https://api.github.com/users/Aurelius84/orgs",
            "repos_url": "https://api.github.com/users/Aurelius84/repos",
            "events_url": "https://api.github.com/users/Aurelius84/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aurelius84/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-10T02:08:05Z",
        "updated_at": "2020-01-06T04:03:30Z",
        "closed_at": "2019-10-11T00:27:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20349",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20349",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20349.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20349.patch"
        },
        "body": "\r\n**fluid.layers.fc**:\r\n+ Add input type check, error info as follows:\r\n```python\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    input_data = np.random.random((2, 4)).astype(\"float32\")\r\n    fluid.layers.fc(input=input_data, size=1)\r\n```\r\n`TypeError: The type of 'input' in fc must be Variable, but received <type 'numpy.ndarray'>`\r\n+ if input is list, error info as follows:\r\n```python\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    input_data = np.random.random((2, 4)).astype(\"float32\")\r\n    fluid.layers.fc(input=[input_data], size=1)\r\n```\r\n`TypeError: The type of input[0] in fc must be Variable, but received <type 'numpy.ndarray'>`\r\n+ Add data type check, error info as follows:\r\n```python\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    x = fluid.data(name='x', shape=[3,4],dtype='int32')\r\n    fluid.layers.fc(input=x, size=1)\r\n```\r\n`TypeError: The data type of 'input' in fc must be float32 or float64, but received int32.`\r\n\r\n**sum OP**\uff1aEnhance error message in InferShape of SumOp\r\n+ should have same shape\r\n```python\r\nimport paddle.fluid as fluid\r\nimport paddle.fluid.layers as layers\r\nimport numpy as np\r\ninput0 = layers.data(name=\"input0\", shape=[-1,13], dtype='float32')\r\ninput1 = layers.data(name=\"input1\", shape=[-1,13], dtype='float32')\r\nout = layers.sum([input0, input1])\r\nplace = fluid.CPUPlace()\r\nexe = fluid.Executor(place)\r\nexe.run(fluid.default_startup_program())\r\ninput0_data = np.random.random([6, 13]).astype(\"float64\")\r\ninput1_data = np.random.random([2, 13]).astype(\"float64\")\r\nret = exe.run(\r\n    feed={\r\n        'input0': input0_data,\r\n        'input1': input1_data\r\n    },\r\n    fetch_list=[out],\r\n    return_numpy=False)\r\n```\r\n**before:** `PaddleCheckError: Expected in_dim == x_dim, but received in_dim:6, 13 != x_dim:2, 13.`\r\n**after:** `ShapeError: The input tensor X of SumOp must have same shape.But received X[0]'s shape = [6, 13], X[1]'s shape = [2, 13].`\r\n+ should have same dimensions\r\n```python\r\nShapeError: The input tensor X of SumOp must have same shape.But received X[0]'s shape = [6, 13], X[1]'s shape = [2, 13]\r\n```\r\n**before:** `PaddleCheckError: Expected in_dim[j] == x_dim[j], but received in_dim[j]:12 != x_dim[j]:13`\r\n**after:** `ShapeError: The input tensor X of SumOp must have same shape if not -1.But received X[0]'s shape = [-1, 12], X[1]'s shape = [-1, 13].`\r\n\r\n```python\r\nShapeError: The input tensor X of SumOp must have same shape.But received X[0]'s shape = [6, 13], X[1]'s shape = [2, 13]\r\n```\r\n**before:** `PaddleCheckError: Expected in_dim.size() == x_dim.size(), but received in_dim.size():3 != x_dim.size():2`\r\n**after:** `ShapeError: The input tensor X of SumOp must have same dimensions. But received X[0]'s dimensions = 3, X[0]'s shape = [-1, 12, 13], X[1]'s dimensions = 2, X[1]'s shape = [-1, 13]`",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/21250",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/21250/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/21250/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/21250/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/21250",
        "id": 525400540,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzQzMDAwNDU3",
        "number": 21250,
        "title": "add input type and input data type check for Print_op test=develop",
        "user": {
            "login": "lijianshe02",
            "id": 48898730,
            "node_id": "MDQ6VXNlcjQ4ODk4NzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48898730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lijianshe02",
            "html_url": "https://github.com/lijianshe02",
            "followers_url": "https://api.github.com/users/lijianshe02/followers",
            "following_url": "https://api.github.com/users/lijianshe02/following{/other_user}",
            "gists_url": "https://api.github.com/users/lijianshe02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lijianshe02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lijianshe02/subscriptions",
            "organizations_url": "https://api.github.com/users/lijianshe02/orgs",
            "repos_url": "https://api.github.com/users/lijianshe02/repos",
            "events_url": "https://api.github.com/users/lijianshe02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lijianshe02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-11-20T03:25:26Z",
        "updated_at": "2019-11-21T01:51:06Z",
        "closed_at": "2019-11-21T01:51:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/21250",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/21250",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/21250.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/21250.patch"
        },
        "body": "\u4e3aPrint python api\u7684\u8f93\u5165input\u52a0\u7c7b\u578b\u68c0\u67e5\uff1a\r\n- \u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n- \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat32, float64, int32_t, int64_t, bool\r\n- \u5728\u5355\u6d4b\u4e2d\u8986\u76d6\u7c7b\u578b\u9519\u8bef\u548c\u6570\u636e\u7c7b\u578b\u9519\u8bef\u4e24\u4e2a\u5f02\u5e38\u60c5\u51b5\r\n- \u53ef\u624b\u52a8\u8fd0\u884c\u793a\u4f8b\uff0c\u770b\u4e0b\u9519\u8bef\uff1a\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nx1 = fluid.create_lod_tensor(np.array([[-1]]), [[1]], fluid.CPUPlace())\r\nfluid.layers.Print(x1)\r\n```\r\n> TypeError: The type of 'input' in fluid.layers.Print must be <class 'paddle.fluid.framework.Variable'>, but received <class 'paddle.fluid.core_avx.LoDTensor'>.\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nx2 = fluid.layers.data(name='x2', shape=[4], dtype=\"float16\")\r\nfluid.layers.Print(x2)\r\n```\r\n> TypeError: The data type of 'input' in fluid.layers.Print must be ['float32', 'float64', 'int32_t', 'int64_t', 'bool'], but received float16.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20648",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20648/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20648/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20648/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20648",
        "id": 507195012,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI4MjI5MzI2",
        "number": 20648,
        "title": "[cherry-pick] refine error message of input TypeError in framework.py",
        "user": {
            "login": "luotao1",
            "id": 6836917,
            "node_id": "MDQ6VXNlcjY4MzY5MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6836917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luotao1",
            "html_url": "https://github.com/luotao1",
            "followers_url": "https://api.github.com/users/luotao1/followers",
            "following_url": "https://api.github.com/users/luotao1/following{/other_user}",
            "gists_url": "https://api.github.com/users/luotao1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luotao1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luotao1/subscriptions",
            "organizations_url": "https://api.github.com/users/luotao1/orgs",
            "repos_url": "https://api.github.com/users/luotao1/repos",
            "events_url": "https://api.github.com/users/luotao1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luotao1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-15T11:54:49Z",
        "updated_at": "2019-10-16T02:59:07Z",
        "closed_at": "2019-10-16T02:59:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20648",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20648",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20648.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20648.patch"
        },
        "body": "cherry-pick #19970",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20508",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20508/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20508/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20508/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20508",
        "id": 505731489,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI3MTAxOTAz",
        "number": 20508,
        "title": "Fix the error message of assign op",
        "user": {
            "login": "hong19860320",
            "id": 9973393,
            "node_id": "MDQ6VXNlcjk5NzMzOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9973393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hong19860320",
            "html_url": "https://github.com/hong19860320",
            "followers_url": "https://api.github.com/users/hong19860320/followers",
            "following_url": "https://api.github.com/users/hong19860320/following{/other_user}",
            "gists_url": "https://api.github.com/users/hong19860320/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hong19860320/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hong19860320/subscriptions",
            "organizations_url": "https://api.github.com/users/hong19860320/orgs",
            "repos_url": "https://api.github.com/users/hong19860320/repos",
            "events_url": "https://api.github.com/users/hong19860320/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hong19860320/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-11T09:07:17Z",
        "updated_at": "2019-10-11T22:54:21Z",
        "closed_at": "2019-10-11T22:54:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20508",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20508",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20508.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20508.patch"
        },
        "body": "assign OP \u62a5\u9519\u4fe1\u606f\u6dfb\u52a0\r\n1 .\u6dfb\u52a0\u4e86\u5bf9\u8f93\u5165Tensor\u7684\u7c7b\u578b\u7684\u68c0\u67e5 \r\n\u4ee3\u7801\uff1a\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nx1 = fluid.create_lod_tensor(np.array([[-1]]), [[1]], fluid.CPUPlace())\r\nout = fluid.layers.assign(x1)\r\n```\r\n\u62a5\u9519\u4fe1\u606f: \r\n```\r\nTypeError: The type of 'input' in assign must be Variable or numpy.ndarray, but received <class 'paddle.fluid.core_avx.LoDTensor'>\r\n```\r\n\r\n2 .\u6dfb\u52a0\u4e86\u5bf9\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\u7684\u68c0\u67e5\r\n\u4ee3\u7801\uff1a\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nx2 = fluid.layers.data(name='x2', shape=[4], dtype=\"bool\")\r\nout = fluid.layers.assign(x2)\r\nx3 = fluid.layers.data(name='x3', shape=[4], dtype=\"float16\")\r\nout = fluid.layers.assign(x3)\r\nx4 = fluid.layers.data(name='x4', shape=[4], dtype=\"uint8\")\r\nout = fluid.layers.assign(x4)\r\nx5 = np.array([[2.5, 2.5]], dtype='bool')\r\nout = fluid.layers.assign(x5)\r\nx6 = np.array([[2.5, 2.5]], dtype='float16')\r\nout = fluid.layers.assign(x6)\r\nx7 = np.array([[2.5, 2.5]], dtype='float64')\r\nout = fluid.layers.assign(x7)\r\nx8 = np.array([[2.5, 2.5]], dtype='int64')\r\nout = fluid.layers.assign(x8)\r\nx9 = np.array([[2.5, 2.5]], dtype='uint8')\r\nout = fluid.layers.assign(x9)\r\n```\r\n\u62a5\u9519\u4fe1\u606f: \r\n```\r\nTypeError: When the type of 'input' in assign is Variable, the data type of 'input' must be float32, float64, int32 or int64, but received bool.\r\nTypeError: When the type of 'input' in assign is Variable, the data type of 'input' must be float32, float64, int32 or int64, but received float16.\r\nTypeError: When the type of 'input' in assign is Variable, the data type of 'input' must be float32, float64, int32 or int64, but received uint8.\r\nTypeError: When the type of 'input' in assign is numpy.ndarray, the data type of 'input' must be float32 or int32, but received bool.\r\nTypeError: When the type of 'input' in assign is numpy.ndarray, the data type of 'input' must be float32 or int32, but received float16.\r\nTypeError: When the type of 'input' in assign is numpy.ndarray, the data type of 'input' must be float32 or int32, but received float64.\r\nTypeError: When the type of 'input' in assign is numpy.ndarray, the data type of 'input' must be float32 or int32, but received int64.\r\nTypeError: When the type of 'input' in assign is numpy.ndarray, the data type of 'input' must be float32 or int32, but received uint8.\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20414",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20414/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20414/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20414/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20414",
        "id": 505151772,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI2NjM5Nzk2",
        "number": 20414,
        "title": "enhance mul_op input error message test=develop",
        "user": {
            "login": "lijianshe02",
            "id": 48898730,
            "node_id": "MDQ6VXNlcjQ4ODk4NzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48898730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lijianshe02",
            "html_url": "https://github.com/lijianshe02",
            "followers_url": "https://api.github.com/users/lijianshe02/followers",
            "following_url": "https://api.github.com/users/lijianshe02/following{/other_user}",
            "gists_url": "https://api.github.com/users/lijianshe02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lijianshe02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lijianshe02/subscriptions",
            "organizations_url": "https://api.github.com/users/lijianshe02/orgs",
            "repos_url": "https://api.github.com/users/lijianshe02/repos",
            "events_url": "https://api.github.com/users/lijianshe02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lijianshe02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-10T09:34:43Z",
        "updated_at": "2019-10-11T11:39:01Z",
        "closed_at": "2019-10-11T10:58:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20414",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20414",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20414.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20414.patch"
        },
        "body": "fluid.layers.mul:\r\n\r\n- Add input type check, error info as follows:\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    x = np.random.random((2, 4)).astype(\"float32\")\r\n    y = fluid.data(name='x', shape=[3,4],dtype='float32')\r\n    fluid.layers.mul(x=x, y=y)\r\n```\r\n>TypeError: The type of 'x' in mul must be Variable, but received <type 'numpy.ndarray'>\r\n\r\n- Add input type check, error info as follows:\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    x = fluid.data(name='x', shape=[2,4],dtype='float32')\r\n    y = np.random.random((3, 4)).astype(\"float32\")\r\n    fluid.layers.mul(x=x, y=y)\r\n```\r\n>TypeError: The type of 'y' in mul must be Variable, but received <type 'numpy.ndarray'>\r\n\r\n\r\n- Add data type check, error info as follows:\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    x = fluid.data(name='x', shape=[3,4],dtype='int32')\r\n    y = fluid.data(name='y', shape=[3,4],dtype='float32')\r\n    fluid.layers.mul(x=x, y=y)\r\n```\r\n>TypeError: The data type of 'x' in mul must be float32 or float64, but received int32\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20437",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20437/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20437/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20437/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20437",
        "id": 505239758,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI2NzEwOTA1",
        "number": 20437,
        "title": "Refine error message of transpose_op",
        "user": {
            "login": "ysh329",
            "id": 7320657,
            "node_id": "MDQ6VXNlcjczMjA2NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7320657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ysh329",
            "html_url": "https://github.com/ysh329",
            "followers_url": "https://api.github.com/users/ysh329/followers",
            "following_url": "https://api.github.com/users/ysh329/following{/other_user}",
            "gists_url": "https://api.github.com/users/ysh329/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ysh329/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ysh329/subscriptions",
            "organizations_url": "https://api.github.com/users/ysh329/orgs",
            "repos_url": "https://api.github.com/users/ysh329/repos",
            "events_url": "https://api.github.com/users/ysh329/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ysh329/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-10-10T12:32:09Z",
        "updated_at": "2019-10-13T08:57:03Z",
        "closed_at": "2019-10-13T08:56:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20437",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20437",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20437.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20437.patch"
        },
        "body": "# Input\u68c0\u67e5\r\n\r\nTranspose op\uff0c\u5176Input\u6709\u4e24\u4e2a\uff1a\r\n\r\n1. \u5305\u542b\u8f93\u5165\u7684 `x` \r\n2. \u8f6c\u7f6e\u6240\u9700\u8981\u6307\u5b9a\u7684\u8f74\u5411\u53d8\u5316\u53c2\u6570 `perm` \u3002\r\n\r\n## Input\u68c0\u67e5\u53c2\u6570 `x`\uff1a1. \u7c7b\u578b\u68c0\u67e5\r\n\r\n\u4f18\u5316\u62a5\u9519\u4ee3\u7801\r\n\r\n```python\r\n    if not isinstance(x, Variable):\r\n        raise TypeError(\r\n            \"The type of 'x' in transpose must be Variable, but received %s\" %\r\n            (type(x)))\r\n```\r\n\r\n\u62a5\u9519\u524d\u540e\u53d8\u5316\r\n\r\n```python\r\n# \u6267\u884c\u4ee3\u7801\r\nx_transposed = fluid.layers.transpose(\"123\", perm=[1, 0, 2, 4, 5])\r\n\r\n# \u4f18\u5316\u524d\r\nAttributeError: 'str' object has no attribute 'shape'\r\n\r\n# \u4f18\u5316\u540e\r\nTypeError: The type of 'x' in transpose must be Variable, but received <type 'str'>\r\n```\r\n\r\n## Input\u68c0\u67e5\u53c2\u6570 `x`\uff1a2. dtype\u68c0\u67e5\r\n\r\n\u4f18\u5316\u62a5\u9519\u4ee3\u7801\r\n\r\n```python\r\n    if convert_dtype(x.dtype) not in [\"float16\", \"float32\", \"float64\", \"int32\", \"int64\"]:\r\n        raise TypeError(\r\n            \"The data type of Input(x) in transpose must be one of [float16, float32, float64, int32, int64], but received %s.\"\r\n            % (convert_dtype(x.dtype)))\r\n```\r\n\r\n\u62a5\u9519\u524d\u540e\u53d8\u5316\r\n\r\n```python\r\n# \u6267\u884c\u4ee3\u7801\r\nx1 = fluid.layers.data(name='x', shape=[10, 5, 3], dtype='bool')\r\nfluid.layers.transpose(x1, perm=[1, 0, 2])\r\n\r\n# \u4f18\u5316\u524d\r\nValueError: Input(perm) is the permutation of dimensions of Input(input), its length should be equal to dimensions of Input(input), but received dimension of Input(input) is 4, the permutation of dimensions of Input(input) is 3.\r\n\r\n# \u4f18\u5316\u540e\r\nTypeError: The data type of Input(x) in transpose must be one of [float16, float32, float64, int32, int64], but received bool.\r\n```\r\n\r\n## Input\u68c0\u67e5\u53c2\u6570 `perm` \uff1a1. \u7c7b\u578b\u68c0\u67e5\r\n\r\n\u4f18\u5316\u62a5\u9519\u4ee3\u7801\r\n\r\n```python\r\n    if not isinstance(perm, list):\r\n        raise TypeError(\r\n            \"The type of 'perm' in transpose must be list, but received %s\" %\r\n            (type(perm)))\r\n```\r\n\r\n\u62a5\u9519\u524d\u540e\u53d8\u5316\r\n\r\n```python\r\n# \u6267\u884c\u4ee3\u7801\r\nx0 = fluid.layers.data(name='x0', shape=[5, 10, 15], dtype=\"float32\", append_batch_size=False)\r\nx_transposed = fluid.layers.transpose(x0, perm=\"[1, 0, 2]\")\r\n\r\n# \u4f18\u5316\u524d\r\nValueError: Input(perm) is the permutation of dimensions of Input(input). Its length should be equal to Input(input)'s rank.\r\n\r\n# \u4f18\u5316\u540e\r\nTypeError: The type of 'perm' in transpose must be list, but received <type 'str'>\r\n```\r\n\r\n## Input\u68c0\u67e5\u53c2\u6570 `perm` \uff1a2. \u7ef4\u5ea6\u68c0\u67e5\r\n\r\n\u4f18\u5316\u62a5\u9519\u4ee3\u7801\r\n\r\n```python\r\n    if len(perm) != len(x.shape):\r\n        raise ValueError(\r\n            \"Input(perm) is the permutation of dimensions of Input(input), \"\r\n            \"its length should be equal to dimensions of Input(input), \"\r\n            \"but received dimension of Input(input) is %s, \" % len(x.shape)\r\n            \"the permutation of dimensions of Input(input) is %s.\" % len(perm))\r\n```\r\n\r\n\u62a5\u9519\u524d\u540e\u53d8\u5316\r\n\r\n```python\r\n# \u6267\u884c\u4ee3\u7801\r\nx0 = fluid.layers.data(name='x0', shape=[5, 10, 15], dtype=\"float32\", append_batch_size=False)\r\nx_transposed = fluid.layers.transpose(x0, perm=\"[1, 0, 2]\")\r\n\r\n# \u4f18\u5316\u524d\r\nValueError: Input(perm) is the permutation of dimensions of Input(input). Its length should be equal to Input(input)'s rank.\r\n\r\n# \u4f18\u5316\u540e\r\nValueError: Input(perm) is the permutation of dimensions of Input(input), its length should be equal to dimensions of Input(input), but received dimension of Input(input) is 3, the permutation of dimensions of Input(input) is 4.\r\n```\r\n\r\n## \u6587\u6863\r\n\r\n[\u5728\u7ebfRST\u9884\u89c8\u5de5\u5177\u9884\u89c8](https://overbits.herokuapp.com/rsteditor/)\uff0c\u6570\u5b66\u516c\u5f0f\u548c\u4ee3\u7801\u663e\u793a\u4e0d\u53cb\u597d\r\n\r\n### transpose\r\n\r\n![image](https://user-images.githubusercontent.com/7320657/66693063-4cac6100-ecd7-11e9-9fa7-56e5d4b9eb39.png)\r\n\r\n\r\n### multiplex\r\n\r\n![image](https://user-images.githubusercontent.com/7320657/66693040-12db5a80-ecd7-11e9-9880-f34557176857.png)\r\n\r\n\r\n### unstack\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/7320657/66693070-68176c00-ecd7-11e9-9417-e5f20feec958.png)\r\n\r\n\r\n### unsqueeze\r\n\r\n![image](https://user-images.githubusercontent.com/7320657/66693076-82e9e080-ecd7-11e9-986c-8f9ea11ed64a.png)\r\n\r\n\r\n\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20295",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20295/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20295/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20295/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20295",
        "id": 504471949,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI2MTExOTg2",
        "number": 20295,
        "title": "enhance uniform_random op python api's check",
        "user": {
            "login": "FDInSky",
            "id": 48318485,
            "node_id": "MDQ6VXNlcjQ4MzE4NDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/48318485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FDInSky",
            "html_url": "https://github.com/FDInSky",
            "followers_url": "https://api.github.com/users/FDInSky/followers",
            "following_url": "https://api.github.com/users/FDInSky/following{/other_user}",
            "gists_url": "https://api.github.com/users/FDInSky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FDInSky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FDInSky/subscriptions",
            "organizations_url": "https://api.github.com/users/FDInSky/orgs",
            "repos_url": "https://api.github.com/users/FDInSky/repos",
            "events_url": "https://api.github.com/users/FDInSky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FDInSky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-09T07:39:14Z",
        "updated_at": "2019-10-10T05:39:57Z",
        "closed_at": "2019-10-10T05:39:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20295",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20295",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20295.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20295.patch"
        },
        "body": "\u4e3auniform_random python api\u7684\u8f93\u5165input\u52a0\u7c7b\u578b\u68c0\u67e5\uff1a\r\n\r\n\u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n\u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat32\u548cfloat64\r\n\u5728\u5355\u6d4b\u4e2d\u8986\u76d6\u7c7b\u578b\u9519\u8bef\u548c\u6570\u636e\u7c7b\u578b\u9519\u8bef\u4e24\u4e2a\u5f02\u5e38\u60c5\u51b5\r\nmain_prog = Program()\r\nstart_prog = Program()\r\nwith program_guard(main_prog, start_prog):\r\n    def test_Variable():\r\n         x1 = fluid.create_lod_tensor(\r\n             np.zeros((4, 784)), [[1, 1, 1, 1]], fluid.CPUPlace())\r\n         fluid.layers.uniform_random(x1)\r\n    self.assertRaises(TypeError, test_Variable)\r\n\r\n    def test_dtype():\r\n        x2 = fluid.layers.data(\r\n            name='x2', shape=[4, 784], dtype='float32')\r\n        fluid.layers.uniform_random(x2, 'int32')\r\n    self.assertRaises(TypeError, test_dtype)",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20476",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20476/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20476/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20476/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20476",
        "id": 505629053,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI3MDIyMDA0",
        "number": 20476,
        "title": "Fix the error message of zeros op",
        "user": {
            "login": "hong19860320",
            "id": 9973393,
            "node_id": "MDQ6VXNlcjk5NzMzOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9973393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hong19860320",
            "html_url": "https://github.com/hong19860320",
            "followers_url": "https://api.github.com/users/hong19860320/followers",
            "following_url": "https://api.github.com/users/hong19860320/following{/other_user}",
            "gists_url": "https://api.github.com/users/hong19860320/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hong19860320/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hong19860320/subscriptions",
            "organizations_url": "https://api.github.com/users/hong19860320/orgs",
            "repos_url": "https://api.github.com/users/hong19860320/repos",
            "events_url": "https://api.github.com/users/hong19860320/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hong19860320/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-11T04:22:49Z",
        "updated_at": "2019-10-13T08:10:45Z",
        "closed_at": "2019-10-13T08:10:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20476",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20476",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20476.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20476.patch"
        },
        "body": "zeros OP \u62a5\u9519\u4fe1\u606f\u6dfb\u52a0\r\n1.\u6dfb\u52a0\u4e86\u5bf9\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\u7684\u68c0\u67e5\r\n\u4ee3\u7801\uff1a\r\n```\r\nimport paddle.fluid as fluid\r\nfluid.layers.zeros(shape=[4], dtype=\"int8\")\r\n```\r\n\u62a5\u9519\u4fe1\u606f: \r\n```\r\nTypeError: The create data type in zeros must be one of bool, float16, float32, float64, int32 or int64, but received int8.\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20598",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20598/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20598/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20598/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20598",
        "id": 506424558,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI3NjIzNzgy",
        "number": 20598,
        "title": "update mul_op input data type check test=develop",
        "user": {
            "login": "lijianshe02",
            "id": 48898730,
            "node_id": "MDQ6VXNlcjQ4ODk4NzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48898730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lijianshe02",
            "html_url": "https://github.com/lijianshe02",
            "followers_url": "https://api.github.com/users/lijianshe02/followers",
            "following_url": "https://api.github.com/users/lijianshe02/following{/other_user}",
            "gists_url": "https://api.github.com/users/lijianshe02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lijianshe02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lijianshe02/subscriptions",
            "organizations_url": "https://api.github.com/users/lijianshe02/orgs",
            "repos_url": "https://api.github.com/users/lijianshe02/repos",
            "events_url": "https://api.github.com/users/lijianshe02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lijianshe02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-14T02:51:37Z",
        "updated_at": "2019-10-14T12:23:04Z",
        "closed_at": "2019-10-14T12:23:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20598",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20598",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20598.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20598.patch"
        },
        "body": "cherry-pick form PR #20552\r\nfluid.layers.mul:\r\n\r\n- Add data type check, error info as follows:\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    x = fluid.data(name='x', shape=[3,4],dtype='float16')\r\n    y = fluid.data(name='y', shape=[3,4],dtype='int32')\r\n    fluid.layers.mul(x=x, y=y)\r\n```\r\n>UserWarning: The data type of 'x' in mul only support float16 in GPU now.\r\n>TypeError: The data type of 'y' in mul must be float16, float32 or float64, but received int32",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20100",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20100/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20100/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20100/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20100",
        "id": 499892730,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzIyNDg5ODM1",
        "number": 20100,
        "title": "add input type and dtype check for squeeze",
        "user": {
            "login": "zhaoyuchen2018",
            "id": 45989343,
            "node_id": "MDQ6VXNlcjQ1OTg5MzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45989343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhaoyuchen2018",
            "html_url": "https://github.com/zhaoyuchen2018",
            "followers_url": "https://api.github.com/users/zhaoyuchen2018/followers",
            "following_url": "https://api.github.com/users/zhaoyuchen2018/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhaoyuchen2018/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhaoyuchen2018/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhaoyuchen2018/subscriptions",
            "organizations_url": "https://api.github.com/users/zhaoyuchen2018/orgs",
            "repos_url": "https://api.github.com/users/zhaoyuchen2018/repos",
            "events_url": "https://api.github.com/users/zhaoyuchen2018/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhaoyuchen2018/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-09-29T09:51:53Z",
        "updated_at": "2019-10-09T06:41:17Z",
        "closed_at": "2019-10-09T06:41:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20100",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20100",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20100.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20100.patch"
        },
        "body": "\u4e3asqueeze python api\u7684\u8f93\u5165input\u52a0\u7c7b\u578b\u68c0\u67e5\uff1a\r\n\r\n- \u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n- \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat16\r\n- \u5728\u5355\u6d4b\u4e2d\u8986\u76d6\u7c7b\u578b\u9519\u8bef\u548c\u6570\u636e\u7c7b\u578b\u9519\u8bef\u4e24\u4e2a\u5f02\u5e38\u60c5\u51b5\r\n\u53ef\u624b\u52a8\u8fd0\u884c\u793a\u4f8b\uff0c\u770b\u4e0b\u9519\u8bef\uff1a\r\n\r\n```\r\nimport paddle.fluid as fluid\r\nx1 = fluid.create_lod_tensor(np.array([[-1]]), [[1]], fluid.CPUPlace())\r\nfluid.layers.squeeze(x1)\r\n# TypeError: The type of \u2018input\u2019 in squeeze must be Variable, but received <class 'paddle.fluid.core_avx.LoDTensor'>\r\n\r\nimport paddle.fluid as fluid\r\nx2 = fluid.layers.data(name='x2', shape=[4], dtype=\"float16\")\r\nfluid.layers.squeeze(x2)\r\n#TypeError: The data type of \u2018input\u2019 in squeeze must be int8, int32, int64, float32 or float64, but received float16.\r\n\r\n```\r\n\u6ce8\u610f\uff1a\r\n\r\n\u9700\u8981\u7528\u5355\u5f15\u53f7\u628a\u8f93\u5165'input'\u62ec\u8d77\u6765\uff0c\u548cinput\u533a\u5206\uff0c\u907f\u514d\u7528\u6237\u4e0d\u77e5\u9053\u662f\u54ea\u4e2a\u8f93\u5165\u3002\u5176\u4ed6\u8f93\u5165\u540d\u5b57\u5982X\uff0cY\uff0c\u4e5f\u9700\u8981\u62ec\u8d77\u6765\u3002\r\n\r\ntest=develop\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20552",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20552/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20552/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20552/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20552",
        "id": 506118986,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI3NDE2Njgw",
        "number": 20552,
        "title": "update mul_op input data type check test=develop",
        "user": {
            "login": "lijianshe02",
            "id": 48898730,
            "node_id": "MDQ6VXNlcjQ4ODk4NzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48898730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lijianshe02",
            "html_url": "https://github.com/lijianshe02",
            "followers_url": "https://api.github.com/users/lijianshe02/followers",
            "following_url": "https://api.github.com/users/lijianshe02/following{/other_user}",
            "gists_url": "https://api.github.com/users/lijianshe02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lijianshe02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lijianshe02/subscriptions",
            "organizations_url": "https://api.github.com/users/lijianshe02/orgs",
            "repos_url": "https://api.github.com/users/lijianshe02/repos",
            "events_url": "https://api.github.com/users/lijianshe02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lijianshe02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-12T02:33:31Z",
        "updated_at": "2019-10-14T02:41:13Z",
        "closed_at": "2019-10-14T02:41:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20552",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20552",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20552.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20552.patch"
        },
        "body": "fluid.layers.mul:\r\n\r\n- Add data type check, error info as follows:\r\n```\r\nimport paddle.fluid as fluid\r\nfrom paddle.fluid import Program, program_guard\r\nwith program_guard(Program(), Program()):\r\n    x = fluid.data(name='x', shape=[3,4],dtype='float16')\r\n    y = fluid.data(name='y', shape=[3,4],dtype='int32')\r\n    fluid.layers.mul(x=x, y=y)\r\n```\r\n>UserWarning: The data type of 'x' in mul only support float16 in GPU now.\r\n>TypeError: The data type of 'y' in mul must be float16, float32 or float64, but received int32",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20075",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20075/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20075/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20075/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20075",
        "id": 499851233,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzIyNDY1Mzg0",
        "number": 20075,
        "title": "Fill constant error message fix",
        "user": {
            "login": "wangchaochaohu",
            "id": 13411999,
            "node_id": "MDQ6VXNlcjEzNDExOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13411999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangchaochaohu",
            "html_url": "https://github.com/wangchaochaohu",
            "followers_url": "https://api.github.com/users/wangchaochaohu/followers",
            "following_url": "https://api.github.com/users/wangchaochaohu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangchaochaohu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangchaochaohu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangchaochaohu/subscriptions",
            "organizations_url": "https://api.github.com/users/wangchaochaohu/orgs",
            "repos_url": "https://api.github.com/users/wangchaochaohu/repos",
            "events_url": "https://api.github.com/users/wangchaochaohu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangchaochaohu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-09-29T03:31:58Z",
        "updated_at": "2019-10-03T08:58:05Z",
        "closed_at": "2019-10-03T08:58:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20075",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20075",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20075.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20075.patch"
        },
        "body": "fill_constant OP \u62a5\u9519\u4fe1\u606f\u6dfb\u52a0\r\n1 .\u6dfb\u52a0\u4e86\u5bf9\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\u7684\u68c0\u67e5 \r\n\u4ee3\u7801\uff1a\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nfluid.layers.fill_constant(shape=[1], value=5, dtype='uint8')\r\n```\r\n\u62a5\u9519\u4fe1\u606f: \r\n```\r\nTypeError: The create data type in fill_constant must be float16 or float32or float64 or int32 or int64  but received uint8.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/19975",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/19975/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/19975/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/19975/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/19975",
        "id": 497735923,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzIwODA4Nzg3",
        "number": 19975,
        "title": "add input type and dtype check for softmax_op",
        "user": {
            "login": "luotao1",
            "id": 6836917,
            "node_id": "MDQ6VXNlcjY4MzY5MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6836917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luotao1",
            "html_url": "https://github.com/luotao1",
            "followers_url": "https://api.github.com/users/luotao1/followers",
            "following_url": "https://api.github.com/users/luotao1/following{/other_user}",
            "gists_url": "https://api.github.com/users/luotao1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luotao1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luotao1/subscriptions",
            "organizations_url": "https://api.github.com/users/luotao1/orgs",
            "repos_url": "https://api.github.com/users/luotao1/repos",
            "events_url": "https://api.github.com/users/luotao1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luotao1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-09-24T14:44:32Z",
        "updated_at": "2019-09-29T06:13:22Z",
        "closed_at": "2019-09-25T02:55:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/19975",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/19975",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/19975.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/19975.patch"
        },
        "body": "\u4e3asoftmax python api\u7684\u8f93\u5165input\u52a0\u7c7b\u578b\u68c0\u67e5\uff1a\r\n- \u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n- \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat32\u548cfloat64\r\n- \u5728\u5355\u6d4b\u4e2d\u8986\u76d6\u7c7b\u578b\u9519\u8bef\u548c\u6570\u636e\u7c7b\u578b\u9519\u8bef\u4e24\u4e2a\u5f02\u5e38\u60c5\u51b5\r\n- \u53ef\u624b\u52a8\u8fd0\u884c\u793a\u4f8b\uff0c\u770b\u4e0b\u9519\u8bef\uff1a\r\n```\r\nimport paddle.fluid as fluid\r\nx1 = fluid.create_lod_tensor(np.array([[-1]]), [[1]], fluid.CPUPlace())\r\nfluid.layers.softmax(x1)\r\n# TypeError: The type of \u2018input\u2019 in softmax must be Variable, but received <class 'paddle.fluid.core_avx.LoDTensor'>\r\n\r\nimport paddle.fluid as fluid\r\nx2 = fluid.layers.data(name='x2', shape=[4], dtype=\"int32\")\r\nfluid.layers.softmax(x2)\r\n#TypeError: The data type of \u2018input\u2019 in softmax must be float32 or float64, but received int32.\r\n```\r\n\r\n\u6ce8\u610f\uff1a\r\n1. \u7531\u4e8esoftmax\u7684\u5176\u4ed6\u53c2\u6570\u5982use_cudnn, axis\u6bd4\u8f83\u7b80\u5355\uff0c\u672cPR\u53ea\u68c0\u67e5input\r\n2. \u9700\u8981\u7528\u5355\u5f15\u53f7\u628a\u8f93\u5165'input'\u62ec\u8d77\u6765\uff0c\u548cinput\u533a\u5206\uff0c\u907f\u514d\u7528\u6237\u4e0d\u77e5\u9053\u662f\u54ea\u4e2a\u8f93\u5165\u3002\u5176\u4ed6\u8f93\u5165\u540d\u5b57\u5982X\uff0cY\uff0c\u4e5f\u9700\u8981\u62ec\u8d77\u6765\u3002\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20063",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20063/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20063/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20063/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20063",
        "id": 499552709,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzIyMjUwNzU0",
        "number": 20063,
        "title": "fix the error message for reduce_mean and reduce_sum op",
        "user": {
            "login": "wangchaochaohu",
            "id": 13411999,
            "node_id": "MDQ6VXNlcjEzNDExOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13411999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangchaochaohu",
            "html_url": "https://github.com/wangchaochaohu",
            "followers_url": "https://api.github.com/users/wangchaochaohu/followers",
            "following_url": "https://api.github.com/users/wangchaochaohu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangchaochaohu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangchaochaohu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangchaochaohu/subscriptions",
            "organizations_url": "https://api.github.com/users/wangchaochaohu/orgs",
            "repos_url": "https://api.github.com/users/wangchaochaohu/repos",
            "events_url": "https://api.github.com/users/wangchaochaohu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangchaochaohu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-09-27T17:04:29Z",
        "updated_at": "2019-10-03T08:58:35Z",
        "closed_at": "2019-10-03T08:58:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20063",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20063",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20063.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20063.patch"
        },
        "body": "we  need to fix the error message according the to some standard\r\n\r\n\u68c0\u67e5Input\u53d8\u91cf\u7c7b\u578b\r\n\u68c0\u67e5Input\u4e2ddtype\u7684\u7c7b\u578b\r\n\u672c\u6b21\u7d27\u6025\u4fee\u590d\u53ea\u68c0\u67e5Input\uff0c\u5176\u4ed6\u8f93\u5165\u53c2\u6570\u53ef\u4ee5\u53c2\u6570\u4e0d\u505a\u68c0\u67e5\r\n\u6b64\u9879\u9700\u8981\u589e\u52a0\u76f8\u5e94\u7684\u5355\u6d4b\u76d1\u63a7\u5230\u6240\u6709\u5f02\u5e38\u5206\u652f\uff0c\u4ee5\u901a\u8fc7CI\u8986\u76d6\u7387\u6d4b\u8bd5\r\n\r\n\r\n\u62a5\u9519\u4fe1\u606f\u53d8\u5316\r\n\r\n1.\u5bf9\u4e8einput \u7ef4\u5ea6\u4fe1\u606f\r\nCode\r\n```\r\nimport paddle.fluid as fluid\r\nx = fluid.layers.data(name=\"x\",shape=[1, 2, 3, 4, 5, 6, 7], append_batch_size=False, dtype='float32')\r\ny = fluid.layers.reduce_sum(x)\r\n```\r\n\u62a5\u9519\u4fe1\u606f\uff1a\r\n```\r\nPaddleCheckError: Expected x_rank <= 6, but received x_rank:7 > 6:6.\r\nShapeError: The input tensor X's dimensions of Reduce should be less equal than 6. But received X's dimensions = 7, X's shape = [1, 2, 3, 4, 5, 6, 7]. at [/workspace/codegen/Paddle/paddle/fluid/operators/reduce_ops/reduce_op.h:172]\r\n  [operator < reduce_sum > error]\r\n```\r\n2.\u5bf9\u4e8ereduce\u7684dim \u4fe1\u606f\u62a5\u9519\u4fe1\u606f\u8fdb\u884c\u53d8\u66f4\r\nCode\r\n```\r\nimport paddle.fluid as fluid\r\nx = fluid.layers.data(name=\"x\",shape=[2, 3], append_batch_size=False, dtype='float32')\r\ny = fluid.layers.reduce_sum(x, [3])\r\n```\r\n\u62a5\u9519\u4fe1\u606f\uff1a\r\n```\r\nPaddleCheckError: Expected dims[i] < x_rank, but received dims[i]:3 >= x_rank:2.\r\nShapeError: The reduce dim index 0 should be in the range [-dimension(X), dimension(X)].which dimesion = 2, But received dim index = 3 at [/workspace/codegen/Paddle/paddle/fluid/operators/reduce_ops/reduce_op.h:187]\r\n  [operator < reduce_sum > error]\r\n```\r\nPython \u7aef\uff1a\uff08\u4ee5reduce sum\u4e3a\u4f8b\u5b50\uff09\r\n1\u6dfb\u52a0\u4e86\u5bf9Input\u7c7b\u578b\u7684\u68c0\u67e5    \r\ncode:\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nx = fluid.create_lod_tensor(\r\n                        np.array([[-1]]), [[1]], fluid.CPUPlace())\r\ny = fluid.layers.reduce_sum(x,)\r\n````\r\n\u62a5\u9519\u4fe1\u606f\uff1a\r\n```\r\nTypeError: The type of 'input' in reduce_sum must be Variable, but received <class 'paddle.fluid.core_avx.LoDTensor'>\r\n```\r\n2.\u6dfb\u52a0\u4e86\u5bf9\u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\u7684\u68c0\u67e5            \r\ncode \r\n```\r\nimport paddle.fluid as fluid\r\nx = fluid.layers.data(name=\"x\",shape=[2, 3], append_batch_size=False, dtype='uint8')\r\ny = fluid.layers.reduce_sum(x, [1])\r\n```\r\n\u62a5\u9519\u4fe1\u606f\uff1a\r\n```\r\nTypeError: The data type of 'input' in reduce_sum  must be float32 or float64 or int32 or int64, but received uint8.\r\n```\r\n\r\n\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/14143",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/14143/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/14143/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/14143/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/14143",
        "id": 375322354,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjI2NzkyOTU1",
        "number": 14143,
        "title": "Fix dynamic_gru h_0 bug",
        "user": {
            "login": "sneaxiy",
            "id": 32832641,
            "node_id": "MDQ6VXNlcjMyODMyNjQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32832641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sneaxiy",
            "html_url": "https://github.com/sneaxiy",
            "followers_url": "https://api.github.com/users/sneaxiy/followers",
            "following_url": "https://api.github.com/users/sneaxiy/following{/other_user}",
            "gists_url": "https://api.github.com/users/sneaxiy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sneaxiy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sneaxiy/subscriptions",
            "organizations_url": "https://api.github.com/users/sneaxiy/orgs",
            "repos_url": "https://api.github.com/users/sneaxiy/repos",
            "events_url": "https://api.github.com/users/sneaxiy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sneaxiy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-10-30T05:02:26Z",
        "updated_at": "2019-10-17T07:05:13Z",
        "closed_at": "2018-10-31T12:59:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/14143",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/14143",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/14143.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/14143.patch"
        },
        "body": "Fix #13746 . \r\nThe bug is caused by the monkey patch methods of variable. Comparing a variable with None using `!=` would create a compare_op in program, which causes a conversation from None to tensor.\r\n\r\n```\r\n\u03bb yq01-gpu-255-137-12-00 /Paddle/tests CUDA_VISIBLE_DEVICES=0  python\r\nPython 2.7.12 (default, Dec  4 2017, 14:50:18) \r\n[GCC 5.4.0 20160609] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import paddle.fluid as fluid\r\n>>> x = fluid.layers.data(name='x', shape=[-1, 32], dtype='float32')\r\n>>> if x != None:\r\n...     print(x)\r\n... \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/paddle/fluid/layers/math_op_patch.py\", line 118, in __impl__\r\n    self.block, value=other_var, dtype=lhs_dtype)\r\n  File \"/usr/local/lib/python2.7/dist-packages/paddle/fluid/layers/math_op_patch.py\", line 49, in create_scalar\r\n    return create_tensor(block, value, dtype, shape=[1])\r\n  File \"/usr/local/lib/python2.7/dist-packages/paddle/fluid/layers/math_op_patch.py\", line 34, in create_tensor\r\n    value = float(value)\r\nTypeError: float() argument must be a string or a number\r\n>>> \r\n>>> if x:\r\n...     print(x)\r\n... \r\nname: \"x\"\r\ntype {\r\n  type: LOD_TENSOR\r\n  lod_tensor {\r\n    tensor {\r\n      data_type: FP32\r\n      dims: -1\r\n      dims: 32\r\n    }\r\n    lod_level: 0\r\n  }\r\n}\r\npersistable: false\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20283",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20283/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20283/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20283/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20283",
        "id": 504419508,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI2MDcxMDc2",
        "number": 20283,
        "title": "fix error message for elementwise_add and elementwise_mul",
        "user": {
            "login": "danleifeng",
            "id": 52735331,
            "node_id": "MDQ6VXNlcjUyNzM1MzMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/52735331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danleifeng",
            "html_url": "https://github.com/danleifeng",
            "followers_url": "https://api.github.com/users/danleifeng/followers",
            "following_url": "https://api.github.com/users/danleifeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/danleifeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danleifeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danleifeng/subscriptions",
            "organizations_url": "https://api.github.com/users/danleifeng/orgs",
            "repos_url": "https://api.github.com/users/danleifeng/repos",
            "events_url": "https://api.github.com/users/danleifeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danleifeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-09T05:12:47Z",
        "updated_at": "2019-10-10T02:23:32Z",
        "closed_at": "2019-10-10T02:23:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20283",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20283",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20283.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20283.patch"
        },
        "body": "fix error message for elementwise_add and elementwise_mul.\r\n\r\n## Python\u7aef\uff08\u4ee5elementwise_add\u4e3a\u4f8b\u5b50,\u540c\u7406 elementwise_mul\uff09\r\n### 1. Input\u7c7b\u578b\u7684\u68c0\u67e5\r\nCode\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nx = fluid.create_lod_tensor(np.array([-1, 3, 5, 5]), [[1, 1, 1, 1]], fluid.CPUPlace())\r\ny = fluid.create_lod_tensor(np.array([-1, 3, 5, 5]), [[1, 1, 1, 1]], fluid.CPUPlace())\r\nout = fluid.layers.elementwise_add(x,y)\r\n```\r\n\r\n\u62a5\u9519\u4fe1\u606f\uff1a\r\n```\r\nTypeError: The type of 'x' in elementwise_add must be Variable, but received <class 'paddle.fluid.core_avx.LoDTensor'>\r\n```\r\n\r\n### 2. \u8f93\u5165Tensor\u7684\u6570\u636e\u7c7b\u578b\u7684\u68c0\u67e5\r\nCode\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nx = fluid.layers.data(name=\"x\",shape=[2, 3], dtype='uint8')\r\ny = fluid.layers.data(name=\"y\",shape=[2, 3], dtype='uint8')\r\nout = fluid.layers.elementwise_add(x,y)\r\n```\r\n\u62a5\u9519\u4fe1\u606f\uff1a\r\n```\r\nTypeError: The data type of 'x' in batch_norm must be float16 or float32 or float64 or int32 or int64, but received uint8.\r\n```\r\n\r\n## C++ \u7aef\uff1a\r\n### 1. \u8f93\u5165input\u7ef4\u5ea6\u68c0\u67e5\uff1ax\u7ef4\u5ea6\u5927\u4e8e\u7b49\u4e8ey\u7ef4\u5ea6\r\ncode:\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nnp_a = np.random.uniform(0.1,1,[3,4])\r\nnp_b = np.random.uniform(0.1,1,[2,5,6])\r\na = fluid.layers.data(shape=np_a.shape, name=\"a\", dtype='float32')\r\nb = fluid.layers.data(shape=np_b.shape, name=\"b\", dtype='float32')\r\nout =  fluid.layers.elementwise_add(a,b)\r\nexe = fluid.Executor(fluid.CPUPlace())\r\nout_result = exe.run(fluid.default_main_program(),\r\n                        feed={'a':np_a,'b':np_b})\r\n```\r\n\r\n\u62a5\u9519\u4fe1\u606f\uff1a\r\n```\r\nPaddleCheckError: Expected x_dim.size() >= y_dim.size(), but received x_dim.size():3 < y_dim.size():4.\r\nShapeError: the dimension of input X must greater than or equal to the one of input Y. But received: the shape of input X = [-1, 3, 4], the dimension of input X = 3, the shape of input Y = [-1, 2, 5, 6], the dimension of of input Y = 4\r\n```\r\n### 2. \u8f93\u5165input\u7ef4\u5ea6\u68c0\u67e5\uff1a\u8f93\u5165x\u4e0ey\u7684broadcast\u4e0d\u5339\u914d\u62a5\u9519\r\ncode\r\n```\r\nimport paddle.fluid as fluid\r\nimport numpy as np\r\nnp_a = np.random.uniform(0.1,1,[3,4])\r\nnp_b = np.random.uniform(0.1,1,[3,5])\r\na = fluid.layers.data(shape=np_a.shape, name=\"a\", dtype='float32')\r\nb = fluid.layers.data(shape=np_b.shape, name=\"b\", dtype='float32')\r\nout =  fluid.layers.elementwise_add(a,b)\r\nexe = fluid.Executor(fluid.CPUPlace())\r\nout_result = exe.run(fluid.default_main_program(),\r\n                        feed={'a':np_a,'b':np_b})\r\n```\r\n\r\n\u62a5\u9519\u4fe1\u606f\uff1a\r\n```\r\nPaddleCheckError: Expected y_dims[i] == 1, but received y_dims[i]:5 != 1:1.\r\nShapeError: broadcast dimension mismatch. Operands could not be broadcast together with the shape of X = [3, 4] and the shape of Y = [3, 5]. Received [4] of X is not equal to [5] of Y\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20099",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20099/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20099/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/20099/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20099",
        "id": 499890359,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzIyNDg4Njc0",
        "number": 20099,
        "title": "add input type, dtype and shape check for reshape op.",
        "user": {
            "login": "liym27",
            "id": 33742067,
            "node_id": "MDQ6VXNlcjMzNzQyMDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/33742067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liym27",
            "html_url": "https://github.com/liym27",
            "followers_url": "https://api.github.com/users/liym27/followers",
            "following_url": "https://api.github.com/users/liym27/following{/other_user}",
            "gists_url": "https://api.github.com/users/liym27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liym27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liym27/subscriptions",
            "organizations_url": "https://api.github.com/users/liym27/orgs",
            "repos_url": "https://api.github.com/users/liym27/repos",
            "events_url": "https://api.github.com/users/liym27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liym27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1484684317,
                "node_id": "MDU6TGFiZWwxNDg0Njg0MzE3",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/Error%20Message",
                "name": "Error Message",
                "color": "d7db5e",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-09-29T09:36:25Z",
        "updated_at": "2019-10-11T11:39:21Z",
        "closed_at": "2019-10-10T02:09:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/20099",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/20099",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/20099.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/20099.patch"
        },
        "body": "## reshape op\u589e\u5f3a\u8f93\u5165\u7c7b\u578b\u68c0\u67e5\r\n- 1. \u68c0\u67e5\u7c7b\u578b\u662f\u5426\u4e3aVariable\r\n- 2. \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u662f\u5426\u4e3afloat32,float64, int32, int64\r\n\r\n\u5728\u5355\u6d4b\u4e2d\u8986\u76d6\u7c7b\u578b\u9519\u8bef\u548c\u6570\u636e\u7c7b\u578b\u9519\u8bef\u4e24\u4e2a\u5f02\u5e38\u60c5\u51b5\r\n\u53ef\u624b\u52a8\u8fd0\u884c\u793a\u4f8b\uff0c\u770b\u4e0b\u9519\u8bef\uff1a\r\n```\r\nimport paddle.fluid as fluid\r\nx1 = fluid.create_lod_tensor(np.array([[-1]]), [[1]], fluid.CPUPlace())\r\nfluid.layers.reshape(x1, shape=[1])\r\n# TypeError: The type of \u2018x\u2019 in reshape must be Variable, but received <class 'paddle.fluid.core_avx.LoDTensor'>\r\n```\r\n```\r\nimport paddle.fluid as fluid\r\nx2 = fluid.layers.data(\r\n                    name=\"x\",\r\n                    shape=[2, 25],\r\n                    append_batch_size=False,\r\n                    dtype=\"float16\")\r\nfluid.layers.reshape(x2, shape=[2, 2, 5])\r\n#TypeError: The data type of \u2018x\u2019 in reshape must be float32, float64, int32 or int64, but received float16.\r\n\r\n```\r\n\r\n## reshape op\u589e\u5f3a\u7ef4\u5ea6\u7c7b\u62a5\u9519\u4fe1\u606f\r\n```\r\ninput = np.random.random([2, 25]).astype(\"float32\")\r\nx = fluid.layers.data(name=\"x\", shape=[2, 25], append_batch_size=False, dtype=\"float32\")\r\nshape = fluid.layers.data(name=\"shape\", shape=[1, 4], append_batch_size=False, dtype=\"float32\")\r\nfluid.layers.reshape(x, shape=shape)\r\n```\r\n#### 1.shape\u53c2\u6570\u4e2d\u5143\u7d20\u4e0d\u6b62\u4e00\u4e2a\u4e3a-1\u65f6\r\n```\r\nexe.run(fluid.default_main_program(), \r\n           feed={\"x\": input, \r\n                      \"shape\": np.array([-1, -1, 5, 1]).astype(\"int32\")})\r\n```\r\n> \u4fee\u6539\u524d\u62a5\u9519\uff1a\u62a5\u9519\u5185\u5bb9\u8868\u8ff0\u4e0d\u6e05\u695a\uff0c\u6ca1\u6709\u6253\u5370\u7ef4\u5ea6\u4fe1\u606f\r\nOnly one input dimension of Attr(shape) can be unknown.\r\n\r\n> \u4fee\u6539\u540e\u62a5\u9519\r\nShapeError: Only one dimension value of 'shape' in ReshapeOp can be -1. But received shape = [-1, -1, 5, 1], shape[1] is also -1.\r\n\r\n#### 2.shape\u53c2\u6570\u4e2d\u5143\u7d20\u4e3a0\u65f6\uff0c0\u6240\u5bf9\u5e94\u7684\u7ef4\u5ea6\u51fa\u9519\r\n```\r\nexe.run(fluid.default_main_program(), \r\n           feed={\"x\": input, \r\n                      \"shape\": np.array([2, 5, 5, 0]).astype(\"int32\")})\r\n```\r\n> \u4fee\u6539\u524d\u62a5\u9519\uff1a\u62a5\u9519\u5185\u5bb9\u8868\u8ff0\u4e0d\u6e05\u695a\uff0c\u6ca1\u6709\u6253\u5370\u7ef4\u5ea6\u4fe1\u606f\r\nThe index of dimension to copy from input shape must be less than the size of input shape.\r\n\r\n> \u4fee\u6539\u540e\u62a5\u9519\r\nShapeError: The index of 0 in `shape` must be less than the input tensor X's dimensions. But received shape = [2, 5, 5, 0], shape[3] = 0, X's shape = [2, 25], X's dimensions = 2.\r\n\r\n#### 3.shape\u53c2\u6570\u6709-1\u4ee5\u5916\u7684\u8d1f\u503c\r\n```\r\nexe.run(fluid.default_main_program(), \r\n           feed={\"x\": input, \r\n                      \"shape\": np.array([-1, -5, 5, 1]).astype(\"int32\")})\r\n```\r\n> \u4fee\u6539\u524d\u62a5\u9519\uff1a\r\nEach input dimension of Attr(shape) must not be negtive except one unknown dimension.\r\n\r\n> \u4fee\u6539\u540e\u62a5\u9519\r\nShapeError: Each dimension value of 'shape' in ReshapeOp must not be negtive except one unknown dimension. But received  shape = [-1, -5, 5, 1], shape[1] = -5.\r\n\r\n#### 4.\u4f20\u5165\u65e0\u6548\u7684shape\u503c\uff0c\u65e0\u6cd5\u6b63\u786e\u63a8\u65ad\u51fa-1\u5bf9\u5e94\u7684\u5b9e\u9645\u503c\r\n```\r\nexe.run(fluid.default_main_program(), \r\n           feed={\"x\": input, \r\n                      \"shape\": np.array([-1, 3, 5, 1]).astype(\"int32\")})\r\n```\r\n> \u4fee\u6539\u524d\u62a5\u9519\uff1a\r\nInvalid shape is given.\r\n\r\n> \u4fee\u6539\u540e\u62a5\u9519\r\nShapeError: The 'shape' in ReshapeOp is invalid. The input tensor X'size must be divisible by known capacity of 'shape'. But received X's shape = [2, 25], X's size = 50, 'shape' is [-1, 3, 5, 1], known capacity of 'shape' is -15.\r\n\r\n\r\n#### 5.\u4f20\u5165\u65e0\u6548\u7684shape\u503c\uff0c\u8f93\u5165x\u7684size\u4e0e shape\u4e0d\u5339\u914d\r\n```\r\nexe.run(fluid.default_main_program(), \r\n           feed={\"x\": input, \r\n                      \"shape\": np.array([1, 3, 5, 1]).astype(\"int32\")})\r\n```\r\n> \u4fee\u6539\u524d\u62a5\u9519\uff1a\r\nInvalid shape is given.\r\n\r\n> \u4fee\u6539\u540e\u62a5\u9519\r\nShapeError: The 'shape' in ReshapeOp is invalid. The input tensor X'size must be equal to the capacity of 'shape'. But received X's shape = [2, 25], X's size = 50, 'shape' is [1, 3, 5, 1], the capacity of 'shape' is 15.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/5676",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/5676/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/5676/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/5676/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/5676",
        "id": 274133245,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTUyNzU3Mjk0",
        "number": 5676,
        "title": "[WIP] hsigmoid op",
        "user": {
            "login": "Yancey1989",
            "id": 1426912,
            "node_id": "MDQ6VXNlcjE0MjY5MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1426912?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yancey1989",
            "html_url": "https://github.com/Yancey1989",
            "followers_url": "https://api.github.com/users/Yancey1989/followers",
            "following_url": "https://api.github.com/users/Yancey1989/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yancey1989/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yancey1989/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yancey1989/subscriptions",
            "organizations_url": "https://api.github.com/users/Yancey1989/orgs",
            "repos_url": "https://api.github.com/users/Yancey1989/repos",
            "events_url": "https://api.github.com/users/Yancey1989/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yancey1989/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 684108529,
                "node_id": "MDU6TGFiZWw2ODQxMDg1Mjk=",
                "url": "https://api.github.com/repos/PaddlePaddle/Paddle/labels/OpPorting",
                "name": "OpPorting",
                "color": "0e8a16",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-11-15T12:06:35Z",
        "updated_at": "2018-07-12T08:44:35Z",
        "closed_at": "2018-07-12T08:44:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/5676",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/5676",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/5676.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/5676.patch"
        },
        "body": "Fixed #4971\r\n\r\nTODO\r\n1. ~~Fix test backward failed~~\r\n```bash\r\n61: ERROR: test_check_grad (__main__.TestHSigmoidOp)\r\n61: ----------------------------------------------------------------------\r\n61: Traceback (most recent call last):\r\n61:   File \"test_hsigmoid_op.py\", line 35, in test_check_grad\r\n61:     no_grad_set=set(['Label']))\r\n61:   File \"/paddle/python/paddle/v2/fluid/tests/op_test.py\", line 374, in check_grad\r\n61:     in_place=in_place) for input_to_check in inputs_to_check\r\n61:   File \"/paddle/python/paddle/v2/fluid/tests/op_test.py\", line 141, in get_numeric_gradient\r\n61:     __set_elem__(tensor_to_check, i, x_pos)\r\n61:   File \"/paddle/python/paddle/v2/fluid/tests/op_test.py\", line 127, in __set_elem__\r\n61:     tensor.set_int64_element(i, e)\r\n61: TypeError: set_int64_element(): incompatible function arguments. The following argument types are supported:\r\n61:     1. (self: paddle.v2.fluid.core.Tensor, arg0: int, arg1: int) -> None\r\n61:\r\n61: Invoked with: <paddle.v2.fluid.core.LoDTensor object at 0x7f33ec279510>, 0, 1.005\r\n```\r\n2. ~Implement hsigmoid with Python code in unit test.~\r\n3. Fix backward failed.\r\n  ",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/10757",
        "repository_url": "https://api.github.com/repos/PaddlePaddle/Paddle",
        "labels_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/10757/labels{/name}",
        "comments_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/10757/comments",
        "events_url": "https://api.github.com/repos/PaddlePaddle/Paddle/issues/10757/events",
        "html_url": "https://github.com/PaddlePaddle/Paddle/pull/10757",
        "id": 324219111,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTg4ODg2MzYy",
        "number": 10757,
        "title": "[Test-driven] Implementing label_semantic_role with new API",
        "user": {
            "login": "sidgoyal78",
            "id": 6762570,
            "node_id": "MDQ6VXNlcjY3NjI1NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6762570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidgoyal78",
            "html_url": "https://github.com/sidgoyal78",
            "followers_url": "https://api.github.com/users/sidgoyal78/followers",
            "following_url": "https://api.github.com/users/sidgoyal78/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidgoyal78/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidgoyal78/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidgoyal78/subscriptions",
            "organizations_url": "https://api.github.com/users/sidgoyal78/orgs",
            "repos_url": "https://api.github.com/users/sidgoyal78/repos",
            "events_url": "https://api.github.com/users/sidgoyal78/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidgoyal78/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-05-17T23:23:52Z",
        "updated_at": "2018-06-04T18:35:34Z",
        "closed_at": "2018-05-24T20:36:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/PaddlePaddle/Paddle/pulls/10757",
            "html_url": "https://github.com/PaddlePaddle/Paddle/pull/10757",
            "diff_url": "https://github.com/PaddlePaddle/Paddle/pull/10757.diff",
            "patch_url": "https://github.com/PaddlePaddle/Paddle/pull/10757.patch"
        },
        "body": "I have found 2 issues:\r\n- In this chapter, we need to be able to read the embedding parameters. However, with the new high level API, we can't modify the train_loop to read the params. Hence, this current implementation doesn't work.\r\n\r\nMore precisely, if we look at the earlier implementation: https://github.com/PaddlePaddle/Paddle/blob/develop/python/paddle/fluid/tests/book/test_label_semantic_roles.py#L200-L204\r\n\r\n\r\n- There is a problem with the learning rate layer inside optimizer. I get the error:\r\n```\r\n File \"/usr/local/lib/python2.7/dist-packages/paddle/fluid/optimizer.py\", line 73, in _create_global_learning_rate\r\n    \"learning rate variable is create outside optimizer,\"\r\nTypeError: learning rate variable is create outside optimizer,can not create new learning rate variable for new program\r\n``` \r\nFor reference, see original implementation: https://github.com/PaddlePaddle/Paddle/blob/develop/python/paddle/fluid/tests/book/test_label_semantic_roles.py#L173-L178\r\n\r\n### Potential fixes (which work) \r\n- Issue 1: We can make the embedding layer trainable. \r\n- Issue 2: We can get around the optimizer problem by having a straight-forward optimizer, which is done here.\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    }
]