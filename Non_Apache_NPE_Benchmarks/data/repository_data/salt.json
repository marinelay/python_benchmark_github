[
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/59914",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/59914/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/59914/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/59914/events",
        "html_url": "https://github.com/saltstack/salt/pull/59914",
        "id": 842252347,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjAxODY2MjMx",
        "number": 59914,
        "title": "Fix failing jenkins tests",
        "user": {
            "login": "twangboy",
            "id": 9383935,
            "node_id": "MDQ6VXNlcjkzODM5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9383935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twangboy",
            "html_url": "https://github.com/twangboy",
            "followers_url": "https://api.github.com/users/twangboy/followers",
            "following_url": "https://api.github.com/users/twangboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/twangboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twangboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twangboy/subscriptions",
            "organizations_url": "https://api.github.com/users/twangboy/orgs",
            "repos_url": "https://api.github.com/users/twangboy/repos",
            "events_url": "https://api.github.com/users/twangboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twangboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2056477858,
                "node_id": "MDU6TGFiZWwyMDU2NDc3ODU4",
                "url": "https://api.github.com/repos/saltstack/salt/labels/has-failing-test",
                "name": "has-failing-test",
                "color": "f76740",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-03-26T19:46:04Z",
        "updated_at": "2021-03-30T22:35:31Z",
        "closed_at": "2021-03-30T22:35:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/59914",
            "html_url": "https://github.com/saltstack/salt/pull/59914",
            "diff_url": "https://github.com/saltstack/salt/pull/59914.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/59914.patch"
        },
        "body": "### What does this PR do?\r\nFixes an issue where the test was setting the color logger for the api test. This was not being set back and was causing later tests to fail. Also fixes an issue with the color logger where None values we being passed to the ColorLogRecord causing the original stack trace.\r\n\r\nAlso fixes a typo in `test_pub_not_allowed`.\r\n\r\nFor reference, here's the stacktrace thrown with the ColorLogger:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/shane/salt/.nox/pytest-parametrized-3-coverage-false-crypto-none-transport-zeromq/lib/python3.6/site-packages/saltfactories/plugins/log_server.py\", line 151, in process_logs\r\n    record = logging.makeLogRecord(record_dict)\r\n  File \"/usr/lib/python3.6/logging/__init__.py\", line 370, in makeLogRecord\r\n    rv = _logRecordFactory(None, None, \"\", 0, \"\", (), None, None)\r\n  File \"/home/shane/salt/salt/_logging/impl.py\", line 148, in __init__\r\n    self.colorname = \"{}[{:<17}]{}\".format(LOG_COLORS[\"name\"], self.name, reset)\r\nTypeError: unsupported format string passed to NoneType.__format__\r\n```\r\n\r\n### Merge requirements satisfied?\r\n**[NOTICE] Bug fixes or features added to Salt require tests.**\r\n<!-- Please review the [test documentation](https://docs.saltstack.com/en/master/topics/tutorials/writing_tests.html) for details on how to implement tests into Salt's test suite. -->\r\n- [ ] Docs\r\n- [ ] Changelog - https://docs.saltstack.com/en/master/topics/development/changelog.html\r\n- [ ] Tests written/updated\r\n\r\n### Commits signed with GPG?\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/58950",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/58950/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/58950/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/58950/events",
        "html_url": "https://github.com/saltstack/salt/pull/58950",
        "id": 742930812,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTIwOTYzNjI4",
        "number": 58950,
        "title": "[PyTest] The paths need to be strings for Py3.5",
        "user": {
            "login": "s0undt3ch",
            "id": 300048,
            "node_id": "MDQ6VXNlcjMwMDA0OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/s0undt3ch",
            "html_url": "https://github.com/s0undt3ch",
            "followers_url": "https://api.github.com/users/s0undt3ch/followers",
            "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
            "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
            "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
            "repos_url": "https://api.github.com/users/s0undt3ch/repos",
            "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2441964192,
                "node_id": "MDU6TGFiZWwyNDQxOTY0MTky",
                "url": "https://api.github.com/repos/saltstack/salt/labels/v3002.2",
                "name": "v3002.2",
                "color": "350D48",
                "default": false,
                "description": "vulnerable version"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-11-14T05:30:04Z",
        "updated_at": "2021-03-05T21:14:46Z",
        "closed_at": "2020-11-14T09:26:52Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/58950",
            "html_url": "https://github.com/saltstack/salt/pull/58950",
            "diff_url": "https://github.com/saltstack/salt/pull/58950.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/58950.patch"
        },
        "body": "### What does this PR do?\r\n\r\nFixes `TypeError` when running under Py3.5.\r\n\r\n* `tests.pytests.unit.modules.test_tls.test_create_ca_permissions_on_cert_and_key`\r\n* `tests.pytests.unit.modules.test_tls.test_create_csr_permissions_on_csr_and_key`\r\n* `tests.pytests.unit.modules.test_tls.test_create_self_signed_cert_permissions_on_csr_cert_and_key`\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/58597",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/58597/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/58597/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/58597/events",
        "html_url": "https://github.com/saltstack/salt/pull/58597",
        "id": 712259528,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDk1NzcwNjg1",
        "number": 58597,
        "title": "Pass in protocol to ssl context",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2001250652,
                "node_id": "MDU6TGFiZWwyMDAxMjUwNjUy",
                "url": "https://api.github.com/repos/saltstack/salt/labels/Magnesium",
                "name": "Magnesium",
                "color": "4832a8",
                "default": false,
                "description": "Mg release after Na prior to Al"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-09-30T20:31:13Z",
        "updated_at": "2020-10-13T21:39:57Z",
        "closed_at": "2020-10-08T03:18:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/58597",
            "html_url": "https://github.com/saltstack/salt/pull/58597",
            "diff_url": "https://github.com/saltstack/salt/pull/58597.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/58597.patch"
        },
        "body": "### What issues does this PR fix or reference?\r\nFixes pytest failure here: https://jenkinsci.saltstack.com/view/Master%20Branch%20Pytest%20Jobs/job/pr-ubuntu1604-py3-m2crypto-pytest-slow/job/master/lastCompletedBuild/testReport/tests.pytests.integration.modules/test_file/test_get_managed_verify_ssl_False_/\r\n\r\n```\r\nError Message\r\n\r\nfailed on setup with \"TypeError: __new__() missing 1 required positional argument: 'protocol'\"\r\n\r\nStacktrace\r\n\r\nintegration_files_dir = PosixPath('/tmp/salt-tests-tmpdir/integration-files')\r\nscope = 'module'\r\n\r\n    @pytest.fixture\r\n    def ssl_webserver(integration_files_dir, scope=\"module\"):\r\n        \"\"\"\r\n        spins up an https webserver.\r\n        \"\"\"\r\n>       context = ssl.SSLContext()\r\nE       TypeError: __new__() missing 1 required positional argument: 'protocol'\r\n\r\nintegration_files_dir = PosixPath('/tmp/salt-tests-tmpdir/integration-files')\r\nscope      = 'module'\r\n\r\ntests/conftest.py:1333: TypeError\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/57839",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/57839/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/57839/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/57839/events",
        "html_url": "https://github.com/saltstack/salt/pull/57839",
        "id": 647699046,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQxNjcwOTU5",
        "number": 57839,
        "title": "Revert \"fix 45195 - add ignore to sysctl state and module\"",
        "user": {
            "login": "asomers",
            "id": 129721,
            "node_id": "MDQ6VXNlcjEyOTcyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129721?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asomers",
            "html_url": "https://github.com/asomers",
            "followers_url": "https://api.github.com/users/asomers/followers",
            "following_url": "https://api.github.com/users/asomers/following{/other_user}",
            "gists_url": "https://api.github.com/users/asomers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asomers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asomers/subscriptions",
            "organizations_url": "https://api.github.com/users/asomers/orgs",
            "repos_url": "https://api.github.com/users/asomers/repos",
            "events_url": "https://api.github.com/users/asomers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asomers/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 41387723,
                "node_id": "MDU6TGFiZWw0MTM4NzcyMw==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/Bug",
                "name": "Bug",
                "color": "e11d21",
                "default": false,
                "description": "broken, incorrect, or confusing behavior"
            },
            {
                "id": 2001250652,
                "node_id": "MDU6TGFiZWwyMDAxMjUwNjUy",
                "url": "https://api.github.com/repos/saltstack/salt/labels/Magnesium",
                "name": "Magnesium",
                "color": "4832a8",
                "default": false,
                "description": "Mg release after Na prior to Al"
            },
            {
                "id": 41388135,
                "node_id": "MDU6TGFiZWw0MTM4ODEzNQ==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/severity-medium",
                "name": "severity-medium",
                "color": "ff9143",
                "default": false,
                "description": "3rd level, incorrect or bad functionality, confusing and lacks a work around"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-06-29T21:59:01Z",
        "updated_at": "2020-10-05T20:21:33Z",
        "closed_at": "2020-10-05T02:09:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/57839",
            "html_url": "https://github.com/saltstack/salt/pull/57839",
            "diff_url": "https://github.com/saltstack/salt/pull/57839.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/57839.patch"
        },
        "body": "Reverts saltstack/salt#55719\r\n\r\nThat PR changed the signature of Linux's sysctl.persist, but did not update the persist module of any other OS.  The result is a `TypeError` exception in the sysctl state on FreeBSD, NetBSD, and OpenBSD.  On OSX the problem is worse: runtime misbehavior.\r\n\r\nFixes #57826 ",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/56306",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/56306/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/56306/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/56306/events",
        "html_url": "https://github.com/saltstack/salt/pull/56306",
        "id": 575460063,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzNjA0MTI5",
        "number": 56306,
        "title": "saltnado: don't use gather_job_timeout as a timeout signal in job_not_running",
        "user": {
            "login": "oeuftete",
            "id": 170730,
            "node_id": "MDQ6VXNlcjE3MDczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/170730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oeuftete",
            "html_url": "https://github.com/oeuftete",
            "followers_url": "https://api.github.com/users/oeuftete/followers",
            "following_url": "https://api.github.com/users/oeuftete/following{/other_user}",
            "gists_url": "https://api.github.com/users/oeuftete/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oeuftete/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oeuftete/subscriptions",
            "organizations_url": "https://api.github.com/users/oeuftete/orgs",
            "repos_url": "https://api.github.com/users/oeuftete/repos",
            "events_url": "https://api.github.com/users/oeuftete/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oeuftete/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2001250652,
                "node_id": "MDU6TGFiZWwyMDAxMjUwNjUy",
                "url": "https://api.github.com/repos/saltstack/salt/labels/Magnesium",
                "name": "Magnesium",
                "color": "4832a8",
                "default": false,
                "description": "Mg release after Na prior to Al"
            },
            {
                "id": 158446523,
                "node_id": "MDU6TGFiZWwxNTg0NDY1MjM=",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZD",
                "name": "ZD",
                "color": "e11d21",
                "default": false,
                "description": "The issue is related to a Zendesk customer support ticket."
            },
            {
                "id": 1577756857,
                "node_id": "MDU6TGFiZWwxNTc3NzU2ODU3",
                "url": "https://api.github.com/repos/saltstack/salt/labels/master-port",
                "name": "master-port",
                "color": "e99695",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "dwoz",
            "id": 1527763,
            "node_id": "MDQ6VXNlcjE1Mjc3NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1527763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwoz",
            "html_url": "https://github.com/dwoz",
            "followers_url": "https://api.github.com/users/dwoz/followers",
            "following_url": "https://api.github.com/users/dwoz/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwoz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwoz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwoz/subscriptions",
            "organizations_url": "https://api.github.com/users/dwoz/orgs",
            "repos_url": "https://api.github.com/users/dwoz/repos",
            "events_url": "https://api.github.com/users/dwoz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwoz/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dwoz",
                "id": 1527763,
                "node_id": "MDQ6VXNlcjE1Mjc3NjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1527763?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dwoz",
                "html_url": "https://github.com/dwoz",
                "followers_url": "https://api.github.com/users/dwoz/followers",
                "following_url": "https://api.github.com/users/dwoz/following{/other_user}",
                "gists_url": "https://api.github.com/users/dwoz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dwoz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dwoz/subscriptions",
                "organizations_url": "https://api.github.com/users/dwoz/orgs",
                "repos_url": "https://api.github.com/users/dwoz/repos",
                "events_url": "https://api.github.com/users/dwoz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dwoz/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-03-04T14:44:48Z",
        "updated_at": "2020-09-29T23:30:01Z",
        "closed_at": "2020-09-29T23:30:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/56306",
            "html_url": "https://github.com/saltstack/salt/pull/56306",
            "diff_url": "https://github.com/saltstack/salt/pull/56306.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/56306.patch"
        },
        "body": "(Summary copied from #49567.  This was intended for Neon, but appears to have not made it off of the old `neon` branch?)\n\nbecause the future was generated from tornado.gen.sleep, its eventual timer\nstill fires regardless of if the future is manually set with set_result. When\nset_result is called twice (once manually by saltnado, once by tornado call_later),\na stacktrace like so is thrown:\n\n```\n[ERROR   ] Uncaught exception POST / (::1)\nTraceback (most recent call last):\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/web.py\", line 1369, in _stack_context_handle_exception\n    raise_exc_info((type, value, traceback))\n  File \"<string>\", line 3, in raise_exc_info\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/stack_context.py\", line 314, in wrapped\n    ret = fn(*args, **kwargs)\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/gen.py\", line 771, in later\n    f.set_result(None)\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/concurrent.py\", line 254, in set_result\n    self._set_done()\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/concurrent.py\", line 298, in _set_done\n    for cb in self._callbacks:\nTypeError: 'NoneType' object is not iterable\n\n```\nThis patch attempts to fix that. @jacksontj would appreciate a review I'm not hugely familiar with the saltnado/tornado code here.\n\n### What does this PR do?\nfixes a stack thrown after every call.\n\nfixes https://github.com/saltstack/salt/issues/49572\n\n### Tests written?\nNo\n\n### Commits signed with GPG?\nNo\n\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\n\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/58272",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/58272/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/58272/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/58272/events",
        "html_url": "https://github.com/saltstack/salt/pull/58272",
        "id": 684298748,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDcyMjA5Nzkw",
        "number": 58272,
        "title": "Fix x509 CRL creation (fixes #54867)",
        "user": {
            "login": "alxwr",
            "id": 1920805,
            "node_id": "MDQ6VXNlcjE5MjA4MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1920805?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alxwr",
            "html_url": "https://github.com/alxwr",
            "followers_url": "https://api.github.com/users/alxwr/followers",
            "following_url": "https://api.github.com/users/alxwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/alxwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alxwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alxwr/subscriptions",
            "organizations_url": "https://api.github.com/users/alxwr/orgs",
            "repos_url": "https://api.github.com/users/alxwr/repos",
            "events_url": "https://api.github.com/users/alxwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alxwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2001250652,
                "node_id": "MDU6TGFiZWwyMDAxMjUwNjUy",
                "url": "https://api.github.com/repos/saltstack/salt/labels/Magnesium",
                "name": "Magnesium",
                "color": "4832a8",
                "default": false,
                "description": "Mg release after Na prior to Al"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-08-24T01:23:33Z",
        "updated_at": "2020-09-14T19:10:58Z",
        "closed_at": "2020-08-24T22:15:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/58272",
            "html_url": "https://github.com/saltstack/salt/pull/58272",
            "diff_url": "https://github.com/saltstack/salt/pull/58272.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/58272.patch"
        },
        "body": "### What does this PR do?\r\n\r\nFixes this error:\r\n\r\n```\r\n     Comment: An exception occurred in this state: Traceback (most recent call last):                                 \r\n                File \"/usr/local/lib/python3.7/site-packages/salt/state.py\", line 2154, in call                       \r\n                  *cdata[\"args\"], **cdata[\"kwargs\"]                                                                   \r\n                File \"/usr/local/lib/python3.7/site-packages/salt/loader.py\", line 2085, in wrapper                   \r\n                  return f(*args, **kwargs)                                                                           \r\n                File \"/usr/local/lib/python3.7/site-packages/salt/states/x509.py\", line 828, in crl_managed           \r\n                  current = __salt__[\"x509.read_crl\"](crl=name)                                                       \r\n                File \"/usr/local/lib/python3.7/site-packages/salt/modules/x509.py\", line 678, in read_crl             \r\n                  crltempfile.write(salt.utils.stringutils.to_str(text))                                              \r\n                File \"/usr/local/lib/python3.7/tempfile.py\", line 481, in func_wrapper                                \r\n                  return func(*args, **kwargs)                                                                        \r\n              TypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\n\r\n### What issues does this PR fix or reference?\r\nFixes: #54867\r\n\r\n### Merge requirements satisfied?\r\n**[NOTICE] Bug fixes or features added to Salt require tests.**\r\n<!-- Please review the [test documentation](https://docs.saltstack.com/en/master/topics/tutorials/writing_tests.html) for details on how to implement tests into Salt's test suite. -->\r\n- [X] Docs (no updates were necessary)\r\n- [X] Changelog - https://docs.saltstack.com/en/master/topics/development/changelog.html\r\n- [X] Tests written/updated\r\n\r\nNote: contrary to the testing guide, this is the proper command to run the tests:\r\n\r\n```shell\r\nnox -e 'pytest-zeromq-m2crypto-3(coverage=False)' -- --run-slow tests/unit/modules/test_x509.py tests/integration/states/test_x509.py\r\n\r\n[\u2026]\r\n\r\ncollected 30 items                                                                                                   \r\n\r\ntests/unit/modules/test_x509.py ......................................................................................\r\n..................................................+++++\r\n....................................................+++++\r\n.....\r\ntests/integration/states/test_x509.py ..................\r\n\r\n=========================================== 30 passed in 126.97s (0:02:06) ===========================================\r\nnox > Session pytest-parametrized-3(crypto='m2crypto', transport='zeromq', coverage=False) was successful.\r\nnox > Ran multiple sessions:\r\nnox > * pytest-zeromq-m2crypto-3(coverage=False): success\r\nnox > * pytest-parametrized-3(crypto='m2crypto', transport='zeromq', coverage=False): success\r\n```\r\n\r\n### Commits signed with GPG?\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/master/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/58278",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/58278/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/58278/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/58278/events",
        "html_url": "https://github.com/saltstack/salt/pull/58278",
        "id": 685464401,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDczMTg1OTIw",
        "number": 58278,
        "title": "remove encoding kwarg for both pack/unpack msgpack",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2001250652,
                "node_id": "MDU6TGFiZWwyMDAxMjUwNjUy",
                "url": "https://api.github.com/repos/saltstack/salt/labels/Magnesium",
                "name": "Magnesium",
                "color": "4832a8",
                "default": false,
                "description": "Mg release after Na prior to Al"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-08-25T12:57:16Z",
        "updated_at": "2020-09-14T19:10:59Z",
        "closed_at": "2020-08-25T23:38:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/58278",
            "html_url": "https://github.com/saltstack/salt/pull/58278",
            "diff_url": "https://github.com/saltstack/salt/pull/58278.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/58278.patch"
        },
        "body": "### What does this PR do?\r\nremoves the encoding kwarg, which was removed for both pack/unpack in msgpack 1.0.0. https://github.com/msgpack/msgpack-python/blob/master/ChangeLog.rst#100 , I checked the msgpack-python code and i do not see that kwarg anywhere in the code for that version.\r\n\r\nAlso ensures we fix the `salt.utils.msgpack.msgpack` call in salt.utils.cloud.\r\n### What issues does this PR fix or reference?\r\nFixes: https://github.com/saltstack/salt/issues/57965\r\nFixes: https://github.com/saltstack/salt/issues/57963\r\n\r\n### Previous Behavior\r\nCloud Tests failing and encoding was not removed from the call if included.\r\nStack trace when using salt-cloud:\r\n\r\n```\r\n02:44:58         [ERROR   ] There was a profile error: unpackb() got an unexpected keyword argument 'encoding'\r\n02:44:58         Traceback (most recent call last):\r\n02:44:58           File \"/tmp/kitchen/testing/salt/cloud/cli.py\", line 290, in run\r\n02:44:58             ret = mapper.run_profile(self.options.profile, self.config.get(\"names\"))\r\n02:44:58           File \"/tmp/kitchen/testing/salt/cloud/__init__.py\", line 1423, in run_profile\r\n02:44:58             ret[name] = self.create(vm_)\r\n02:44:58           File \"/tmp/kitchen/testing/salt/cloud/__init__.py\", line 1242, in create\r\n02:44:58             output = self.clouds[func](vm_)\r\n02:44:58           File \"/tmp/kitchen/testing/salt/cloud/clouds/ec2.py\", line 2654, in create\r\n02:44:58             vm_[\"name\"], vm_[\"profile\"], \"ec2\", vm_[\"driver\"]\r\n02:44:58           File \"/tmp/kitchen/testing/salt/utils/cloud.py\", line 2729, in cachedir_index_add\r\n02:44:58             salt.utils.msgpack.msgpack.load(fh_, encoding=MSGPACK_ENCODING)\r\n02:44:58           File \"/tmp/kitchen/testing/.nox/runtests-cloud-3-coverage-true/lib/python3.6/site-packages/msgpack/__init__.py\", line 46, in unpack\r\n02:44:58             return unpackb(data, **kwargs)\r\n02:44:58           File \"msgpack/_unpacker.pyx\", line 144, in msgpack._cmsgpack.unpackb\r\n02:44:58         TypeError: unpackb() got an unexpected keyword argument 'encoding'\r\n```\r\n\r\n### New Behavior\r\nCloud Tests passing and encoding removed from call to msgpack and no stack trace\r\n\r\n### Merge requirements satisfied?\r\n- [ ] Docs\r\n- [x] Changelog - https://docs.saltstack.com/en/master/topics/development/changelog.html\r\n- [x] Tests written/updated\r\n\r\n### Commits signed with GPG?\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/56699",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/56699/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/56699/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/56699/events",
        "html_url": "https://github.com/saltstack/salt/pull/56699",
        "id": 602436831,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDA1NDg0NzIy",
        "number": 56699,
        "title": "Fixes minion returning list in chocolatey module",
        "user": {
            "login": "haodeon",
            "id": 31973188,
            "node_id": "MDQ6VXNlcjMxOTczMTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/31973188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haodeon",
            "html_url": "https://github.com/haodeon",
            "followers_url": "https://api.github.com/users/haodeon/followers",
            "following_url": "https://api.github.com/users/haodeon/following{/other_user}",
            "gists_url": "https://api.github.com/users/haodeon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haodeon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haodeon/subscriptions",
            "organizations_url": "https://api.github.com/users/haodeon/orgs",
            "repos_url": "https://api.github.com/users/haodeon/repos",
            "events_url": "https://api.github.com/users/haodeon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haodeon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1113112713,
                "node_id": "MDU6TGFiZWwxMTEzMTEyNzEz",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRelease-Sodium",
                "name": "ZRelease-Sodium",
                "color": "fbca04",
                "default": false,
                "description": "retired label"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-04-18T11:19:55Z",
        "updated_at": "2020-05-18T21:17:28Z",
        "closed_at": "2020-04-23T03:36:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/56699",
            "html_url": "https://github.com/saltstack/salt/pull/56699",
            "diff_url": "https://github.com/saltstack/salt/pull/56699.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/56699.patch"
        },
        "body": "### What does this PR do?\r\nChanges CaseInsensitiveDict implementation from requests to salt's implementation in utils.data\r\n\r\n### What issues does this PR fix or reference?\r\nFixes: #54899\r\n\r\n### Previous Behavior\r\nThe CaseInsensitiveDict cannot be serialized by msgpack. The minion would encounter a TypeError and nothing would be returned to the master.\r\n\r\n### New Behavior\r\nmsgpack is able to serialize the output from list and the minion successfully returns the response to the master.\r\n\r\n### Merge requirements satisfied?\r\n**[NOTICE] Bug fixes or features added to Salt require tests.**\r\n<!-- Please review the [test documentation](https://docs.saltstack.com/en/master/topics/tutorials/writing_tests.html) for details on how to implement tests into Salt's test suite. -->\r\n- [ ] Docs\r\n- [ ] Changelog - https://docs.saltstack.com/en/latest/topics/development/changelog.html\r\n- [x] Tests written/updated\r\n\r\n### Commits signed with GPG?\r\nYes\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/50414",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/50414/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/50414/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/50414/events",
        "html_url": "https://github.com/saltstack/salt/pull/50414",
        "id": 378258307,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5MDA0NzI5",
        "number": 50414,
        "title": "use exc.winerror not exc[0] to avoid python3 TypeError",
        "user": {
            "login": "flassman",
            "id": 32097136,
            "node_id": "MDQ6VXNlcjMyMDk3MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32097136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flassman",
            "html_url": "https://github.com/flassman",
            "followers_url": "https://api.github.com/users/flassman/followers",
            "following_url": "https://api.github.com/users/flassman/following{/other_user}",
            "gists_url": "https://api.github.com/users/flassman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flassman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flassman/subscriptions",
            "organizations_url": "https://api.github.com/users/flassman/orgs",
            "repos_url": "https://api.github.com/users/flassman/repos",
            "events_url": "https://api.github.com/users/flassman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flassman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-11-07T11:59:19Z",
        "updated_at": "2020-02-18T13:25:53Z",
        "closed_at": "2018-11-08T16:38:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/50414",
            "html_url": "https://github.com/saltstack/salt/pull/50414",
            "diff_url": "https://github.com/saltstack/salt/pull/50414.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/50414.patch"
        },
        "body": "Fixes #50413\r\n\r\n### What does this PR do?\r\n\r\npython3 does not provide an exc[] dict to access the error details, so instead we need to use the winerror attribute\r\n\r\nThe whole problem is gone with the HEAD due to refactoring of that module, but it would be really cool if these two lines could be merged to at least 2018.3 so that any future 2018.3.x would not break our manually fixed minions again\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nFixes #50413\r\n\r\n### Previous Behavior\r\nRemove this section if not relevant\r\n\r\n### New Behavior\r\nRemove this section if not relevant\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/52936",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/52936/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/52936/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/52936/events",
        "html_url": "https://github.com/saltstack/salt/pull/52936",
        "id": 441508547,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc2ODIxOTE4",
        "number": 52936,
        "title": "Fix python3 get imageid",
        "user": {
            "login": "NiCalderon",
            "id": 47402052,
            "node_id": "MDQ6VXNlcjQ3NDAyMDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/47402052?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NiCalderon",
            "html_url": "https://github.com/NiCalderon",
            "followers_url": "https://api.github.com/users/NiCalderon/followers",
            "following_url": "https://api.github.com/users/NiCalderon/following{/other_user}",
            "gists_url": "https://api.github.com/users/NiCalderon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NiCalderon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NiCalderon/subscriptions",
            "organizations_url": "https://api.github.com/users/NiCalderon/orgs",
            "repos_url": "https://api.github.com/users/NiCalderon/repos",
            "events_url": "https://api.github.com/users/NiCalderon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NiCalderon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1411793392,
                "node_id": "MDU6TGFiZWwxNDExNzkzMzky",
                "url": "https://api.github.com/repos/saltstack/salt/labels/Reviewers-Assigned",
                "name": "Reviewers-Assigned",
                "color": "a459cc",
                "default": false,
                "description": ""
            },
            {
                "id": 1985867594,
                "node_id": "MDU6TGFiZWwxOTg1ODY3NTk0",
                "url": "https://api.github.com/repos/saltstack/salt/labels/code-jam",
                "name": "code-jam",
                "color": "5319e7",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-05-08T01:18:04Z",
        "updated_at": "2020-04-28T18:09:09Z",
        "closed_at": "2019-06-26T15:45:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/52936",
            "html_url": "https://github.com/saltstack/salt/pull/52936",
            "diff_url": "https://github.com/saltstack/salt/pull/52936.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/52936.patch"
        },
        "body": "### What does this PR do?\r\nExpose, test and fix a python 3 salt-cloud bug when using an image not starting with \"ami-\"\r\n\r\n### What issues does this PR fix or reference?\r\nNone\r\n\r\n### Previous Behavior\r\n       Traceback (most recent call last):\r\n         File \"/usr/lib/python3/dist-packages/mock/mock.py\", line 1305, in patched\r\n           return func(*args, **keywargs)\r\n         File \"/home/nicolasc/salt/tests/unit/cloud/clouds/test_ec2.py\", line 104, in test__get_imageid_by_name\r\n           imageid = ec2._get_imageid_from_image_name('CentOS Linux 7*')\r\n         File \"/home/nicolasc/salt/salt/cloud/clouds/ec2.py\", line 1237, in _get_imageid_from_image_name\r\n           lambda i, j: salt.utils.compat.cmp(_t(i), _t(j))\r\n       TypeError: sorted expected 1 arguments, got 2\r\n\r\n### New Behavior\r\nIt works\u2122\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes\r\n\r\nPS: I almost forgot to pick the right branch to merge. I feel like it's easy to overlook.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/56381",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/56381/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/56381/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/56381/events",
        "html_url": "https://github.com/saltstack/salt/pull/56381",
        "id": 581580656,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg4NjI2ODYw",
        "number": 56381,
        "title": "Fix 54501",
        "user": {
            "login": "mchugh19",
            "id": 1360357,
            "node_id": "MDQ6VXNlcjEzNjAzNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1360357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mchugh19",
            "html_url": "https://github.com/mchugh19",
            "followers_url": "https://api.github.com/users/mchugh19/followers",
            "following_url": "https://api.github.com/users/mchugh19/following{/other_user}",
            "gists_url": "https://api.github.com/users/mchugh19/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mchugh19/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mchugh19/subscriptions",
            "organizations_url": "https://api.github.com/users/mchugh19/orgs",
            "repos_url": "https://api.github.com/users/mchugh19/repos",
            "events_url": "https://api.github.com/users/mchugh19/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mchugh19/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1113112713,
                "node_id": "MDU6TGFiZWwxMTEzMTEyNzEz",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRelease-Sodium",
                "name": "ZRelease-Sodium",
                "color": "fbca04",
                "default": false,
                "description": "retired label"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "DmitryKuzmenko",
            "id": 4807387,
            "node_id": "MDQ6VXNlcjQ4MDczODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4807387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DmitryKuzmenko",
            "html_url": "https://github.com/DmitryKuzmenko",
            "followers_url": "https://api.github.com/users/DmitryKuzmenko/followers",
            "following_url": "https://api.github.com/users/DmitryKuzmenko/following{/other_user}",
            "gists_url": "https://api.github.com/users/DmitryKuzmenko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DmitryKuzmenko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DmitryKuzmenko/subscriptions",
            "organizations_url": "https://api.github.com/users/DmitryKuzmenko/orgs",
            "repos_url": "https://api.github.com/users/DmitryKuzmenko/repos",
            "events_url": "https://api.github.com/users/DmitryKuzmenko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DmitryKuzmenko/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "DmitryKuzmenko",
                "id": 4807387,
                "node_id": "MDQ6VXNlcjQ4MDczODc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4807387?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DmitryKuzmenko",
                "html_url": "https://github.com/DmitryKuzmenko",
                "followers_url": "https://api.github.com/users/DmitryKuzmenko/followers",
                "following_url": "https://api.github.com/users/DmitryKuzmenko/following{/other_user}",
                "gists_url": "https://api.github.com/users/DmitryKuzmenko/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DmitryKuzmenko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DmitryKuzmenko/subscriptions",
                "organizations_url": "https://api.github.com/users/DmitryKuzmenko/orgs",
                "repos_url": "https://api.github.com/users/DmitryKuzmenko/repos",
                "events_url": "https://api.github.com/users/DmitryKuzmenko/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DmitryKuzmenko/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-03-15T08:27:09Z",
        "updated_at": "2020-05-18T21:05:51Z",
        "closed_at": "2020-04-18T04:35:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/56381",
            "html_url": "https://github.com/saltstack/salt/pull/56381",
            "diff_url": "https://github.com/saltstack/salt/pull/56381.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/56381.patch"
        },
        "body": "### What does this PR do?\r\nWhen state.py runs the _run_check function to validate unless/onlyif, the resulting output can include a list as a comment:\r\n```\r\n{'result': True, 'comment': ['unless condition is true'], 'skip_watch': True}\r\n```\r\nThis list was breaking the state output when test=True with retry, which assumed any existing comments would already be strings. This PR add `six.text_type` casting to to string formatting to support other input types.\r\n\r\n\r\n### What issues does this PR fix or reference?\r\n#54501\r\n\r\n### Previous Behavior\r\nRunning a state with included unless and retry with `test=True` would result in crash:\r\n```\r\n Traceback (most recent call last):\r\n         File \"/root/gits/salt/tests/unit/test_state.py\", line 265, in test_verify_retry_parsing\r\n           self.assertDictContainsSubset(expected_result, state_obj.call(low_data))\r\n         File \"/root/gits/salt/salt/utils/decorators/state.py\", line 30, in _func\r\n           result = func(*args, **kwargs)\r\n         File \"/root/gits/salt/salt/state.py\", line 2084, in call\r\n           low['retry']['splay'])])\r\n       TypeError: sequence item 0: expected str instance, list found\r\n```\r\n\r\n### New Behavior\r\nOutput is rendered as expected:\r\n```\r\n['unless condition is true']  The state would be retried every 5 'seconds (with a splay of up to 0 seconds) a maximum of 5 times or until a result of True is returned\r\n```\r\n\r\n### Tests written?\r\nYes\r\n\r\n### Commits signed with GPG?\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/55963",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/55963/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/55963/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/55963/events",
        "html_url": "https://github.com/saltstack/salt/pull/55963",
        "id": 554850076,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY2OTMwMDU2",
        "number": 55963,
        "title": "Mock kubernetes when building the documentation",
        "user": {
            "login": "bdrung",
            "id": 239485,
            "node_id": "MDQ6VXNlcjIzOTQ4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/239485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bdrung",
            "html_url": "https://github.com/bdrung",
            "followers_url": "https://api.github.com/users/bdrung/followers",
            "following_url": "https://api.github.com/users/bdrung/following{/other_user}",
            "gists_url": "https://api.github.com/users/bdrung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bdrung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bdrung/subscriptions",
            "organizations_url": "https://api.github.com/users/bdrung/orgs",
            "repos_url": "https://api.github.com/users/bdrung/repos",
            "events_url": "https://api.github.com/users/bdrung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bdrung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1113112713,
                "node_id": "MDU6TGFiZWwxMTEzMTEyNzEz",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRelease-Sodium",
                "name": "ZRelease-Sodium",
                "color": "fbca04",
                "default": false,
                "description": "retired label"
            },
            {
                "id": 1841322834,
                "node_id": "MDU6TGFiZWwxODQxMzIyODM0",
                "url": "https://api.github.com/repos/saltstack/salt/labels/doc-correction",
                "name": "doc-correction",
                "color": "5319e7",
                "default": false,
                "description": "docu page has an error or deadlink"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-01-24T17:01:19Z",
        "updated_at": "2020-05-19T20:35:12Z",
        "closed_at": "2020-04-22T19:08:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/55963",
            "html_url": "https://github.com/saltstack/salt/pull/55963",
            "diff_url": "https://github.com/saltstack/salt/pull/55963.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/55963.patch"
        },
        "body": "Importing kubernetesmod fails, when building the documentation:\r\n\r\n```\r\ndoc/ref/modules/all/index.rst:20: WARNING: failed to import kubernetesmod\r\ndoc/ref/modules/all/index.rst:20: WARNING: toctree references unknown document 'ref/modules/all/kubernetesmod'\r\nWARNING: autodoc: failed to import module 'kubernetesmod' from module\r\n'salt.modules'; the following exception was raised:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/sphinx/ext/autodoc/importer.py\", line 154, in import_module\r\n    __import__(modname)\r\n  File \"salt/modules/kubernetesmod.py\", line 71, in <module>\r\n    import kubernetes  # pylint: disable=import-self\r\n  File \"/usr/lib/python3/dist-packages/kubernetes/__init__.py\", line 20, in <module>\r\n    import kubernetes.config\r\n  File \"/usr/lib/python3/dist-packages/kubernetes/config/__init__.py\", line 17, in <module>\r\n    from .kube_config import (list_kube_config_contexts, load_kube_config,\r\n  File \"/usr/lib/python3/dist-packages/kubernetes/config/kube_config.py\", line 27, in <module>\r\n    from requests_oauthlib import OAuth2Session\r\n  File \"/usr/lib/python3/dist-packages/requests_oauthlib/__init__.py\", line 11, in <module>\r\n    if requests.__version__ < '2.0.0':\r\nTypeError: '<' not supported between instances of 'module' and 'str'\r\n```\r\n\r\nTherefore also mock `kubernetes` and `kubernetes.config`.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/56094",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/56094/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/56094/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/56094/events",
        "html_url": "https://github.com/saltstack/salt/pull/56094",
        "id": 561955072,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcyNjY4NTI1",
        "number": 56094,
        "title": "Fix type error in TornadoImporter",
        "user": {
            "login": "dwoz",
            "id": 1527763,
            "node_id": "MDQ6VXNlcjE1Mjc3NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1527763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwoz",
            "html_url": "https://github.com/dwoz",
            "followers_url": "https://api.github.com/users/dwoz/followers",
            "following_url": "https://api.github.com/users/dwoz/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwoz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwoz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwoz/subscriptions",
            "organizations_url": "https://api.github.com/users/dwoz/orgs",
            "repos_url": "https://api.github.com/users/dwoz/repos",
            "events_url": "https://api.github.com/users/dwoz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwoz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1860527460,
                "node_id": "MDU6TGFiZWwxODYwNTI3NDYw",
                "url": "https://api.github.com/repos/saltstack/salt/labels/v3000.1",
                "name": "v3000.1",
                "color": "350D48",
                "default": false,
                "description": "vulnerable version"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-08T02:12:37Z",
        "updated_at": "2020-03-13T00:32:10Z",
        "closed_at": "2020-03-10T01:39:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/56094",
            "html_url": "https://github.com/saltstack/salt/pull/56094",
            "diff_url": "https://github.com/saltstack/salt/pull/56094.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/56094.patch"
        },
        "body": "### What does this PR do?\r\n\r\nFixes tracebacks in salt loader because the find_module method of TornadoImporter required 3 arguments, path should default to None.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/kitchen/testing/salt/loader.py\", line 1607, in _load_module\r\n    mod = imp.load_module(mod_namespace, fn_, fpath, desc)\r\n  File \"/tmp/kitchen/testing/salt/grains/esxi.py\", line 16, in <module>\r\n    import salt.modules.vsphere\r\n  File \"/tmp/kitchen/testing/salt/modules/vsphere.py\", line 222, in <module>\r\n    import jsonschema\r\n  File \"/tmp/kitchen/testing/.nox/runtests-parametrized-2-7-coverage-true-crypto-none-transport-zeromq/lib/python2.7/site-packages/jsonschema/__init__.py\", line 18, in <module>\r\n    from jsonschema.validators import (\r\n  File \"/tmp/kitchen/testing/.nox/runtests-parametrized-2-7-coverage-true-crypto-none-transport-zeromq/lib/python2.7/site-packages/jsonschema/validators.py\", line 170, in <module>\r\n    meta_schema=_utils.load_schema(\"draft3\"),\r\n  File \"/tmp/kitchen/testing/.nox/runtests-parametrized-2-7-coverage-true-crypto-none-transport-zeromq/lib/python2.7/site-packages/jsonschema/_utils.py\", line 57, in load_schema\r\n    data = pkgutil.get_data('jsonschema', \"schemas/{0}.json\".format(name))\r\n  File \"/usr/lib64/python2.7/pkgutil.py\", line 578, in get_data\r\n    loader = get_loader(package)\r\n  File \"/usr/lib64/python2.7/pkgutil.py\", line 464, in get_loader\r\n    return find_loader(fullname)\r\n  File \"/usr/lib64/python2.7/pkgutil.py\", line 475, in find_loader\r\n    loader = importer.find_module(fullname)\r\nTypeError: find_module() takes exactly 3 arguments (2 given)\r\n```\r\n\r\n### What issues does this PR fix or reference?\r\n\r\n#56063 \r\n\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/49567",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/49567/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/49567/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/49567/events",
        "html_url": "https://github.com/saltstack/salt/pull/49567",
        "id": 358190632,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0MDIzMzU5",
        "number": 49567,
        "title": "saltnado: don't use gather_job_timeout as a timeout signal in job_not_running",
        "user": {
            "login": "mattp-",
            "id": 44374,
            "node_id": "MDQ6VXNlcjQ0Mzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/44374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattp-",
            "html_url": "https://github.com/mattp-",
            "followers_url": "https://api.github.com/users/mattp-/followers",
            "following_url": "https://api.github.com/users/mattp-/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattp-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattp-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattp-/subscriptions",
            "organizations_url": "https://api.github.com/users/mattp-/orgs",
            "repos_url": "https://api.github.com/users/mattp-/repos",
            "events_url": "https://api.github.com/users/mattp-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattp-/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1621188968,
                "node_id": "MDU6TGFiZWwxNjIxMTg4OTY4",
                "url": "https://api.github.com/repos/saltstack/salt/labels/has%20master-port",
                "name": "has master-port",
                "color": "bb74e8",
                "default": false,
                "description": "port to master has been created"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-09-07T19:49:06Z",
        "updated_at": "2020-03-30T15:06:22Z",
        "closed_at": "2018-09-16T23:17:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/49567",
            "html_url": "https://github.com/saltstack/salt/pull/49567",
            "diff_url": "https://github.com/saltstack/salt/pull/49567.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/49567.patch"
        },
        "body": "because the future was generated from tornado.gen.sleep, its eventual timer\r\nstill fires regardless of if the future is manually set with set_result. When\r\nset_result is called twice (once manually by saltnado, once by tornado call_later),\r\na stacktrace like so is thrown:\r\n\r\n```\r\n[ERROR   ] Uncaught exception POST / (::1)\r\nTraceback (most recent call last):\r\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/web.py\", line 1369, in _stack_context_handle_exception\r\n    raise_exc_info((type, value, traceback))\r\n  File \"<string>\", line 3, in raise_exc_info\r\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/stack_context.py\", line 314, in wrapped\r\n    ret = fn(*args, **kwargs)\r\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/gen.py\", line 771, in later\r\n    f.set_result(None)\r\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/concurrent.py\", line 254, in set_result\r\n    self._set_done()\r\n  File \"/home/mphillips81/.pyenv/versions/3.6.5/lib/python3.6/site-packages/tornado/concurrent.py\", line 298, in _set_done\r\n    for cb in self._callbacks:\r\nTypeError: 'NoneType' object is not iterable\r\n\r\n```\r\nThis patch attempts to fix that. @jacksontj would appreciate a review I'm not hugely familiar with the saltnado/tornado code here.\r\n\r\n### What does this PR do?\r\nfixes a stack thrown after every call.\r\n\r\nfixes https://github.com/saltstack/salt/issues/49572\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/45062",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/45062/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/45062/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/45062/events",
        "html_url": "https://github.com/saltstack/salt/pull/45062",
        "id": 282851167,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTU4ODkzMDI4",
        "number": 45062,
        "title": "Fix cherrypy with py3",
        "user": {
            "login": "mcalmer",
            "id": 1038917,
            "node_id": "MDQ6VXNlcjEwMzg5MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1038917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcalmer",
            "html_url": "https://github.com/mcalmer",
            "followers_url": "https://api.github.com/users/mcalmer/followers",
            "following_url": "https://api.github.com/users/mcalmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcalmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcalmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcalmer/subscriptions",
            "organizations_url": "https://api.github.com/users/mcalmer/orgs",
            "repos_url": "https://api.github.com/users/mcalmer/repos",
            "events_url": "https://api.github.com/users/mcalmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcalmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-12-18T11:44:26Z",
        "updated_at": "2020-03-01T15:18:50Z",
        "closed_at": "2017-12-20T11:48:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/45062",
            "html_url": "https://github.com/saltstack/salt/pull/45062",
            "diff_url": "https://github.com/saltstack/salt/pull/45062.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/45062.patch"
        },
        "body": "### What does this PR do?\r\n\r\nFix salt-api to work with python3\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nFixes https://github.com/saltstack/salt/issues/43919 \"Error B\"\r\n\r\n### Previous Behavior\r\nJust a login result into a traceback:\r\n\r\n> curl -sSk http://localhost:9080/login -H 'Accept: application/x-yaml' -d username=admin -d eauth=auto\r\n\r\n```\r\n2017-12-18 11:56:49,586 [cherrypy.error.140069956313496][ERROR   ][15380] [18/Dec/2017:11:56:49] HTTP \r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/cherrypy/_cprequest.py\", line 663, in respond\r\n    self.body.process()\r\n  File \"/usr/lib/python3.6/site-packages/cherrypy/_cpreqbody.py\", line 982, in process\r\n    super(RequestBody, self).process()\r\n  File \"/usr/lib/python3.6/site-packages/cherrypy/_cpreqbody.py\", line 561, in process\r\n    proc(self)\r\n  File \"/usr/lib/python3.6/site-packages/salt/netapi/rest_cherrypy/app.py\", line 836, in urlencoded_processor\r\n    entity.fp.read(fp_out=contents)\r\n  File \"/usr/lib/python3.6/site-packages/cherrypy/_cpreqbody.py\", line 841, in read\r\n    fp_out.write(data)\r\nTypeError: string argument expected, got 'bytes'\r\n```\r\n\r\n### New Behavior\r\n\r\nIt does not crash anymore\r\n\r\n### Tests written?\r\n\r\nYes - adapted unit tests to reflect reality. Unit tests now uses six.BytesIO to return data for cherrypy.\r\nBytesIO maps to StringIO on case of python2.\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/52980",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/52980/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/52980/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/52980/events",
        "html_url": "https://github.com/saltstack/salt/pull/52980",
        "id": 443129523,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc4MDY5NDQy",
        "number": 52980,
        "title": "logstash_mod makePickle doesn't convert to bytes",
        "user": {
            "login": "kiemlicz",
            "id": 7331452,
            "node_id": "MDQ6VXNlcjczMzE0NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7331452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kiemlicz",
            "html_url": "https://github.com/kiemlicz",
            "followers_url": "https://api.github.com/users/kiemlicz/followers",
            "following_url": "https://api.github.com/users/kiemlicz/following{/other_user}",
            "gists_url": "https://api.github.com/users/kiemlicz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kiemlicz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kiemlicz/subscriptions",
            "organizations_url": "https://api.github.com/users/kiemlicz/orgs",
            "repos_url": "https://api.github.com/users/kiemlicz/repos",
            "events_url": "https://api.github.com/users/kiemlicz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kiemlicz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1411793392,
                "node_id": "MDU6TGFiZWwxNDExNzkzMzky",
                "url": "https://api.github.com/repos/saltstack/salt/labels/Reviewers-Assigned",
                "name": "Reviewers-Assigned",
                "color": "a459cc",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 26,
        "created_at": "2019-05-12T17:49:18Z",
        "updated_at": "2020-01-16T20:30:17Z",
        "closed_at": "2020-01-16T20:30:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/52980",
            "html_url": "https://github.com/saltstack/salt/pull/52980",
            "diff_url": "https://github.com/saltstack/salt/pull/52980.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/52980.patch"
        },
        "body": "### What does this PR do?\r\nAdds missing `to_bytes` conversion in log\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/issues/51123\r\n\r\n### Previous Behavior\r\n```\r\n--- Logging error ---\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/logging/handlers.py\", line 634, in emit\r\n    self.send(s)\r\n  File \"/usr/lib/python3.6/logging/handlers.py\", line 692, in send\r\n    self.sock.sendto(s, self.address)\r\nTypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\n### New Behavior\r\nNo stacktrace, message sent to logstash\r\n\r\n### Tests written?\r\nNo\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/54954",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/54954/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/54954/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/54954/events",
        "html_url": "https://github.com/saltstack/salt/pull/54954",
        "id": 505803258,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzI3MTYwMTIx",
        "number": 54954,
        "title": "(Backport 50125, 50671, 51973, 52412, 52744, 52844, 54024, 54379) Add root and no_recommends parameters in the public interface for Zypper and RPM (lowpkg)",
        "user": {
            "login": "aplanas",
            "id": 645701,
            "node_id": "MDQ6VXNlcjY0NTcwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/645701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aplanas",
            "html_url": "https://github.com/aplanas",
            "followers_url": "https://api.github.com/users/aplanas/followers",
            "following_url": "https://api.github.com/users/aplanas/following{/other_user}",
            "gists_url": "https://api.github.com/users/aplanas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aplanas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aplanas/subscriptions",
            "organizations_url": "https://api.github.com/users/aplanas/orgs",
            "repos_url": "https://api.github.com/users/aplanas/repos",
            "events_url": "https://api.github.com/users/aplanas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aplanas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1113112713,
                "node_id": "MDU6TGFiZWwxMTEzMTEyNzEz",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRelease-Sodium",
                "name": "ZRelease-Sodium",
                "color": "fbca04",
                "default": false,
                "description": "retired label"
            },
            {
                "id": 1577756857,
                "node_id": "MDU6TGFiZWwxNTc3NzU2ODU3",
                "url": "https://api.github.com/repos/saltstack/salt/labels/master-port",
                "name": "master-port",
                "color": "e99695",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "s0undt3ch",
            "id": 300048,
            "node_id": "MDQ6VXNlcjMwMDA0OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/s0undt3ch",
            "html_url": "https://github.com/s0undt3ch",
            "followers_url": "https://api.github.com/users/s0undt3ch/followers",
            "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
            "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
            "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
            "repos_url": "https://api.github.com/users/s0undt3ch/repos",
            "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "s0undt3ch",
                "id": 300048,
                "node_id": "MDQ6VXNlcjMwMDA0OA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/s0undt3ch",
                "html_url": "https://github.com/s0undt3ch",
                "followers_url": "https://api.github.com/users/s0undt3ch/followers",
                "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
                "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
                "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
                "repos_url": "https://api.github.com/users/s0undt3ch/repos",
                "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-10-11T11:44:28Z",
        "updated_at": "2020-05-20T18:00:46Z",
        "closed_at": "2020-05-19T02:58:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/54954",
            "html_url": "https://github.com/saltstack/salt/pull/54954",
            "diff_url": "https://github.com/saltstack/salt/pull/54954.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/54954.patch"
        },
        "body": "### What does this PR do?\r\n\r\n(From #50125)\r\nProvides a new root parameter in the public interfaces for rpm and zypper\r\n\r\n(From #50671)\r\nIn _get_configured_repos if the directory where the repositories\r\nare stored is not found, an log error is emitted.\r\n\r\nMost of the times this is indeed an indication of an error, but is\r\nnot always the case. For example, when we are creating a chroot\r\nenvironment we do not need to create this directory, as is generated\r\nby zypper when a new repository is added.\r\n\r\nThis patch demote the error to a warning, as this directory will\r\nbe present eventually is most situations after the first call to\r\nzypper.\r\n\r\n(From #51973)\r\nThe virtual module 'pkg' is heavily used by other states, like the\r\n'pkg' state, so differences in the signature of public functions\r\ncan generate errors like:\r\n\r\nTypeError: xxx() got an unexpected keyword argument 'yyy'\r\n\r\nThe fix is to add the parameter 'yyy' into all versions of the\r\nfunction 'xxx()' in all the 'pkg' virtual modules, but this\r\napproach is cumbersome and not very resilient, as any refactoring\r\non the public interface or in the pkg state module will break\r\nagain the already agreed contract.\r\n\r\nThis patch append **kwarg in most of the public methods on virtual\r\nmodule pkg where it is missing, fixing the described issue and\r\nmaking more easy the refactoring of the code.\r\n\r\nAlso do the same for 'lowpkg'\r\n\r\n(From #52412)\r\n\r\nIn the openSUSE family we have several kind of packages, like\r\npatterns, patches and products. Currently we can use the `pkg`\r\nstate and the `pkg` module to install them, but as they are not\r\nlisted under any `rpm` command, the module and the state will\r\nreport a Fail.\r\n\r\nThis patch updates the zypperpkg `list_pkgs` to explicitly include\r\nthis kind of objects under the list, so the rest of the commands\r\nfrom the same execution module (install, update, etc) will report\r\nthe correct restul at the end.\r\n\r\nBecause the way that the `installed` state from `pkg` is designed,\r\nwe cannot be implicit about the kind of objects that we are\r\ninstalling, so we need to indicate in the SLS that at least one\r\nobject is a pattern or a patch:\r\n\r\n```yaml\r\n  example:\r\n    pkg.installed:\r\n      - name: pattern:SUSE-MicroOS\r\n      - includes: [pattern]\r\n```\r\n\r\nThe `includes` parameter will be passed to the `list_pkgs` from\r\nthe zypper execution module, that will return the package list\r\nusing RPM (for packages) and zypper (for patterns). This more\r\ncomplete report will be used in `pkg.installed` to identify the\r\ncorrect installation of the new object.\r\n\r\nCloses #52402\r\n\r\n(From #52744)\r\n\r\nSome patters are non-visible, and cannot be detected via\r\n\r\n   zypper se -t pattern\r\n\r\nunless we know the name.\r\n\r\nWhen we are listing all installed patterns, we still do not know\r\nthe names of the patterns, so we need to use a different approach.\r\n\r\nThis patch use `rpm -q --provides --whatprovides` search to detect\r\nthe non-visible patters, and complete the result for\r\n`list_installed_patterns`.\r\n\r\n(From #52844)\r\n\r\nThe `rpm -q --provides --whatprovides 'pattern()' command return\r\nerror code 1 when any pattern is present. This patch ignore the\r\nreturn error code, as a not found pattern is not an error.\r\n\r\n(From #54024)\r\n\r\nThe cache from pkg.list_pkgs for the zypper installer is too aggresive.\r\nSome parameters will deliver different package lists, like root and\r\nincludes. The current cache do not take those parameters into\r\nconsideration, so the next time that this function is called, the last\r\nlist of packages will be returned, without checking if the current\r\nparameters match the old one.\r\n\r\nThis patch create a different cache key for each parameter combination,\r\nso the cached data will be separated too.\r\n\r\n(From #54379)\r\n\r\nWhen a patch is installed via advisory_ids, we do not want to change the\r\nbehavior of list_pkgs, via the includes field.\r\n\r\nCurrently, if a patch is installed via advisory_ids (state\r\npkg.patch_installed), it will call zypperpkg.install with this parameter\r\ninside kwargs. This parameter is parsed by pkg_resource.parse_targets,\r\nand the prefix `patch:` will be added very early, just before taking the\r\nlist of the current packages.\r\n\r\nThis last step will change the behavior of list_pkgs, as all the other\r\npatches will be listed.\r\n\r\nThis sound OK except when we want to maintain the old behavior, when\r\npatches are not listed in the `install` function by default.\r\n\r\nThis patch will add the `patch:` prefix in the list of targets later,\r\nonce we have the list of packages, restoring the old behavior.\r\n\r\nNote that we can still install a patch as a normal package, if we add\r\nthe prefix in the name before calling `install`, and we do not use the\r\n`advisory_ids` field.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nNew feature\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n(backport #50125, #50671, #51973, #52412, #52744, #52844 and #54024, already merged in develop)\r\n\r\n(backport #54379 from develop, under review)",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/42002",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/42002/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/42002/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/42002/events",
        "html_url": "https://github.com/saltstack/salt/pull/42002",
        "id": 239411447,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTI4MTAxNDY3",
        "number": 42002,
        "title": "Fix serialize error when requesting a node",
        "user": {
            "login": "mcalmer",
            "id": 1038917,
            "node_id": "MDQ6VXNlcjEwMzg5MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1038917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcalmer",
            "html_url": "https://github.com/mcalmer",
            "followers_url": "https://api.github.com/users/mcalmer/followers",
            "following_url": "https://api.github.com/users/mcalmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcalmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcalmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcalmer/subscriptions",
            "organizations_url": "https://api.github.com/users/mcalmer/orgs",
            "repos_url": "https://api.github.com/users/mcalmer/repos",
            "events_url": "https://api.github.com/users/mcalmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcalmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-06-29T09:04:18Z",
        "updated_at": "2020-03-01T15:17:56Z",
        "closed_at": "2017-06-29T16:29:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/42002",
            "html_url": "https://github.com/saltstack/salt/pull/42002",
            "diff_url": "https://github.com/saltstack/salt/pull/42002.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/42002.patch"
        },
        "body": "### What does this PR do?\r\n\r\nFix a serialize error when requesting info for a node\r\n\r\n### Previous Behavior\r\n\r\n    salt '<id>' kubernetes.node name=<name>\r\n\r\ndid not return. In the minion log you found:\r\n\r\n````\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/site-packages/salt/utils/process.py\", line 647, in _run\r\n    return self._original_run()\r\n  File \"/usr/lib64/python2.7/multiprocessing/process.py\", line 114, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/salt/minion.py\", line 1377, in _target\r\n    Minion._thread_return(minion_instance, opts, data)\r\n  File \"/usr/lib/python2.7/site-packages/salt/minion.py\", line 1533, in _thread_return\r\n    timeout=minion_instance._return_retry_timer()\r\n  File \"/usr/lib/python2.7/site-packages/salt/minion.py\", line 1708, in _return_pub\r\n    ret_val = self._send_req_sync(load, timeout=timeout)\r\n  File \"/usr/lib/python2.7/site-packages/salt/minion.py\", line 1223, in _send_req_sync\r\n    return channel.send(load, timeout=timeout)\r\n  File \"/usr/lib/python2.7/site-packages/salt/utils/async.py\", line 75, in wrap\r\n    ret = self._block_future(ret)\r\n  File \"/usr/lib/python2.7/site-packages/salt/utils/async.py\", line 85, in _block_future\r\n    return future.result()\r\n  File \"/usr/lib64/python2.7/site-packages/tornado/concurrent.py\", line 214, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"/usr/lib64/python2.7/site-packages/tornado/gen.py\", line 876, in run\r\n    yielded = self.gen.throw(*exc_info)\r\n  File \"/usr/lib/python2.7/site-packages/salt/transport/zeromq.py\", line 280, in send\r\n    ret = yield self._crypted_transfer(load, tries=tries, timeout=timeout, raw=raw)\r\n  File \"/usr/lib64/python2.7/site-packages/tornado/gen.py\", line 870, in run\r\n    value = future.result()\r\n  File \"/usr/lib64/python2.7/site-packages/tornado/concurrent.py\", line 214, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"/usr/lib64/python2.7/site-packages/tornado/gen.py\", line 876, in run\r\n    yielded = self.gen.throw(*exc_info)\r\n  File \"/usr/lib/python2.7/site-packages/salt/transport/zeromq.py\", line 248, in _crypted_transfer\r\n    ret = yield _do_transfer()\r\n  File \"/usr/lib64/python2.7/site-packages/tornado/gen.py\", line 870, in run\r\n    value = future.result()\r\n  File \"/usr/lib64/python2.7/site-packages/tornado/concurrent.py\", line 214, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"/usr/lib64/python2.7/site-packages/tornado/gen.py\", line 230, in wrapper\r\n    yielded = next(result)\r\n  File \"/usr/lib/python2.7/site-packages/salt/transport/zeromq.py\", line 230, in _do_transfer\r\n    self._package_load(self.auth.crypticle.dumps(load)),\r\n  File \"/usr/lib/python2.7/site-packages/salt/crypt.py\", line 1267, in dumps\r\n    return self.encrypt(self.PICKLE_PAD + self.serial.dumps(obj))\r\n  File \"/usr/lib/python2.7/site-packages/salt/payload.py\", line 250, in dumps\r\n    return msgpack.dumps(datetime_encoder(msg), use_bin_type=use_bin_type)\r\n  File \"/usr/lib64/python2.7/site-packages/msgpack/__init__.py\", line 47, in packb\r\n    return Packer(**kwargs).pack(o)\r\n  File \"msgpack/_packer.pyx\", line 223, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:223)\r\n  File \"msgpack/_packer.pyx\", line 225, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:225)\r\n  File \"msgpack/_packer.pyx\", line 184, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:184)\r\n  File \"msgpack/_packer.pyx\", line 220, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:220)\r\nTypeError: can't serialize \r\n```\r\n\r\n### New Behavior\r\n\r\nWe get the result\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/54240",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/54240/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/54240/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/54240/events",
        "html_url": "https://github.com/saltstack/salt/pull/54240",
        "id": 481784740,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzA4MjE3NzIz",
        "number": 54240,
        "title": "Fix TypeError python3 in get_image_id ec2 cloud",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-16T21:02:22Z",
        "updated_at": "2019-08-20T20:10:01Z",
        "closed_at": "2019-08-20T20:10:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/54240",
            "html_url": "https://github.com/saltstack/salt/pull/54240",
            "diff_url": "https://github.com/saltstack/salt/pull/54240.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/54240.patch"
        },
        "body": "### What does this PR do?\r\nFixes issue when using an aws filter for the image like so:\r\n\r\n```\r\namazon:\r\n  provider: amazon\r\n  image: 'salt/test/*'\r\n```\r\n\r\nWhen you try to build the vm with `salt-cloud -p profile_name ch3ll-vm` you see this error on python3:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/kitchen/testing/salt/cloud/cli.py\", line 281, in run\r\n    self.config.get('names')\r\n  File \"/tmp/kitchen/testing/salt/cloud/__init__.py\", line 1432, in run_profile\r\n    ret[name] = self.create(vm_)\r\n  File \"/tmp/kitchen/testing/salt/cloud/__init__.py\", line 1253, in create\r\n    output = self.clouds[func](vm_)\r\n  File \"/tmp/kitchen/testing/salt/cloud/clouds/ec2.py\", line 2634, in create\r\n    data, vm_ = request_instance(vm_, location)\r\n  File \"/tmp/kitchen/testing/salt/cloud/clouds/ec2.py\", line 1803, in request_instance\r\n    image_id = get_imageid(vm_)\r\n  File \"/tmp/kitchen/testing/salt/cloud/clouds/ec2.py\", line 1231, in get_imageid\r\n    lambda i, j: salt.utils.compat.cmp(_t(i), _t(j))\r\nTypeError: must use keyword argument for key function\r\n```\r\n\r\nThis is because sorted requires the key argument in python3. The functools library has the ability to make this python2/python3 compatible included in this PR.\r\n\r\n### Previous Behavior\r\nCould not create a VM with an image using an AWS filter.\r\n\r\n### New Behavior\r\nCreate a VM with an image using an AWS filter.\r\n\r\n### Tests written?\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/56032",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/56032/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/56032/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/56032/events",
        "html_url": "https://github.com/saltstack/salt/pull/56032",
        "id": 557675721,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5MjI0MTQz",
        "number": 56032,
        "title": "Fix issues with setuptools in conjunction with spawn",
        "user": {
            "login": "dwoz",
            "id": 1527763,
            "node_id": "MDQ6VXNlcjE1Mjc3NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1527763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dwoz",
            "html_url": "https://github.com/dwoz",
            "followers_url": "https://api.github.com/users/dwoz/followers",
            "following_url": "https://api.github.com/users/dwoz/following{/other_user}",
            "gists_url": "https://api.github.com/users/dwoz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dwoz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dwoz/subscriptions",
            "organizations_url": "https://api.github.com/users/dwoz/orgs",
            "repos_url": "https://api.github.com/users/dwoz/repos",
            "events_url": "https://api.github.com/users/dwoz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dwoz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-30T18:34:11Z",
        "updated_at": "2020-01-30T19:10:06Z",
        "closed_at": "2020-01-30T19:10:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/56032",
            "html_url": "https://github.com/saltstack/salt/pull/56032",
            "diff_url": "https://github.com/saltstack/salt/pull/56032.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/56032.patch"
        },
        "body": "### What does this PR do?\r\n\r\nThe switch to setuptools caused the following tracebacks on windows when Salt is installed via the installer. This change addresses the issue.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\salt\\bin\\Scripts\\salt-minion\", line 4, in <module>\r\n    __import__('pkg_resources').run_script('salt==3000', 'salt-minion')\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\pkg_resources\\__init__.py\", line 750, in run_script\r\n    self.require(requires)[0].run_script(script_name, ns)\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\pkg_resources\\__init__.py\", line 1527, in run_script\r\n    exec(code, namespace, namespace)\r\n  File \"c:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\EGG-INFO\\scripts\\salt-minion\", line 26, in <module>\r\n    salt_minion()\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\salt\\scripts.py\", line 191, in salt_minion\r\n    minion.start()\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\salt\\cli\\daemons.py\", line 323, in start\r\n    super(Minion, self).start()\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\salt\\utils\\parsers.py\", line 1073, in start\r\n    self.prepare()\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\salt\\cli\\daemons.py\", line 241, in prepare\r\n    super(Minion, self).prepare()\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\salt\\utils\\parsers.py\", line 1070, in prepare\r\n    self.parse_args()\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\salt\\utils\\parsers.py\", line 238, in parse_args\r\n    mixin_after_parsed_func, traceback.format_exc(err)\r\n  File \"C:\\salt\\bin\\lib\\traceback.py\", line 163, in format_exc\r\n    return \"\".join(format_exception(*sys.exc_info(), limit=limit, chain=chain))\r\n  File \"C:\\salt\\bin\\lib\\traceback.py\", line 117, in format_exception\r\n    type(value), value, tb, limit=limit).format(chain=chain))\r\n  File \"C:\\salt\\bin\\lib\\traceback.py\", line 474, in __init__\r\n    capture_locals=capture_locals)\r\n  File \"C:\\salt\\bin\\lib\\traceback.py\", line 332, in extract\r\n    if limit >= 0:\r\nTypeError: unorderable types: AttributeError() >= int()\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\salt\\utils\\parsers.py\", line 233, in parse_args\r\n    mixin_after_parsed_func(self)\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\salt\\utils\\parsers.py\", line 881, in _setup_mp_logging_listener\r\n    self._get_mp_logging_listener_queue()\r\n  File \"C:\\salt\\bin\\lib\\site-packages\\salt-3000-py3.5.egg\\salt\\log\\setup.py\", line 558, in setup_multiprocessing_logging_listener\r\n    __MP_LOGGING_QUEUE_PROCESS.start()\r\n  File \"C:\\salt\\bin\\lib\\multiprocessing\\process.py\", line 105, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\salt\\bin\\lib\\multiprocessing\\context.py\", line 212, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"C:\\salt\\bin\\lib\\multiprocessing\\context.py\", line 313, in _Popen\r\n    return Popen(process_obj)\r\n  File \"C:\\salt\\bin\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"C:\\salt\\bin\\lib\\multiprocessing\\spawn.py\", line 173, in get_preparation_data\r\n    main_mod_name = getattr(main_module.__spec__, \"name\", None)\r\nAttributeError: module '__main__' has no attribute '__spec__'\r\n```\r\n\r\nNote: We sourced this from https://docs.celeryproject.org/en/3.1/_modules/celery/bin/celery.html\r\n\r\n### Tests written?\r\n\r\nNo - :( This should be covered by testing our artifacts which we currently do manually. Though we are moving towards a day when it will be automated.\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/54785",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/54785/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/54785/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/54785/events",
        "html_url": "https://github.com/saltstack/salt/pull/54785",
        "id": 499145300,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzIxOTMxNjQ4",
        "number": 54785,
        "title": "Fix state.show_states when sls file missing in top file",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-09-26T22:28:35Z",
        "updated_at": "2019-09-30T00:00:35Z",
        "closed_at": "2019-09-30T00:00:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/54785",
            "html_url": "https://github.com/saltstack/salt/pull/54785",
            "diff_url": "https://github.com/saltstack/salt/pull/54785.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/54785.patch"
        },
        "body": "### What does this PR do?\r\nWhen a sls file is defined in a top.sls file that is missing a TypeError was raised when using `state.show_states`. This PR ensures we do not stacktrace and handle this situation\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/issues/54758\r\n\r\n### Previous Behavior\r\n\r\n```\r\nPassed invalid arguments: string indices must be integers.\r\n\r\nUsage:\r\n\r\n    Returns the list of states that will be applied on highstate.\r\n\r\n    CLI Example:\r\n\r\n    .. code-block:: bash\r\n\r\n        salt '*' state.show_states\r\n\r\n    .. versionadded:: 2019.2.0\r\n```\r\n\r\n### New Behavior\r\n\r\n```\r\nlocal:\r\n       - No matching sls found for 'cloud' in env 'base'\r\n```\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/50004",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/50004/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/50004/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/50004/events",
        "html_url": "https://github.com/saltstack/salt/pull/50004",
        "id": 369161166,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjIyMTY5Nzc2",
        "number": 50004,
        "title": "https://github.com/saltstack/salt/issues/49883",
        "user": {
            "login": "kiemlicz",
            "id": 7331452,
            "node_id": "MDQ6VXNlcjczMzE0NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7331452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kiemlicz",
            "html_url": "https://github.com/kiemlicz",
            "followers_url": "https://api.github.com/users/kiemlicz/followers",
            "following_url": "https://api.github.com/users/kiemlicz/following{/other_user}",
            "gists_url": "https://api.github.com/users/kiemlicz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kiemlicz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kiemlicz/subscriptions",
            "organizations_url": "https://api.github.com/users/kiemlicz/orgs",
            "repos_url": "https://api.github.com/users/kiemlicz/repos",
            "events_url": "https://api.github.com/users/kiemlicz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kiemlicz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2018-10-11T14:54:29Z",
        "updated_at": "2019-12-02T17:19:31Z",
        "closed_at": "2018-10-12T00:53:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/50004",
            "html_url": "https://github.com/saltstack/salt/pull/50004",
            "diff_url": "https://github.com/saltstack/salt/pull/50004.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/50004.patch"
        },
        "body": "Using named argument in `PublicIPAddress` azure network_models API call\r\n\r\n### What does this PR do?\r\nFixes azure network api usage when creating public IP\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/issues/49883\r\n\r\n### Previous Behavior\r\n```\r\n[ERROR   ] There was a profile error: __init__() takes exactly 1 argument (2 given)\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/salt/cloud/cli.py\", line 281, in run\r\n    self.config.get('names')\r\n  File \"/usr/lib/python2.7/dist-packages/salt/cloud/__init__.py\", line 1454, in run_profile\r\n    ret[name] = self.create(vm_)\r\n  File \"/usr/lib/python2.7/dist-packages/salt/cloud/__init__.py\", line 1284, in create\r\n    output = self.clouds[func](vm_)\r\n  File \"/var/cache/salt/master/extmods/clouds/azurearm.py\", line 1418, in create\r\n    vm_request = request_instance(vm_=vm_)\r\n  File \"/var/cache/salt/master/extmods/clouds/azurearm.py\", line 1013, in request_instance\r\n    kwargs=vm_\r\n  File \"/var/cache/salt/master/extmods/clouds/azurearm.py\", line 859, in create_network_interface\r\n    six.text_type(pub_ip_data.id),  # pylint: disable=no-member\r\nTypeError: __init__() takes exactly 1 argument (2 given)\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/51867",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/51867/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/51867/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/51867/events",
        "html_url": "https://github.com/saltstack/salt/pull/51867",
        "id": 415143658,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjU2Njk1MDAx",
        "number": 51867,
        "title": "Decode mysql_version for python3 compatibility",
        "user": {
            "login": "Oloremo",
            "id": 4280480,
            "node_id": "MDQ6VXNlcjQyODA0ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4280480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Oloremo",
            "html_url": "https://github.com/Oloremo",
            "followers_url": "https://api.github.com/users/Oloremo/followers",
            "following_url": "https://api.github.com/users/Oloremo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Oloremo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Oloremo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Oloremo/subscriptions",
            "organizations_url": "https://api.github.com/users/Oloremo/orgs",
            "repos_url": "https://api.github.com/users/Oloremo/repos",
            "events_url": "https://api.github.com/users/Oloremo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Oloremo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-02-27T14:10:43Z",
        "updated_at": "2019-07-06T12:15:12Z",
        "closed_at": "2019-03-05T19:41:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/51867",
            "html_url": "https://github.com/saltstack/salt/pull/51867",
            "diff_url": "https://github.com/saltstack/salt/pull/51867.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/51867.patch"
        },
        "body": "### What does this PR do?\r\nAdds decode to the mysql version fetch so it should work with both Py2 and py3. \r\n\r\n### What issues does this PR fix or reference?\r\nFixes https://github.com/saltstack/salt/issues/51866\r\n\r\n### Previous Behavior\r\n```\r\nTypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\nException with Python 3\r\n\r\n### New Behavior\r\nThe module works with both python3 and python2.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nYes\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/52624",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/52624/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/52624/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/52624/events",
        "html_url": "https://github.com/saltstack/salt/pull/52624",
        "id": 435102509,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjcxOTQzOTA1",
        "number": 52624,
        "title": "fix TypeError: argument of type int is not iterable",
        "user": {
            "login": "tanlingyun2005",
            "id": 28787301,
            "node_id": "MDQ6VXNlcjI4Nzg3MzAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28787301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tanlingyun2005",
            "html_url": "https://github.com/tanlingyun2005",
            "followers_url": "https://api.github.com/users/tanlingyun2005/followers",
            "following_url": "https://api.github.com/users/tanlingyun2005/following{/other_user}",
            "gists_url": "https://api.github.com/users/tanlingyun2005/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tanlingyun2005/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tanlingyun2005/subscriptions",
            "organizations_url": "https://api.github.com/users/tanlingyun2005/orgs",
            "repos_url": "https://api.github.com/users/tanlingyun2005/repos",
            "events_url": "https://api.github.com/users/tanlingyun2005/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tanlingyun2005/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-04-19T08:51:31Z",
        "updated_at": "2019-04-30T03:32:51Z",
        "closed_at": "2019-04-29T13:15:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/52624",
            "html_url": "https://github.com/saltstack/salt/pull/52624",
            "diff_url": "https://github.com/saltstack/salt/pull/52624.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/52624.patch"
        },
        "body": "### What does this PR do?\r\nfix a batch run bug, when batch_safe_size is set to a integer or percentage,  will resulting in \"TypeError: argument of type 'int' is not iterable\"\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/53394",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/53394/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/53394/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/53394/events",
        "html_url": "https://github.com/saltstack/salt/pull/53394",
        "id": 453087595,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg1ODQ4NTgy",
        "number": 53394,
        "title": "Fix traceback when making http query to non-listening host/port and raise_error=False",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-06-06T15:11:26Z",
        "updated_at": "2019-06-10T17:04:26Z",
        "closed_at": "2019-06-10T17:04:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/53394",
            "html_url": "https://github.com/saltstack/salt/pull/53394",
            "diff_url": "https://github.com/saltstack/salt/pull/53394.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/53394.patch"
        },
        "body": "### What does this PR do?\r\n\r\nWhen `salt.utils.http.query()` attempts to query a non-listening host/port and socket errors are suppressed, the response is `None`. This results in a traceback when the code attempts to log the length of the response before and after attempting to decompress it.\r\n\r\nThis PR simply returns without decompressing when the response resolves as `False`.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nN/A\r\n\r\n### Previous Behavior\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/testing/salt/cli/caller.py\", line 237, in call\r\n    ret['return'] = self.minion.executors[fname](self.opts, data, func, args, kwargs)\r\n  File \"/testing/salt/executors/direct_call.py\", line 12, in execute\r\n    return func(*args, **kwargs)\r\n  File \"/testing/salt/modules/http.py\", line 41, in query\r\n    return salt.utils.http.query(url=url, opts=opts, **kwargs)\r\n  File \"/testing/salt/utils/http.py\", line 618, in query\r\n    result_text = __decompressContent(coding, result_text)\r\n  File \"/testing/salt/utils/http.py\", line 108, in __decompressContent\r\n    log.trace(\"Decompressing %s byte content with compression type: %s\", len(pgctnt), coding)\r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n\r\n### New Behavior\r\n\r\nNo traceback, and the return data is:\r\n\r\n```python\r\n{'body': None}\r\n```\r\n\r\n### Tests written?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/52500",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/52500/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/52500/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/52500/events",
        "html_url": "https://github.com/saltstack/salt/pull/52500",
        "id": 432072687,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjY5NjEyNzA1",
        "number": 52500,
        "title": "Fix traceback when invalid source passed to archive.extracted",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-04-11T15:00:38Z",
        "updated_at": "2019-04-11T16:12:24Z",
        "closed_at": "2019-04-11T16:12:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/52500",
            "html_url": "https://github.com/saltstack/salt/pull/52500",
            "diff_url": "https://github.com/saltstack/salt/pull/52500.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/52500.patch"
        },
        "body": "When the source is procedurally generated (e.g. from the result of a\r\nremote execution function call), and that source ends up being an empty\r\nstring or some other invalid value, the call to `file.source_list` will\r\nreturn a path of `None` which will cause a `TypeError` later on when we\r\ntry to run a urlparse on it.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/52710",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/52710/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/52710/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/52710/events",
        "html_url": "https://github.com/saltstack/salt/pull/52710",
        "id": 437694180,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjczOTE0ODQw",
        "number": 52710,
        "title": "Fix complex grain",
        "user": {
            "login": "mickenordin",
            "id": 1281830,
            "node_id": "MDQ6VXNlcjEyODE4MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1281830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mickenordin",
            "html_url": "https://github.com/mickenordin",
            "followers_url": "https://api.github.com/users/mickenordin/followers",
            "following_url": "https://api.github.com/users/mickenordin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mickenordin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mickenordin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mickenordin/subscriptions",
            "organizations_url": "https://api.github.com/users/mickenordin/orgs",
            "repos_url": "https://api.github.com/users/mickenordin/repos",
            "events_url": "https://api.github.com/users/mickenordin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mickenordin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2019-04-26T14:15:16Z",
        "updated_at": "2019-05-09T22:08:24Z",
        "closed_at": "2019-05-09T20:34:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/52710",
            "html_url": "https://github.com/saltstack/salt/pull/52710",
            "diff_url": "https://github.com/saltstack/salt/pull/52710.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/52710.patch"
        },
        "body": "### What does this PR do?\r\nIf a grain is a list of complex objects, grains.py is unable to compare the currently set grain to the potentially new one. Instead it fails with TypeError: unhashable type: 'dict' (might be something else aswell depending on what you are trying to set as a grain). This PR will make it so that a list grain that contains complex objects can be compared via the function make_hashable.    \r\n### What issues does this PR fix or reference?\r\nissue #39875\r\n\r\n### Tests written?\r\n\r\nYes, in tests/unit/states/test_grains.py there is a test called \"test_make_hashable\"\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/51973",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/51973/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/51973/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/51973/events",
        "html_url": "https://github.com/saltstack/salt/pull/51973",
        "id": 417336033,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4MzU0NDQ5",
        "number": 51973,
        "title": "partially unify public functions signature for pkg and lowpkg",
        "user": {
            "login": "aplanas",
            "id": 645701,
            "node_id": "MDQ6VXNlcjY0NTcwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/645701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aplanas",
            "html_url": "https://github.com/aplanas",
            "followers_url": "https://api.github.com/users/aplanas/followers",
            "following_url": "https://api.github.com/users/aplanas/following{/other_user}",
            "gists_url": "https://api.github.com/users/aplanas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aplanas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aplanas/subscriptions",
            "organizations_url": "https://api.github.com/users/aplanas/orgs",
            "repos_url": "https://api.github.com/users/aplanas/repos",
            "events_url": "https://api.github.com/users/aplanas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aplanas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-03-05T14:49:46Z",
        "updated_at": "2019-04-24T08:23:34Z",
        "closed_at": "2019-04-18T18:08:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/51973",
            "html_url": "https://github.com/saltstack/salt/pull/51973",
            "diff_url": "https://github.com/saltstack/salt/pull/51973.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/51973.patch"
        },
        "body": "### What does this PR do?\r\n \r\nThe virtual module 'pkg' is heavily used by other states, like the\r\n'pkg' state, so differences in the signature of public functions\r\ncan generate errors like:\r\n\r\n  TypeError: xxx() got an unexpected keyword argument 'yyy'\r\n\r\nThe fix is to add the parameter 'yyy' into all versions of the\r\nfunction 'xxx()' in all the 'pkg' virtual modules, but this\r\napproach is cumbersome and not very resilient, as any refactoring\r\non the public interface or in the pkg state module will break\r\nagain the already agreed contract.\r\n\r\nThis patch append **kwarg in most of the public methods on virtual\r\nmodule pkg where it is missing, fixing the described issue and\r\nmaking more easy the refactoring of the code.\r\n\r\nAlso do the same for 'lowpkg'",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/51146",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/51146/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/51146/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/51146/events",
        "html_url": "https://github.com/saltstack/salt/pull/51146",
        "id": 398450931,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ0MTQ4NjQy",
        "number": 51146,
        "title": "Fix invalid assignment in vsphere module",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-01-11T21:03:43Z",
        "updated_at": "2019-01-22T12:49:11Z",
        "closed_at": "2019-01-12T21:44:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/51146",
            "html_url": "https://github.com/saltstack/salt/pull/51146",
            "diff_url": "https://github.com/saltstack/salt/pull/51146.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/51146.patch"
        },
        "body": "Tuples are immutable, so if we reach this code it will raise a TypeError.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/51021",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/51021/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/51021/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/51021/events",
        "html_url": "https://github.com/saltstack/salt/pull/51021",
        "id": 395266448,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjQxNzYxMTk2",
        "number": 51021,
        "title": "Under Py3 `TypeError` can also be raised. Handle all kinds of exceptions",
        "user": {
            "login": "s0undt3ch",
            "id": 300048,
            "node_id": "MDQ6VXNlcjMwMDA0OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/s0undt3ch",
            "html_url": "https://github.com/s0undt3ch",
            "followers_url": "https://api.github.com/users/s0undt3ch/followers",
            "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
            "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
            "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
            "repos_url": "https://api.github.com/users/s0undt3ch/repos",
            "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-01-02T14:34:31Z",
        "updated_at": "2019-01-03T20:38:52Z",
        "closed_at": "2019-01-03T20:33:43Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/51021",
            "html_url": "https://github.com/saltstack/salt/pull/51021",
            "diff_url": "https://github.com/saltstack/salt/pull/51021.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/51021.patch"
        },
        "body": "This was seen when running under windows:\r\n```\r\n14:13:11          test_invalid_kwargs_are_ignored (integration.client.test_runner.RunnerModuleTest)\r\n14:13:11        [CPU:50.0%|MEM:24.0%]  ... 14:13:15,697 [salt.loader                                                                      :1572][ERROR   ] Failed to import auth pam, this is due most likely to a syntax error:\r\n14:13:11        Traceback (most recent call last):\r\n14:13:11          File \"C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\kitchen\\\\testing\\salt\\loader.py\", line 1548, in _load_module\r\n14:13:11            mod = spec.loader.load_module()\r\n14:13:11          File \"<frozen importlib._bootstrap_external>\", line 396, in _check_name_wrapper\r\n14:13:11          File \"<frozen importlib._bootstrap_external>\", line 817, in load_module\r\n14:13:11          File \"<frozen importlib._bootstrap_external>\", line 676, in load_module\r\n14:13:11          File \"<frozen importlib._bootstrap>\", line 268, in _load_module_shim\r\n14:13:11          File \"<frozen importlib._bootstrap>\", line 693, in _load\r\n14:13:11          File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n14:13:11          File \"<frozen importlib._bootstrap_external>\", line 673, in exec_module\r\n14:13:11          File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n14:13:11          File \"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\kitchen\\testing\\salt\\auth\\pam.py\", line 52, in <module>\r\n14:13:11            LIBC = CDLL(find_library('c'))\r\n14:13:11          File \"C:\\Python35\\lib\\ctypes\\__init__.py\", line 347, in __init__\r\n14:13:11            self._handle = _dlopen(self._name, mode)\r\n14:13:11        TypeError: bad argument type for built-in operation\r\n14:13:18        OK (7.594s)\r\n14:13:18          test_token (integration.client.test_runner.RunnerModuleTest)\r\n14:13:26        [CPU:0.0%|MEM:24.1%]  ... args:\r\n```\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/51622",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/51622/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/51622/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/51622/events",
        "html_url": "https://github.com/saltstack/salt/pull/51622",
        "id": 409876381,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjUyNzUwMTM1",
        "number": 51622,
        "title": "Prevents crash when there is no job entry",
        "user": {
            "login": "brejoc",
            "id": 34246,
            "node_id": "MDQ6VXNlcjM0MjQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brejoc",
            "html_url": "https://github.com/brejoc",
            "followers_url": "https://api.github.com/users/brejoc/followers",
            "following_url": "https://api.github.com/users/brejoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/brejoc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brejoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brejoc/subscriptions",
            "organizations_url": "https://api.github.com/users/brejoc/orgs",
            "repos_url": "https://api.github.com/users/brejoc/repos",
            "events_url": "https://api.github.com/users/brejoc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brejoc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-02-13T15:59:52Z",
        "updated_at": "2019-02-13T17:32:46Z",
        "closed_at": "2019-02-13T17:32:46Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/51622",
            "html_url": "https://github.com/saltstack/salt/pull/51622",
            "diff_url": "https://github.com/saltstack/salt/pull/51622.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/51622.patch"
        },
        "body": "### What does this PR do?\r\n\r\nSeems like in rare race conditions it might happen that there is no job entry. This prevents Salt from crashing at that point.\r\n\r\nIn rare cases we could see this while bootstrapping a minion:\r\n\r\n```\r\nException occurred in runner jobs.list_jobs: Traceback (most recent call last):\r\n  File \"/usr/lib/python2.7/site-packages/salt/client/mixins.py\", line 387, in _low\r\n    data['return'] = self.functions[fun](*args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/salt/runners/jobs.py\", line 306, in list_jobs\r\n    ret = mminion.returners['{0}.get_jids'.format(returner)]()\r\n  File \"/usr/lib/python2.7/site-packages/salt/returners/local_cache.py\", line 376, in get_jids\r\n    for jid, job, _, _ in _walk_through(_job_dir()):\r\n  File \"/usr/lib/python2.7/site-packages/salt/returners/local_cache.py\", line 80, in _walk_through\r\n    jid = job['jid']\r\nTypeError: 'NoneType' object has no attribute '__getitem__'\r\n```\r\n\r\nI'm sure that the cause of this can be found somewhere else. But in the meantime it would be nice if Salt wouldn't crash at that point of time.\r\n\r\n### Previous Behavior\r\n\r\nSalt threw a `TypeError` like above.\r\n\r\n### New Behavior\r\n\r\nSalt logs an error instead.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/52842",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/52842/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/52842/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/52842/events",
        "html_url": "https://github.com/saltstack/salt/pull/52842",
        "id": 440562164,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc2MDc5NDQ2",
        "number": 52842,
        "title": "`libcrypto.OpenSSL_version_num` might be a callable",
        "user": {
            "login": "s0undt3ch",
            "id": 300048,
            "node_id": "MDQ6VXNlcjMwMDA0OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/300048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/s0undt3ch",
            "html_url": "https://github.com/s0undt3ch",
            "followers_url": "https://api.github.com/users/s0undt3ch/followers",
            "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}",
            "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions",
            "organizations_url": "https://api.github.com/users/s0undt3ch/orgs",
            "repos_url": "https://api.github.com/users/s0undt3ch/repos",
            "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/s0undt3ch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-05-06T06:52:54Z",
        "updated_at": "2019-05-06T17:00:37Z",
        "closed_at": "2019-05-06T17:00:37Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/52842",
            "html_url": "https://github.com/saltstack/salt/pull/52842",
            "diff_url": "https://github.com/saltstack/salt/pull/52842.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/52842.patch"
        },
        "body": "### What does this PR do?\r\nAt least on Cryptodome, `OpenSSL_version_num` is a callable, account for that.\r\n\r\n### What issues does this PR fix or reference?\r\nFixes the following traceback:\r\n```\r\n01:41:38        Traceback (most recent call last):\r\n01:41:38          File \"/tmp/kitchen/testing/tests/support/mixins.py\", line 497, in assertReturnSaltType\r\n01:41:38            self.assertTrue(isinstance(ret, dict))\r\n01:41:38          File \"/usr/lib/python3.5/unittest/case.py\", line 677, in assertTrue\r\n01:41:38            raise self.failureException(msg)\r\n01:41:38        AssertionError: False is not true\r\n01:41:38        \r\n01:41:38        During handling of the above exception, another exception occurred:\r\n01:41:38        \r\n01:41:38        Traceback (most recent call last):\r\n01:41:38          File \"/tmp/kitchen/testing/tests/support/mixins.py\", line 554, in assertSaltTrueReturn\r\n01:41:38            for saltret in self.__getWithinSaltReturn(ret, 'result'):\r\n01:41:38          File \"/tmp/kitchen/testing/tests/support/mixins.py\", line 527, in __getWithinSaltReturn\r\n01:41:38            self.assertReturnNonEmptySaltType(ret)\r\n01:41:38        AssertionError: str is not dict. Salt returned: ERROR: Traceback (most recent call last):\r\n01:41:38          File \"/tmp/salt.docker.14d0ac/salt-call\", line 27, in <module>\r\n01:41:38            salt_call()\r\n01:41:38          File \"/tmp/salt.docker.14d0ac/pyall/salt/scripts.py\", line 426, in salt_call\r\n01:41:38            import salt.cli.call\r\n01:41:38          File \"/tmp/salt.docker.14d0ac/pyall/salt/cli/call.py\", line 8, in <module>\r\n01:41:38            import salt.cli.caller\r\n01:41:38          File \"/tmp/salt.docker.14d0ac/pyall/salt/cli/caller.py\", line 19, in <module>\r\n01:41:38            import salt.minion\r\n01:41:38          File \"/tmp/salt.docker.14d0ac/pyall/salt/minion.py\", line 70, in <module>\r\n01:41:38            import salt.crypt\r\n01:41:38          File \"/tmp/salt.docker.14d0ac/pyall/salt/crypt.py\", line 69, in <module>\r\n01:41:38            import salt.utils.rsax931\r\n01:41:38          File \"/tmp/salt.docker.14d0ac/pyall/salt/utils/rsax931.py\", line 93, in <module>\r\n01:41:38            libcrypto = _init_libcrypto()\r\n01:41:38          File \"/tmp/salt.docker.14d0ac/pyall/salt/utils/rsax931.py\", line 69, in _init_libcrypto\r\n01:41:38            if libcrypto.OpenSSL_version_num < 0x10100000:\r\n01:41:38        TypeError: unorderable types: _FuncPtr() < int()\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/49650",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/49650/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/49650/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/49650/events",
        "html_url": "https://github.com/saltstack/salt/pull/49650",
        "id": 360136122,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1NDY2MzYy",
        "number": 49650,
        "title": "fix aliyun cloud typeerror",
        "user": {
            "login": "Yxnt",
            "id": 10323352,
            "node_id": "MDQ6VXNlcjEwMzIzMzUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10323352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yxnt",
            "html_url": "https://github.com/Yxnt",
            "followers_url": "https://api.github.com/users/Yxnt/followers",
            "following_url": "https://api.github.com/users/Yxnt/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yxnt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yxnt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yxnt/subscriptions",
            "organizations_url": "https://api.github.com/users/Yxnt/orgs",
            "repos_url": "https://api.github.com/users/Yxnt/repos",
            "events_url": "https://api.github.com/users/Yxnt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yxnt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-09-14T02:41:09Z",
        "updated_at": "2019-12-02T17:03:06Z",
        "closed_at": "2018-09-30T18:20:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/49650",
            "html_url": "https://github.com/saltstack/salt/pull/49650",
            "diff_url": "https://github.com/saltstack/salt/pull/49650.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/49650.patch"
        },
        "body": "### What does this PR do?\r\nfix cloud aliyun TypeError\r\n\r\n### Previous Behavior\r\n```\r\n[root@localhost]# salt-cloud --location=cn-shanghai -f list_nodes xxxx\r\n........\r\nTypeError: character mapping must return integer, None or unicode\r\n```\r\n### New Behavior\r\n`[root@localhost]# salt-cloud --location=cn-shanghai -f list_nodes xxxx`\r\n```\r\nxxxx:\r\n    ----------\r\n    aliyun:\r\n        ----------\r\n        secret:\r\n            ----------\r\n            id:\r\n                secret\r\n            name:\r\n                secret\r\n            private_ips:\r\n                - xxx.xxx.xxx.xxx\r\n            public_ips:\r\n                - xx.xxx.xxx.xxx\r\n            size:\r\n                TODO\r\n            state:\r\n                Running\r\n```\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/49908",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/49908/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/49908/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/49908/events",
        "html_url": "https://github.com/saltstack/salt/pull/49908",
        "id": 367143245,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjIwNjQ4NzI0",
        "number": 49908,
        "title": "Bugfix: any unicode string of length 16 will raise TypeError",
        "user": {
            "login": "isbm",
            "id": 1073714,
            "node_id": "MDQ6VXNlcjEwNzM3MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1073714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isbm",
            "html_url": "https://github.com/isbm",
            "followers_url": "https://api.github.com/users/isbm/followers",
            "following_url": "https://api.github.com/users/isbm/following{/other_user}",
            "gists_url": "https://api.github.com/users/isbm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/isbm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/isbm/subscriptions",
            "organizations_url": "https://api.github.com/users/isbm/orgs",
            "repos_url": "https://api.github.com/users/isbm/repos",
            "events_url": "https://api.github.com/users/isbm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/isbm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-10-05T10:04:07Z",
        "updated_at": "2018-10-21T13:53:34Z",
        "closed_at": "2018-10-05T14:35:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/49908",
            "html_url": "https://github.com/saltstack/salt/pull/49908",
            "diff_url": "https://github.com/saltstack/salt/pull/49908.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/49908.patch"
        },
        "body": "Fixes https://github.com/saltstack/salt/pull/49378\r\n\r\n@terminalmage @rallytime ",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/51387",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/51387/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/51387/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/51387/events",
        "html_url": "https://github.com/saltstack/salt/pull/51387",
        "id": 404326280,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ4NTMzNTcw",
        "number": 51387,
        "title": "Make binary data output possible",
        "user": {
            "login": "chrillux",
            "id": 3950470,
            "node_id": "MDQ6VXNlcjM5NTA0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3950470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrillux",
            "html_url": "https://github.com/chrillux",
            "followers_url": "https://api.github.com/users/chrillux/followers",
            "following_url": "https://api.github.com/users/chrillux/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrillux/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrillux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrillux/subscriptions",
            "organizations_url": "https://api.github.com/users/chrillux/orgs",
            "repos_url": "https://api.github.com/users/chrillux/repos",
            "events_url": "https://api.github.com/users/chrillux/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrillux/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-01-29T14:47:48Z",
        "updated_at": "2019-02-22T14:53:25Z",
        "closed_at": "2019-02-22T14:53:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/51387",
            "html_url": "https://github.com/saltstack/salt/pull/51387",
            "diff_url": "https://github.com/saltstack/salt/pull/51387.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/51387.patch"
        },
        "body": "If for example a pillar contains binary data it's possible that it won't\r\nbe possible to print it when doing e.g pillar.items:\r\n\r\n`File \"/usr/lib/python3/dist-packages/salt/output/__init__.py\", line 232, in strip_esc_sequence\r\n    return txt.replace('\\033', '?')\r\nTypeError: a bytes-like object is required, not 'str'`\r\n\r\nReplace non-printable data during output with a message instead.\r\n\r\n### What does this PR do?\r\n\r\nWe noticed that when we had binary data in our pillars, certain functions could not print the output. Also it wouldn't look very good printing big binary files that you have in your pillars. We haven't found any other way of doing this differently so here is a PR that solves this problem. Instead of trying to print the binary data, it will print a message instead.\r\n\r\nWhen looking at the code you would think that in this passage it would be a string, because we are checking against \"six.string_types\". But this variable is set from type \"Str\" to a Tuple of the form: \"(<class 'str'>, <class 'bytes'>)\". I was not able to follow the runtime code fully, but it looks like the six.string_types is changed somewhere in the salt cli code. I'm very new to Saltstack so maybe all this is known things and intended behaviour.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nNone that I've seen.\r\n\r\n### Previous Behavior\r\nPillars containing binary data would make the pillar.items or other Salt output call to fail.\r\n\r\n### New Behavior\r\nOutput with binary data would be replaced with a message.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/51445",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/51445/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/51445/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/51445/events",
        "html_url": "https://github.com/saltstack/salt/pull/51445",
        "id": 405040107,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ5MDg3ODYz",
        "number": 51445,
        "title": "Remove custom grains module from 2018.3 branch",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-01-31T01:28:02Z",
        "updated_at": "2019-02-01T16:48:39Z",
        "closed_at": "2019-02-01T16:48:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/51445",
            "html_url": "https://github.com/saltstack/salt/pull/51445",
            "diff_url": "https://github.com/saltstack/salt/pull/51445.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/51445.patch"
        },
        "body": "Support for passing the grains data to custom grains modules wasn't added until the `2019.2` release cycle. It seems like this file was included when something else was backported to `2018.3`. This results in the following harmless traceback in the test suite:\n\n```pytb\nTraceback (most recent call last):\n  File \"/tmp/kitchen/testing/salt/loader.py\", line 778, in grains\n    ret = funcs[key](proxy)\n  File \"/tmp/salt-tests-tmpdir/rootdir/var/cache/salt/minion/extmods/grains/custom_grains.py\", line 5, in test\n    return {'custom_grain_test': 'itworked' if 'os' in grains else 'itdidntwork'}\nTypeError: argument of type 'NoneType' is not iterable\n```\n\n(It's harmless because nothing actually tests this grain until `2019.2`)\n\n@garethgreenaway @Ch3LL Please note that this will cause the following test to fail upon being merged into `2019.2`:\n\n```\nintegration.grains.test_custom.TestGrainsCore.test_grains_passed_to_custom_grain\n```\n\nSo, when doing a merge-forward, you'll want to do a `git revert <commit_id>`, where `<commit_id>` is the commit ID for this change, and add it to the pull request for the merge from `2018.3` to `2019.2`.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/50958",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/50958/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/50958/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/50958/events",
        "html_url": "https://github.com/saltstack/salt/pull/50958",
        "id": 393432024,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjQwNDUyMjE0",
        "number": 50958,
        "title": "Fix twilio version checking",
        "user": {
            "login": "bdrung",
            "id": 239485,
            "node_id": "MDQ6VXNlcjIzOTQ4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/239485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bdrung",
            "html_url": "https://github.com/bdrung",
            "followers_url": "https://api.github.com/users/bdrung/followers",
            "following_url": "https://api.github.com/users/bdrung/following{/other_user}",
            "gists_url": "https://api.github.com/users/bdrung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bdrung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bdrung/subscriptions",
            "organizations_url": "https://api.github.com/users/bdrung/orgs",
            "repos_url": "https://api.github.com/users/bdrung/repos",
            "events_url": "https://api.github.com/users/bdrung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bdrung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-12-21T11:51:30Z",
        "updated_at": "2019-01-07T13:34:13Z",
        "closed_at": "2018-12-25T10:46:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/50958",
            "html_url": "https://github.com/saltstack/salt/pull/50958",
            "diff_url": "https://github.com/saltstack/salt/pull/50958.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/50958.patch"
        },
        "body": "`twilio.__version__` is a string and `twilio.__version_info__` is a tuple of strings containing integers [e.g. `('6', '8', '2')`]. The test_twilio_notify unittest fails:\r\n\r\n```\r\nERROR: unit.modules.test_twilio_notify (unittest.loader._FailedTest)\r\n----------------------------------------------------------------------\r\nImportError: Failed to import test module: unit.modules.test_twilio_notify\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/unittest/loader.py\", line 434, in _find_test_path\r\n    module = self._get_module_from_name(name)\r\n  File \"/usr/lib/python3.7/unittest/loader.py\", line 375, in _get_module_from_name\r\n    __import__(name)\r\n  File \"tests/unit/modules/test_twilio_notify.py\", line 20, in <module>\r\n    import salt.modules.twilio_notify as twilio_notify\r\n  File \"salt/modules/twilio_notify.py\", line 28, in <module>\r\n    if twilio.__version__ > 5:\r\nTypeError: '>' not supported between instances of 'str' and 'int'\r\n```\r\n\r\nFix the twilio version check to use `__version_info__` and converting its elements to int.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/49199",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/49199/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/49199/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/49199/events",
        "html_url": "https://github.com/saltstack/salt/pull/49199",
        "id": 351991337,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjA5NDE1NTkz",
        "number": 49199,
        "title": "Fix typeerror unicode",
        "user": {
            "login": "jacobweinstock",
            "id": 12081036,
            "node_id": "MDQ6VXNlcjEyMDgxMDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12081036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobweinstock",
            "html_url": "https://github.com/jacobweinstock",
            "followers_url": "https://api.github.com/users/jacobweinstock/followers",
            "following_url": "https://api.github.com/users/jacobweinstock/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobweinstock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobweinstock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobweinstock/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobweinstock/orgs",
            "repos_url": "https://api.github.com/users/jacobweinstock/repos",
            "events_url": "https://api.github.com/users/jacobweinstock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobweinstock/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-08-20T05:37:31Z",
        "updated_at": "2018-08-23T14:38:17Z",
        "closed_at": "2018-08-23T14:38:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/49199",
            "html_url": "https://github.com/saltstack/salt/pull/49199",
            "diff_url": "https://github.com/saltstack/salt/pull/49199.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/49199.patch"
        },
        "body": "fix TypeError: 'unicode' does not have the buffer interface and updates for python 3 support\r\n\r\n`from __future__ import unicode_literals` - breaks this module in python 2. I found python 3 to not be supported as well. It appears that the pypureomapi library leverages sockets that are designed to only take byte strings. In python 2, strings are already byte strings and using unicode_literals causes the TypeError. In python 3 strings are unicode by default and thus need to be encoded to byte strings. This update encodes string literals into byte strings and provides support for both python 2 and 3.\r\n\r\n### What does this PR do?\r\nfix TypeError: 'unicode' does not have the buffer interface introduced by `from __future__ import unicode_literals` and handles python 3 support\r\n\r\n### What issues does this PR fix or reference?\r\nn/a\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nYes\r\n\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/50080",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/50080/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/50080/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/50080/events",
        "html_url": "https://github.com/saltstack/salt/pull/50080",
        "id": 370687716,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjIzMzA5NjQx",
        "number": 50080,
        "title": "Ensure all string kwargs passed to Tornado's httpclient are str types",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-10-16T16:07:57Z",
        "updated_at": "2018-10-17T15:00:47Z",
        "closed_at": "2018-10-16T21:01:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/50080",
            "html_url": "https://github.com/saltstack/salt/pull/50080",
            "diff_url": "https://github.com/saltstack/salt/pull/50080.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/50080.patch"
        },
        "body": "Failing to do so will result in a `TypeError` when running setopt in pycurl, as it does not support `unicode` types on Python 2.\n\nFixes #49275.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/47053",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/47053/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/47053/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/47053/events",
        "html_url": "https://github.com/saltstack/salt/pull/47053",
        "id": 314135340,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxNTA5MTg3",
        "number": 47053,
        "title": "handle jinja error in <module> level",
        "user": {
            "login": "clan",
            "id": 489372,
            "node_id": "MDQ6VXNlcjQ4OTM3Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/489372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clan",
            "html_url": "https://github.com/clan",
            "followers_url": "https://api.github.com/users/clan/followers",
            "following_url": "https://api.github.com/users/clan/following{/other_user}",
            "gists_url": "https://api.github.com/users/clan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clan/subscriptions",
            "organizations_url": "https://api.github.com/users/clan/orgs",
            "repos_url": "https://api.github.com/users/clan/repos",
            "events_url": "https://api.github.com/users/clan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-04-13T14:44:00Z",
        "updated_at": "2018-12-18T08:12:59Z",
        "closed_at": "2018-04-16T22:47:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/47053",
            "html_url": "https://github.com/saltstack/salt/pull/47053",
            "diff_url": "https://github.com/saltstack/salt/pull/47053.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/47053.patch"
        },
        "body": "prepare test case:\r\n # echo '{% import_yaml \"a.yaml\" as a with context %}' > a.sls\r\n # echo 'a: {{ \"now\"|strftime }}' > a.yaml\r\n\r\nremove 'import salt.utils.daeutils' from salt/utils/templates.py, then run\r\n\r\n # salt-call state.sls a\r\n[CRITICAL] Rendering SLS 'base:a' failed: Traceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/site-packages/salt/utils/templates.py\", line 169, in render_tmpl\r\n    output = render_str(tmplstr, context, tmplpath)\r\n  File \"/usr/lib64/python2.7/site-packages/salt/utils/templates.py\", line 395, in render_jinja_tmpl\r\n    line, out = _get_jinja_error(trace, context=decoded_context)\r\n  File \"/usr/lib64/python2.7/site-packages/salt/utils/templates.py\", line 248, in _get_jinja_error\r\n    line = _get_jinja_error_line(trace)\r\n  File \"/usr/lib64/python2.7/site-packages/salt/utils/templates.py\", line 231, in _get_jinja_error_line\r\n    return _get_jinja_error_slug(tb_data)[1]\r\nTypeError: 'NoneType' object has no attribute '__getitem__'\r\n\r\nafter apply the patch:\r\n\r\n # salt-call state.sls a\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/site-packages/salt/utils/templates.py\", line 169, in render_tmpl\r\n    output = render_str(tmplstr, context, tmplpath)\r\n  File \"/usr/lib64/python2.7/site-packages/salt/utils/templates.py\", line 402, in render_jinja_tmpl\r\n    tmplstr)\r\nSaltRenderError: Jinja syntax error: no filter named 'strftime'\r\n/var/cache/salt/minion/files/base/a.yaml(1):\r\n---\r\na: {{ \"now\"|strftime }}    <======================\r\n---\r\n[CRITICAL] Rendering SLS 'base:a' failed: Jinja syntax error: no filter named 'strftime'\r\n/var/cache/salt/minion/files/base/a.yaml(1):\r\n---\r\na: {{ \"now\"|strftime }}    <======================\r\n---\r\n\r\nwhich shows accurate information for debug.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/50416",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/50416/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/50416/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/50416/events",
        "html_url": "https://github.com/saltstack/salt/pull/50416",
        "id": 378335913,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5MDY0Njkz",
        "number": 50416,
        "title": "Fix issue in nilrt_ip when using python3",
        "user": {
            "login": "andzn",
            "id": 10997884,
            "node_id": "MDQ6VXNlcjEwOTk3ODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/10997884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andzn",
            "html_url": "https://github.com/andzn",
            "followers_url": "https://api.github.com/users/andzn/followers",
            "following_url": "https://api.github.com/users/andzn/following{/other_user}",
            "gists_url": "https://api.github.com/users/andzn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andzn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andzn/subscriptions",
            "organizations_url": "https://api.github.com/users/andzn/orgs",
            "repos_url": "https://api.github.com/users/andzn/repos",
            "events_url": "https://api.github.com/users/andzn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andzn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-11-07T15:24:05Z",
        "updated_at": "2018-11-08T05:35:39Z",
        "closed_at": "2018-11-07T16:10:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/50416",
            "html_url": "https://github.com/saltstack/salt/pull/50416",
            "diff_url": "https://github.com/saltstack/salt/pull/50416.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/50416.patch"
        },
        "body": "### What does this PR do?\r\nFix \"TypeError: object of type 'int' has no len() error assistance needed\" exception thrown when calling nilrt_ip.get_interfaces_details if the minion is running with python3.\r\n\r\n### Previous Behavior\r\nWhen using salt-minion with python3, the call to nilrt_ip.get_interfaces_details eventually called _load_config with a default value of -1. That default value ended up being passed to the _remove_quotes function which threw an exception because since -1 is not a string, it was not able to call len on it.\r\n\r\n### New Behavior\r\nThe new behavior is the same that is currently present when salt-minion uses python2. Basically, _remove_quotes is not called anymore if the config parser does not find the requested option. If the requested option is present, it will surely be a string, therefore it is safe to call _remove_quotes on it.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/49471",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/49471/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/49471/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/49471/events",
        "html_url": "https://github.com/saltstack/salt/pull/49471",
        "id": 356050326,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyNDM3NTgx",
        "number": 49471,
        "title": "Remove string conversion on frame object in sigusr1 handler",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-31T16:39:52Z",
        "updated_at": "2018-09-02T18:05:13Z",
        "closed_at": "2018-09-02T18:05:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/49471",
            "html_url": "https://github.com/saltstack/salt/pull/49471",
            "diff_url": "https://github.com/saltstack/salt/pull/49471.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/49471.patch"
        },
        "body": "### What does this PR do?\r\nremove to_str conversion on frame object.\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/issues/49463\r\n\r\n### Previous Behavior\r\nstack trace when sending sigusr1 signal to master\r\n\r\n```\r\nTypeError: expected str, bytearray, or unicode\r\n```\r\n\r\n### New Behavior\r\ncorrectly prints out the frame object information to the debug file.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48822",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48822/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48822/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48822/events",
        "html_url": "https://github.com/saltstack/salt/pull/48822",
        "id": 345851822,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0ODcyMTM0",
        "number": 48822,
        "title": "Fix salt-ssh state.sls_id TypeError key must be a string",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-07-30T17:15:22Z",
        "updated_at": "2018-07-30T20:29:29Z",
        "closed_at": "2018-07-30T20:29:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48822",
            "html_url": "https://github.com/saltstack/salt/pull/48822",
            "diff_url": "https://github.com/saltstack/salt/pull/48822.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48822.patch"
        },
        "body": "### What does this PR do?\r\nCurrently the test `integration.ssh.test_state.SSHStateTest.test_state_sls_id ` is failing with error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/kitchen/testing/tests/integration/ssh/test_state.py\", line 65, in test_state_sls_id\r\n    exp_ret='The file /tmp/test is set to be changed')\r\n  File \"/tmp/kitchen/testing/tests/integration/ssh/test_state.py\", line 31, in _check_dict_ret\r\n    self.assertIsInstance(ret, dict)\r\nAssertionError: \"Target 'localhost' did not return any data, probably due to an error.\" is not an instance of <class 'dict'>\r\n```\r\n\r\nI found out its not returning any data because of this stack trace when running salt-ssh \r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 258, in _bootstrap\r\n    self.run()\r\n  File \"/home/ch3ll/git/salt/salt/utils/process.py\", line 747, in _run\r\n    return self._original_run()\r\n  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 93, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/ch3ll/git/salt/salt/client/ssh/__init__.py\", line 522, in handle_routine\r\n    stdout, stderr, retcode = single.run()\r\n  File \"/home/ch3ll/git/salt/salt/client/ssh/__init__.py\", line 995, in run\r\n    stdout, retcode = self.run_wfunc()\r\n  File \"/home/ch3ll/git/salt/salt/client/ssh/__init__.py\", line 1170, in run_wfunc\r\n    ret = salt.utils.json.dumps({'local': {'return': result}})\r\n  File \"/home/ch3ll/git/salt/salt/utils/json.py\", line 145, in dumps\r\n    return json_module.dumps(obj, **kwargs)  # future lint: blacklisted-function\r\n  File \"/usr/lib/python3.6/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n  File \"/usr/lib/python3.6/json/encoder.py\", line 199, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/usr/lib/python3.6/json/encoder.py\", line 257, in iterencode\r\n    return _iterencode(o, 0)\r\nTypeError: keys must be a string\r\n```\r\n\r\nThis is because state.sls_id is returning bytes on 2018.3 so using decode() to convert the returned dict's keys back to strings.\r\n\r\n### What issues does this PR fix or reference?\r\nFixes https://github.com/saltstack/salt-jenkins/issues/1043\r\n\r\n\r\n### Tests written?\r\n\r\nFixes a test\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48212",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48212/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48212/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48212/events",
        "html_url": "https://github.com/saltstack/salt/pull/48212",
        "id": 333804498,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1OTMxMTI4",
        "number": 48212,
        "title": "Fix python3 ec2 salt-cloud TypeError when installing salt",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-06-19T19:19:51Z",
        "updated_at": "2018-06-20T16:00:21Z",
        "closed_at": "2018-06-20T16:00:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48212",
            "html_url": "https://github.com/saltstack/salt/pull/48212",
            "diff_url": "https://github.com/saltstack/salt/pull/48212.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48212.patch"
        },
        "body": "### What does this PR do?\r\nFixes TypeError when trying to install salt on VM during creation.\r\n\r\n### What issues does this PR fix or reference?\r\nFixes: https://github.com/saltstack/salt/issues/48206\r\n\r\n### Tests written?\r\n\r\nYes - This was found due to tests that were failing\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/47973",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/47973/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/47973/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/47973/events",
        "html_url": "https://github.com/saltstack/salt/pull/47973",
        "id": 329520182,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTkyNzU2Mjk3",
        "number": 47973,
        "title": "salt.modules.testinframod: fix TypeError invoking types.FunctionType",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-06-05T15:53:44Z",
        "updated_at": "2018-06-06T14:10:43Z",
        "closed_at": "2018-06-06T13:53:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/47973",
            "html_url": "https://github.com/saltstack/salt/pull/47973",
            "diff_url": "https://github.com/saltstack/salt/pull/47973.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/47973.patch"
        },
        "body": "The `__name__` attribute must be a str type, unicode types will result in a `TypeError`.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48997",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48997/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48997/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48997/events",
        "html_url": "https://github.com/saltstack/salt/pull/48997",
        "id": 348683565,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjA2OTc0ODA0",
        "number": 48997,
        "title": "Python 3 related fix in highstate_return.py",
        "user": {
            "login": "AVeenstra",
            "id": 4164107,
            "node_id": "MDQ6VXNlcjQxNjQxMDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4164107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AVeenstra",
            "html_url": "https://github.com/AVeenstra",
            "followers_url": "https://api.github.com/users/AVeenstra/followers",
            "following_url": "https://api.github.com/users/AVeenstra/following{/other_user}",
            "gists_url": "https://api.github.com/users/AVeenstra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AVeenstra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AVeenstra/subscriptions",
            "organizations_url": "https://api.github.com/users/AVeenstra/orgs",
            "repos_url": "https://api.github.com/users/AVeenstra/repos",
            "events_url": "https://api.github.com/users/AVeenstra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AVeenstra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-08T11:21:54Z",
        "updated_at": "2018-08-10T12:42:53Z",
        "closed_at": "2018-08-09T17:57:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48997",
            "html_url": "https://github.com/saltstack/salt/pull/48997",
            "diff_url": "https://github.com/saltstack/salt/pull/48997.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48997.patch"
        },
        "body": "In Python 3 key sets of dicts no longer support indexing:\r\n`TypeError: 'dict_keys' object does not support indexing`\r\n\r\n### What does this PR do?\r\nIt makes the highstate returner function under Python 3.\r\n\r\n### What issues does this PR fix or reference?\r\nCould not find any.\r\n\r\n### Previous Behavior\r\n```\r\n2018-08-08 11:37:53,693 [salt.utils.schedule:740 ][ERROR   ][26560] Unhandled exception running state.highstate\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/salt/utils/schedule.py\", line 732, in handle_func\r\n    self.returners[ret_str](ret)\r\n  File \"/usr/lib/python3/dist-packages/salt/returners/highstate_return.py\", line 481, in returner\r\n    _produce_output(report, failed, setup)\r\n  File \"/usr/lib/python3/dist-packages/salt/returners/highstate_return.py\", line 434, in _produce_output\r\n    _generate_html(report, string_file)\r\n  File \"/usr/lib/python3/dist-packages/salt/returners/highstate_return.py\", line 270, in _generate_html\r\n    _generate_html_table(data, out, 0)\r\n  File \"/usr/lib/python3/dist-packages/salt/returners/highstate_return.py\", line 190, in _generate_html_table\r\n    name = subdata.keys()[0]\r\nTypeError: 'dict_keys' object does not support indexing\r\n```\r\n\r\n### New Behavior\r\nYou get a mail about the highstate. Also when using Python 2.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48757",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48757/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48757/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48757/events",
        "html_url": "https://github.com/saltstack/salt/pull/48757",
        "id": 344234903,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjAzNjc5MjQ1",
        "number": 48757,
        "title": "Update carbon_return.py",
        "user": {
            "login": "kuetrzi",
            "id": 863869,
            "node_id": "MDQ6VXNlcjg2Mzg2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kuetrzi",
            "html_url": "https://github.com/kuetrzi",
            "followers_url": "https://api.github.com/users/kuetrzi/followers",
            "following_url": "https://api.github.com/users/kuetrzi/following{/other_user}",
            "gists_url": "https://api.github.com/users/kuetrzi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kuetrzi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kuetrzi/subscriptions",
            "organizations_url": "https://api.github.com/users/kuetrzi/orgs",
            "repos_url": "https://api.github.com/users/kuetrzi/repos",
            "events_url": "https://api.github.com/users/kuetrzi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kuetrzi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-07-24T23:08:06Z",
        "updated_at": "2018-07-26T21:29:58Z",
        "closed_at": "2018-07-25T14:58:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48757",
            "html_url": "https://github.com/saltstack/salt/pull/48757",
            "diff_url": "https://github.com/saltstack/salt/pull/48757.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48757.patch"
        },
        "body": "fix TypeError: not all arguments converted during string formatting\r\ncaused by extra comma accidentally being added to log statement in unicode literals update\r\n\r\n### What does this PR do?\r\nfixes saltstack#47999\r\n### What issues does this PR fix or reference?\r\nsaltstack#47999\r\n\r\n### Tests written?\r\n\r\nNo, i character removed\r\n\r\n### Commits signed with GPG?\r\nNo\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48454",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48454/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48454/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48454/events",
        "html_url": "https://github.com/saltstack/salt/pull/48454",
        "id": 338639110,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTk5NTIwMjI2",
        "number": 48454,
        "title": "Improve error message when ext_pillar is incorrectly formatted",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-07-05T16:12:06Z",
        "updated_at": "2018-07-06T18:03:44Z",
        "closed_at": "2018-07-06T18:03:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48454",
            "html_url": "https://github.com/saltstack/salt/pull/48454",
            "diff_url": "https://github.com/saltstack/salt/pull/48454.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48454.patch"
        },
        "body": "This catches a TypeError and adds a sane error message to the pre-flight check.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/49722",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/49722/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/49722/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/49722/events",
        "html_url": "https://github.com/saltstack/salt/pull/49722",
        "id": 362138735,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjE2OTMzMjQz",
        "number": 49722,
        "title": "Fixes some issues on the Zypper module",
        "user": {
            "login": "meaksh",
            "id": 7229203,
            "node_id": "MDQ6VXNlcjcyMjkyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7229203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meaksh",
            "html_url": "https://github.com/meaksh",
            "followers_url": "https://api.github.com/users/meaksh/followers",
            "following_url": "https://api.github.com/users/meaksh/following{/other_user}",
            "gists_url": "https://api.github.com/users/meaksh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/meaksh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/meaksh/subscriptions",
            "organizations_url": "https://api.github.com/users/meaksh/orgs",
            "repos_url": "https://api.github.com/users/meaksh/repos",
            "events_url": "https://api.github.com/users/meaksh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/meaksh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-09-20T11:13:14Z",
        "updated_at": "2018-09-21T14:01:55Z",
        "closed_at": "2018-09-21T13:38:03Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/49722",
            "html_url": "https://github.com/saltstack/salt/pull/49722",
            "diff_url": "https://github.com/saltstack/salt/pull/49722.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/49722.patch"
        },
        "body": "### What does this PR do?\r\nThis PR fixes two issues on the Zypper module:\r\n\r\n- Fix an error happening in some cases when running `resolve_capabilities` on Python 3.\r\n- Fix a wrong queryformat for RPM which produces an exception when running `pkg.list_provides` on Zypper module.\r\n\r\n### Previous Behavior\r\n```\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n    File \"/usr/lib/python3.6/site-packages/salt/state.py\", line 1878, in call\r\n      **cdata['kwargs'])\r\n    File \"/usr/lib/python3.6/site-packages/salt/loader.py\", line 1823, in wrapper\r\n      return f(*args, **kwargs)\r\n    File \"/usr/lib/python3.6/site-packages/salt/states/pkg.py\", line 1487, in installed\r\n      pkgs, refresh = _resolve_capabilities(pkgs, refresh=refresh, **kwargs)\r\n    File \"/usr/lib/python3.6/site-packages/salt/states/pkg.py\", line 899, in _resolve_capabilities\r\n      ret = __salt__['pkg.resolve_capabilities'](pkgs, refresh=refresh, **kwargs)\r\n    File \"/usr/lib/python3.6/site-packages/salt/modules/zypper.py\", line 2255, in resolve_capabilities\r\n      name = result.keys()[0]\r\nTypeError: 'dict_keys' object does not support indexing\r\n```\r\n\r\nand also:\r\n\r\n```\r\nAn exception occurred in this state: Traceback (most recent call last):\r\n    File \"/usr/lib/python3.6/site-packages/salt/state.py\", line 1878, in call\r\n      **cdata['kwargs'])\r\n    File \"/usr/lib/python3.6/site-packages/salt/loader.py\", line 1823, in wrapper\r\n      return f(*args, **kwargs)\r\n    File \"/usr/lib/python3.6/site-packages/salt/states/pkg.py\", line 1511, in installed\r\n      **kwargs)\r\n    File \"/usr/lib/python3.6/site-packages/salt/states/pkg.py\", line 512, in _find_install_targets\r\n      cur_prov = resolve_capabilities and __salt__['pkg.list_provides'](**kwargs) or dict()\r\n    File \"/usr/lib/python3.6/site-packages/salt/modules/zypper.py\", line 2193, in list_provides\r\n      provide, realname = line.split('_|-')\r\nValueError: not enough values to unpack (expected 2, got 1)\r\n```\r\n\r\n### New Behavior\r\nNo exceptions are produced. It run successfully.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48754",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48754/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48754/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48754/events",
        "html_url": "https://github.com/saltstack/salt/pull/48754",
        "id": 344204970,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjAzNjU1ODQz",
        "number": 48754,
        "title": "send proxy/ca_cert parameters as strings (not unicode) to tornado httpclient ",
        "user": {
            "login": "lomeroe",
            "id": 8835244,
            "node_id": "MDQ6VXNlcjg4MzUyNDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8835244?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lomeroe",
            "html_url": "https://github.com/lomeroe",
            "followers_url": "https://api.github.com/users/lomeroe/followers",
            "following_url": "https://api.github.com/users/lomeroe/following{/other_user}",
            "gists_url": "https://api.github.com/users/lomeroe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lomeroe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lomeroe/subscriptions",
            "organizations_url": "https://api.github.com/users/lomeroe/orgs",
            "repos_url": "https://api.github.com/users/lomeroe/repos",
            "events_url": "https://api.github.com/users/lomeroe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lomeroe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-07-24T21:09:58Z",
        "updated_at": "2018-07-25T14:55:42Z",
        "closed_at": "2018-07-25T14:55:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48754",
            "html_url": "https://github.com/saltstack/salt/pull/48754",
            "diff_url": "https://github.com/saltstack/salt/pull/48754.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48754.patch"
        },
        "body": "### What does this PR do?\r\nsend proxy_user, proxy_password, proxy_host, and ca_bundle through salt.utils.stringutils.to_str()\r\n\r\ntornado in py2 requires standard str not unicode strings\r\n\r\n### What issues does this PR fix or reference?\r\nfixes #46896\r\n\r\n### Previous Behavior\r\nproxy_host, proxy_username, proxy_password, and ca_bundle were passed as unicode strings which would cause an \"TypeError: invalid arguments to setopt\" when attempting to use the tornado backend to access http/https through a proxy \r\n\r\n### New Behavior\r\nproxy_host, proxy_username, proxy_password, and ca_bundle are passed through the salt.utils.stringutils.to_str to convert them to a string object for PY2 before being sent to the tornado httpclient\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48683",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48683/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48683/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48683/events",
        "html_url": "https://github.com/saltstack/salt/pull/48683",
        "id": 343032376,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyNzkwODM0",
        "number": 48683,
        "title": "Fixed zabbix host inventory manipulation.",
        "user": {
            "login": "slivik",
            "id": 13613761,
            "node_id": "MDQ6VXNlcjEzNjEzNzYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13613761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slivik",
            "html_url": "https://github.com/slivik",
            "followers_url": "https://api.github.com/users/slivik/followers",
            "following_url": "https://api.github.com/users/slivik/following{/other_user}",
            "gists_url": "https://api.github.com/users/slivik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slivik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slivik/subscriptions",
            "organizations_url": "https://api.github.com/users/slivik/orgs",
            "repos_url": "https://api.github.com/users/slivik/repos",
            "events_url": "https://api.github.com/users/slivik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slivik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-07-20T09:15:47Z",
        "updated_at": "2018-07-20T14:00:15Z",
        "closed_at": "2018-07-20T14:00:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48683",
            "html_url": "https://github.com/saltstack/salt/pull/48683",
            "diff_url": "https://github.com/saltstack/salt/pull/48683.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48683.patch"
        },
        "body": "### What does this PR do?\r\nFixes wrong manipulation with zabbix host inventory (exception).\r\n\r\n### Previous Behavior\r\nWhen try to change or update host inventory it threw this exception:\r\n```\r\n     Comment: An exception occurred in this state: Traceback (most recent call last):\r\n                File \"/usr/lib/python2.7/dist-packages/salt/state.py\", line 1745, in call                                                                                                                         \r\n                  **cdata['kwargs'])                                                                                                                                                                              \r\n                File \"/usr/lib/python2.7/dist-packages/salt/loader.py\", line 1702, in wrapper                                                                                                                     \r\n                  return f(*args, **kwargs)                                                                                                                                                                       \r\n                File \"/var/cache/salt/minion/extmods/states/zabbix_host.py\", line 280, in present                                                                                                                 \r\n                  sum_kwargs = new_inventory.get(elem, 0) + connection_args[elem]                                                                                                                                 \r\n              TypeError: unsupported operand type(s) for +: 'int' and 'str'                                                                                                                                       \r\n```\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48893",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48893/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48893/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48893/events",
        "html_url": "https://github.com/saltstack/salt/pull/48893",
        "id": 347133248,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjA1ODI5MzE0",
        "number": 48893,
        "title": "handle when ca_certs is None in utils.http",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-08-02T18:54:58Z",
        "updated_at": "2018-08-03T20:30:48Z",
        "closed_at": "2018-08-03T20:30:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48893",
            "html_url": "https://github.com/saltstack/salt/pull/48893",
            "diff_url": "https://github.com/saltstack/salt/pull/48893.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48893.patch"
        },
        "body": "### What does this PR do?\r\nThe following tests are failing on macosx:\r\n\r\n```\r\nintegration.modules.test_cp.CPModuleTest.test_get_file_str_https\r\nintegration.modules.test_cp.CPModuleTest.test_get_url_https\r\nintegration.modules.test_cp.CPModuleTest.test_get_url_https_no_dest\r\nintegration.modules.test_cp.CPModuleTest.test_get_url_https_dest_empty\r\n```\r\n\r\nhere is the traceback:\r\n\r\n```\r\nu'Bootstrap' not found in u\"Passed invalid arguments to cp.get_file_str: expected str, bytearray, or unicode\\n\\n    Download a file from a URL to the Minion cache directory and return the\\n    contents of that file\\n\\n    Returns ``False`` if Salt was unable to cache a file from a URL.\\n\\n    CLI Example:\\n\\n    .. code-block:: bash\\n\\n        salt '*' cp.get_file_str salt://my/file\\n    \"\r\n```\r\n\r\nThis was due to this PR: \r\n\r\nhttps://github.com/saltstack/salt/pull/48754\r\n\r\nbecause sometimes ca_certs can be None. From the tornado docs (http://www.tornadoweb.org/en/stable/httpclient.html) \r\n\r\n> ca_certs (str) \u2013 filename of CA certificates in PEM format, or None to use defaults.\r\n\r\nAnd we are trying to convert a None variable to a string which causes a TypeError.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48491",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48491/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48491/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48491/events",
        "html_url": "https://github.com/saltstack/salt/pull/48491",
        "id": 339510839,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjAwMTQ2Mzg2",
        "number": 48491,
        "title": "Group gid fixed as integer ",
        "user": {
            "login": "rainecurtis",
            "id": 3597271,
            "node_id": "MDQ6VXNlcjM1OTcyNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3597271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainecurtis",
            "html_url": "https://github.com/rainecurtis",
            "followers_url": "https://api.github.com/users/rainecurtis/followers",
            "following_url": "https://api.github.com/users/rainecurtis/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainecurtis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainecurtis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainecurtis/subscriptions",
            "organizations_url": "https://api.github.com/users/rainecurtis/orgs",
            "repos_url": "https://api.github.com/users/rainecurtis/repos",
            "events_url": "https://api.github.com/users/rainecurtis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainecurtis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2018-07-09T15:59:06Z",
        "updated_at": "2018-07-10T19:31:40Z",
        "closed_at": "2018-07-10T19:31:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48491",
            "html_url": "https://github.com/saltstack/salt/pull/48491",
            "diff_url": "https://github.com/saltstack/salt/pull/48491.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48491.patch"
        },
        "body": "### What does this PR do?\r\n\r\nFixes the _changes() function to correctly evaluate  the group id.\r\n\r\n\r\n### What issues does this PR fix or reference?\r\n\r\ngid was being passed as a string, while the lgrp['gid'] was being passed as an integer.\r\n\r\nAdded casting or string ``gid`` to integer for accurate comparison.\r\n\r\n\r\n### Previous Behavior\r\n\r\nThe return was false even though the group was successfully created.\r\n\r\n\r\n\r\n### New Behavior\r\n\r\nThis updated code now compares an integer with an integer for the gid.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\n###  Previous Error \r\n\r\n**Evaluation**\r\n\r\n``` python\r\ngid  == <type 'str'>\r\nlgrp['gid'] == <type 'int'>\r\n```\r\n\r\n**Output**\r\n\r\n```\r\n\r\n    [ERROR   ] {'Failed': {'gid': '1030'}}\r\n    local:\r\n    ----------\r\n           ID: oinstall_group\r\n     Function: group.present\r\n        Name: oinstall\r\n      Result: False\r\n      Comment: Group {0} has been created but, some changes could not be applied\r\n     Started: 08:59:43.531683\r\n     Duration: 88.538 ms\r\n     Changes:   \r\n              ----------\r\n              Failed:\r\n                  ----------\r\n                  gid:\r\n                      1030\r\n```\r\n###  Fixed Evaluation\r\n\r\n**Evaluation**\r\n\r\n``` python\r\n    if gid:\r\n       try:\r\n           gid = int(gid)\r\n           if lgrp['gid'] != gid:\r\n                change['gid'] = gid\r\n       except (TypeError, ValueError):\r\n           ret['result'] = False\r\n           ret['comment'] = 'Invalid gid'\r\n           return ret\r\n\r\n```\r\n\r\nChanged evaluation from (string != int) to (int != int) \r\n\r\n###  Versions tested\r\n\r\n**SLES12SP3** / Salt 2016.11.4 (Carbon)\r\n**Oracle Linux 7** / Salt 2018.3.1 (Oxygen)\r\n\r\nState used for testing:\r\n\r\n```\r\noinstall_group:\r\n  group.present:\r\n    - name: oinstall\r\n    - gid: '1030'\r\n```\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/47920",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/47920/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/47920/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/47920/events",
        "html_url": "https://github.com/saltstack/salt/pull/47920",
        "id": 328501650,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTkyMDIwNzgw",
        "number": 47920,
        "title": "Fixed remove and _remove_persistent_module which didnt understand the\u2026",
        "user": {
            "login": "AlexanderThaller",
            "id": 357645,
            "node_id": "MDQ6VXNlcjM1NzY0NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/357645?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexanderThaller",
            "html_url": "https://github.com/AlexanderThaller",
            "followers_url": "https://api.github.com/users/AlexanderThaller/followers",
            "following_url": "https://api.github.com/users/AlexanderThaller/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexanderThaller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexanderThaller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexanderThaller/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexanderThaller/orgs",
            "repos_url": "https://api.github.com/users/AlexanderThaller/repos",
            "events_url": "https://api.github.com/users/AlexanderThaller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexanderThaller/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-06-01T12:30:09Z",
        "updated_at": "2018-07-05T14:37:24Z",
        "closed_at": "2018-07-05T14:37:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/47920",
            "html_url": "https://github.com/saltstack/salt/pull/47920",
            "diff_url": "https://github.com/saltstack/salt/pull/47920.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/47920.patch"
        },
        "body": "\u2026 comment parameter.\r\n\r\n### What does this PR do?\r\nI fixes the inconsitency between `kmod.py` and `freebsdkmod.py` which break the kmod.absent state under FreeBSD.\r\n\r\nThe version of the `remove` and `_remove_persistent_module` functions in kmod supports commenting out the module instead of removing it. The versions of the same functions in `freebsdkmod.py` dont support this which leads to the following error message:\r\n\r\n```\r\n          ID: kernel_modules.modules.disable\r\n    Function: kmod.absent\r\n      Result: False\r\n     Comment: An exception occurred in this state: Traceback (most recent call last):\r\n                File \"/usr/local/lib/python2.7/site-packages/salt/state.py\", line 1878, in call\r\n                  **cdata['kwargs'])\r\n                File \"/usr/local/lib/python2.7/site-packages/salt/loader.py\", line 1823, in wrapper\r\n                  return f(*args, **kwargs)\r\n                File \"/usr/local/lib/python2.7/site-packages/salt/states/kmod.py\", line 203, in absent\r\n                  unload_result = __salt__['kmod.remove'](mod, persist, comment)\r\n              TypeError: remove() takes at most 2 arguments (3 given)\r\n     Started: 12:28:23.966328\r\n    Duration: 55.677 ms\r\n     Changes:   \r\n```\r\n\r\n### What issues does this PR fix or reference?\r\nNone\r\n\r\n### Previous Behavior\r\n`kmod.absent` is broken under FreeBSD.\r\n\r\n### New Behavior\r\n`kmod.absent` now works on FreeBSD and implements commenting out modules.\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nNo\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/46379",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/46379/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/46379/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/46379/events",
        "html_url": "https://github.com/saltstack/salt/pull/46379",
        "id": 302513718,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTczMDIzNjI3",
        "number": 46379,
        "title": " TypeError: a bytes-like object is required, not 'str'",
        "user": {
            "login": "angeloudy",
            "id": 1284475,
            "node_id": "MDQ6VXNlcjEyODQ0NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1284475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angeloudy",
            "html_url": "https://github.com/angeloudy",
            "followers_url": "https://api.github.com/users/angeloudy/followers",
            "following_url": "https://api.github.com/users/angeloudy/following{/other_user}",
            "gists_url": "https://api.github.com/users/angeloudy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angeloudy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angeloudy/subscriptions",
            "organizations_url": "https://api.github.com/users/angeloudy/orgs",
            "repos_url": "https://api.github.com/users/angeloudy/repos",
            "events_url": "https://api.github.com/users/angeloudy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angeloudy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-03-06T00:10:33Z",
        "updated_at": "2018-03-07T15:00:47Z",
        "closed_at": "2018-03-07T15:00:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/46379",
            "html_url": "https://github.com/saltstack/salt/pull/46379",
            "diff_url": "https://github.com/saltstack/salt/pull/46379.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/46379.patch"
        },
        "body": "This fixes the bytes type error:\r\n\r\n```\r\nFile \"/usr/local/lib/python3.6/site-packages/salt/state.py\", line 1851, in call\r\n                      **cdata['kwargs'])\r\n                    File \"/usr/local/lib/python3.6/site-packages/salt/loader.py\", line 1795, in wrapper\r\n                      return f(*args, **kwargs)\r\n                    File \"/usr/local/lib/python3.6/site-packages/salt/states/http.py\", line 96, in query\r\n                      if match in data.get('text', ''):\r\n                  TypeError: a bytes-like object is required, not 'str'\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/46293",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/46293/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/46293/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/46293/events",
        "html_url": "https://github.com/saltstack/salt/pull/46293",
        "id": 301726464,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyNDczNDg0",
        "number": 46293,
        "title": "Fix Python3 comparison `TypeError` in `salt.modules.upstart`",
        "user": {
            "login": "eliasp",
            "id": 48491,
            "node_id": "MDQ6VXNlcjQ4NDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eliasp",
            "html_url": "https://github.com/eliasp",
            "followers_url": "https://api.github.com/users/eliasp/followers",
            "following_url": "https://api.github.com/users/eliasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/eliasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eliasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eliasp/subscriptions",
            "organizations_url": "https://api.github.com/users/eliasp/orgs",
            "repos_url": "https://api.github.com/users/eliasp/repos",
            "events_url": "https://api.github.com/users/eliasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eliasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-03-02T10:48:54Z",
        "updated_at": "2018-03-02T20:41:41Z",
        "closed_at": "2018-03-02T16:36:10Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/46293",
            "html_url": "https://github.com/saltstack/salt/pull/46293",
            "diff_url": "https://github.com/saltstack/salt/pull/46293.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/46293.patch"
        },
        "body": "Use `len()` to determine the number of keys in a dictionary.\r\n\r\n#44624 introduced a Python3 incompatible comparison where a dict is\r\ncompared against an integer, causing breakage on Ubuntu 18.04/bionic\r\nwhich uses Python3 by default for SaltStack:\r\n\r\n```\r\nFile \"/usr/lib/python3/dist-packages/salt/modules/upstart.py\", line 100, in _find_utmp\r\n  if result > 0:\r\nTypeError: '>' not supported between instances of 'dict' and 'int'\r\n```\r\n\r\n### What does this PR do?\r\nSee commit msg\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/pull/44624#discussion_r156496576\r\n\r\n### Previous Behavior\r\n```\r\nFile \"/usr/lib/python3/dist-packages/salt/modules/upstart.py\", line 100, in _find_utmp\r\n  if result > 0:\r\nTypeError: '>' not supported between instances of 'dict' and 'int'\r\n```\r\n\r\n### New Behavior\r\n`salt.modules.upstart` doesn't cause a backtrace anymore\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/48258",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/48258/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/48258/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/48258/events",
        "html_url": "https://github.com/saltstack/salt/pull/48258",
        "id": 334736443,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2NjMyMTY2",
        "number": 48258,
        "title": "preserve tuples for ldap modification operations",
        "user": {
            "login": "nullify005",
            "id": 13192879,
            "node_id": "MDQ6VXNlcjEzMTkyODc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13192879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nullify005",
            "html_url": "https://github.com/nullify005",
            "followers_url": "https://api.github.com/users/nullify005/followers",
            "following_url": "https://api.github.com/users/nullify005/following{/other_user}",
            "gists_url": "https://api.github.com/users/nullify005/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nullify005/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nullify005/subscriptions",
            "organizations_url": "https://api.github.com/users/nullify005/orgs",
            "repos_url": "https://api.github.com/users/nullify005/repos",
            "events_url": "https://api.github.com/users/nullify005/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nullify005/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-06-22T03:59:01Z",
        "updated_at": "2018-06-25T14:29:52Z",
        "closed_at": "2018-06-22T15:28:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/48258",
            "html_url": "https://github.com/saltstack/salt/pull/48258",
            "diff_url": "https://github.com/saltstack/salt/pull/48258.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/48258.patch"
        },
        "body": "### What does this PR do?\r\n\r\nPreserves the tuples which are passed into the decoding method for ldap modify operations\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nFixes https://github.com/saltstack/salt/issues/46887#issuecomment-398334439\r\n\r\nSpecifically:\r\n```\r\n          ID: slapd suffix\r\n    Function: ldap.managed\r\n      Result: False\r\n     Comment: An exception occurred in this state: Traceback (most recent call last):\r\n                File \"/usr/lib/python2.7/dist-packages/salt/state.py\", line 1905, in call\r\n                  **cdata['kwargs'])\r\n                File \"/usr/lib/python2.7/dist-packages/salt/loader.py\", line 1830, in wrapper\r\n                  return f(*args, **kwargs)\r\n                File \"/usr/lib/python2.7/dist-packages/salt/states/ldap.py\", line 334, in managed\r\n                  __salt__['ldap3.add'](l, dn, n)\r\n                File \"/usr/lib/python2.7/dist-packages/salt/modules/ldap3.py\", line 417, in add\r\n                  l.c.add_s(dn, modlist)\r\n                File \"/usr/lib/python2.7/dist-packages/ldap/ldapobject.py\", line 209, in add_s\r\n                  msgid = self.add(dn,modlist)\r\n                File \"/usr/lib/python2.7/dist-packages/ldap/ldapobject.py\", line 206, in add\r\n                  return self.add_ext(dn,modlist,None,None)\r\n                File \"/usr/lib/python2.7/dist-packages/ldap/ldapobject.py\", line 191, in add_ext\r\n                  return self._ldap_call(self._l.add_ext,dn,modlist,RequestControlTuples(serverctrls),RequestControlTuples(clientctrls))\r\n                File \"/usr/lib/python2.7/dist-packages/ldap/ldapobject.py\", line 106, in _ldap_call\r\n                  result = func(*args,**kwargs)\r\n              TypeError: ('expected a tuple', ['objectClass', ['top', 'dcObject', 'organization']])\r\n     Started: 03:49:06.574923\r\n    Duration: 7.598 ms\r\n     Changes: \r\n```\r\nWhich I traced to this in modules/ldap3.py before & after the utils.data.decode:\r\n```\r\n[DEBUG   ] ====> modlist before: [(0, u'olcRootPW', [u'{SSHA}whatever'])]\r\n[DEBUG   ] ====> modlist after: [[0, 'olcRootPW', ['{SSHA}whatever']]]\r\n```\r\nNotice that the inner tuple gets converted to a list which the underlying ldap library isn't fond of\r\n\r\nTurning on preserve_tuples fixes the issue\r\n\r\n### Previous Behavior\r\n\r\nldap modify operations fail\r\n\r\n### New Behavior\r\n\r\nldap modify operations succeed\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/47257",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/47257/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/47257/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/47257/events",
        "html_url": "https://github.com/saltstack/salt/pull/47257",
        "id": 317010634,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTgzNTc4Mzg5",
        "number": 47257,
        "title": "Role is not a list but a dictionary",
        "user": {
            "login": "jeroennijhof",
            "id": 988746,
            "node_id": "MDQ6VXNlcjk4ODc0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/988746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroennijhof",
            "html_url": "https://github.com/jeroennijhof",
            "followers_url": "https://api.github.com/users/jeroennijhof/followers",
            "following_url": "https://api.github.com/users/jeroennijhof/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroennijhof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroennijhof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroennijhof/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroennijhof/orgs",
            "repos_url": "https://api.github.com/users/jeroennijhof/repos",
            "events_url": "https://api.github.com/users/jeroennijhof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroennijhof/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-04-23T22:52:32Z",
        "updated_at": "2018-04-25T18:10:40Z",
        "closed_at": "2018-04-24T19:21:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/47257",
            "html_url": "https://github.com/saltstack/salt/pull/47257",
            "diff_url": "https://github.com/saltstack/salt/pull/47257.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/47257.patch"
        },
        "body": "### What does this PR do?\r\nChecks if there is a Role key and make sure it's a dictionary so it could be parsed.\r\n\r\n### What issues does this PR fix or reference?\r\nFixes a bug in salt cloud msazure:\r\n```\r\ninput_endpoint = role['ConfigurationSets']['ConfigurationSet'].get('InputEndpoints', {}).get('InputEndpoint')\r\nTypeError: string indices must be integers\r\n``` \r\n\r\n### Previous Behavior\r\nNot able to list or add input endpoints for azure classic\r\n\r\n### New Behavior\r\nAble to list and add input endpoints for azure classic\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/46729",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/46729/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/46729/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/46729/events",
        "html_url": "https://github.com/saltstack/salt/pull/46729",
        "id": 308993459,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3NzU4NzQx",
        "number": 46729,
        "title": "Performance improvement/error catching in expr_match",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2018-03-27T14:27:39Z",
        "updated_at": "2018-04-04T20:46:13Z",
        "closed_at": "2018-04-04T20:25:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/46729",
            "html_url": "https://github.com/saltstack/salt/pull/46729",
            "diff_url": "https://github.com/saltstack/salt/pull/46729.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/46729.patch"
        },
        "body": "`fnmatch.fnmatch()` does exact matches, so checking for an exact match is an unnecessary extra step.\n\nAdditionally, while regex errors are caught, TypeErrors are not, so the use of non-string expressions/values will result in a traceback. This prevents those tracebacks.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/45090",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/45090/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/45090/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/45090/events",
        "html_url": "https://github.com/saltstack/salt/pull/45090",
        "id": 283394909,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTU5MjkxNTEy",
        "number": 45090,
        "title": "fix TypeError in python 3",
        "user": {
            "login": "angeloudy",
            "id": 1284475,
            "node_id": "MDQ6VXNlcjEyODQ0NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1284475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angeloudy",
            "html_url": "https://github.com/angeloudy",
            "followers_url": "https://api.github.com/users/angeloudy/followers",
            "following_url": "https://api.github.com/users/angeloudy/following{/other_user}",
            "gists_url": "https://api.github.com/users/angeloudy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angeloudy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angeloudy/subscriptions",
            "organizations_url": "https://api.github.com/users/angeloudy/orgs",
            "repos_url": "https://api.github.com/users/angeloudy/repos",
            "events_url": "https://api.github.com/users/angeloudy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angeloudy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-12-19T22:51:19Z",
        "updated_at": "2017-12-22T18:11:13Z",
        "closed_at": "2017-12-22T18:11:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/45090",
            "html_url": "https://github.com/saltstack/salt/pull/45090",
            "diff_url": "https://github.com/saltstack/salt/pull/45090.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/45090.patch"
        },
        "body": "move https://github.com/saltstack/salt/pull/45077/commits/383d1e99702e710f37c659610cebb76696dc3e16 to 2017.7\r\npython3 expect str instead of bytes\r\n\r\n\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nYes/No\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/47242",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/47242/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/47242/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/47242/events",
        "html_url": "https://github.com/saltstack/salt/pull/47242",
        "id": 316799603,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTgzNDI0NzY5",
        "number": 47242,
        "title": "PY3 fix for zeromq setsockopt",
        "user": {
            "login": "aesposito91",
            "id": 23032955,
            "node_id": "MDQ6VXNlcjIzMDMyOTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23032955?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aesposito91",
            "html_url": "https://github.com/aesposito91",
            "followers_url": "https://api.github.com/users/aesposito91/followers",
            "following_url": "https://api.github.com/users/aesposito91/following{/other_user}",
            "gists_url": "https://api.github.com/users/aesposito91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aesposito91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aesposito91/subscriptions",
            "organizations_url": "https://api.github.com/users/aesposito91/orgs",
            "repos_url": "https://api.github.com/users/aesposito91/repos",
            "events_url": "https://api.github.com/users/aesposito91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aesposito91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-04-23T12:54:31Z",
        "updated_at": "2018-04-23T16:38:09Z",
        "closed_at": "2018-04-23T16:38:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/47242",
            "html_url": "https://github.com/saltstack/salt/pull/47242",
            "diff_url": "https://github.com/saltstack/salt/pull/47242.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/47242.patch"
        },
        "body": "What does this PR do?\r\n\r\nResolves the following traceback, appears related to zmq changes -\r\n\r\n[CRITICAL] Engine 'napalm_syslog' could not be started!\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/salt/engines/init.py\", line 128, in run\r\nself.engineself.fun\r\nFile \"/usr/lib/python2.7/dist-packages/salt/engines/napalm_syslog.py\", line 317, in start\r\nport=port)\r\nFile \"/usr/lib/python2.7/dist-packages/salt/engines/napalm_syslog.py\", line 234, in _get_transport_recv\r\nreturn TRANSPORT_FUN_MAP[name](address, port, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/salt/engines/napalm_syslog.py\", line 223, in _zmq\r\nsocket.setsockopt(zmq.SUBSCRIBE, '')\r\nFile \"zmq/backend/cython/socket.pyx\", line 426, in zmq.backend.cython.socket.Socket.set\r\nTypeError: unicode not allowed, use setsockopt_string\r\nTests written?\r\n\r\nNo.\r\nCommits signed with GPG?\r\n\r\nNo.\r\n\r\nPlease review Salt's Contributing Guide for best practices.\r\n\r\nSee GitHub's page on GPG signing for more information about signing commits with GPG.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/42760",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/42760/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/42760/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/42760/events",
        "html_url": "https://github.com/saltstack/salt/pull/42760",
        "id": 248150930,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTM0Mjc1Njg0",
        "number": 42760,
        "title": "Catch TypeError thrown by m2crypto when parsing missing subjects in c\u2026",
        "user": {
            "login": "AFriemann",
            "id": 1730315,
            "node_id": "MDQ6VXNlcjE3MzAzMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1730315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AFriemann",
            "html_url": "https://github.com/AFriemann",
            "followers_url": "https://api.github.com/users/AFriemann/followers",
            "following_url": "https://api.github.com/users/AFriemann/following{/other_user}",
            "gists_url": "https://api.github.com/users/AFriemann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AFriemann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AFriemann/subscriptions",
            "organizations_url": "https://api.github.com/users/AFriemann/orgs",
            "repos_url": "https://api.github.com/users/AFriemann/repos",
            "events_url": "https://api.github.com/users/AFriemann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AFriemann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2017-08-05T02:02:57Z",
        "updated_at": "2018-02-20T10:08:30Z",
        "closed_at": "2017-08-14T18:58:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/42760",
            "html_url": "https://github.com/saltstack/salt/pull/42760",
            "diff_url": "https://github.com/saltstack/salt/pull/42760.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/42760.patch"
        },
        "body": "### What does this PR do?\r\n\r\nFix an error in `x509.certificate_managed` with missing (optional) subjects in created x509 certificates with `m2crypto 0.26.0`.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\n#40490 (saltstack x509 incompatible to m2crypto 0.26.0)\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/47725",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/47725/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/47725/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/47725/events",
        "html_url": "https://github.com/saltstack/salt/pull/47725",
        "id": 324459859,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTg5MDY0MDIz",
        "number": 47725,
        "title": "network_settings beacon: Update example to follow new cfg convention",
        "user": {
            "login": "bbczeuz",
            "id": 11089403,
            "node_id": "MDQ6VXNlcjExMDg5NDAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11089403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bbczeuz",
            "html_url": "https://github.com/bbczeuz",
            "followers_url": "https://api.github.com/users/bbczeuz/followers",
            "following_url": "https://api.github.com/users/bbczeuz/following{/other_user}",
            "gists_url": "https://api.github.com/users/bbczeuz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bbczeuz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bbczeuz/subscriptions",
            "organizations_url": "https://api.github.com/users/bbczeuz/orgs",
            "repos_url": "https://api.github.com/users/bbczeuz/repos",
            "events_url": "https://api.github.com/users/bbczeuz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bbczeuz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-05-18T15:40:44Z",
        "updated_at": "2018-06-01T19:50:09Z",
        "closed_at": "2018-06-01T17:58:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/47725",
            "html_url": "https://github.com/saltstack/salt/pull/47725",
            "diff_url": "https://github.com/saltstack/salt/pull/47725.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/47725.patch"
        },
        "body": "### What does this PR do?\r\nWith 2018.3, the beacon cfg changed to a list. Simultaneously, the type of the ```interfaces``` section of the ```network_settings``` beacon changed from list to dict. This PR reflects this change in an updated example and extra handler that catches the outdated cfg syntax\r\n\r\n### What issues does this PR fix or reference?\r\nnone, it simply didn't work.\r\n\r\n### Previous Behavior\r\nUsing the original example (https://docs.saltstack.com/en/latest/ref/beacons/all/salt.beacons.network_settings.html#module-salt.beacons.network_settings):\r\n```\r\nbeacons:\r\n  network_settings:\r\n    - interfaces:\r\n        - eth0:\r\n            ipaddr:\r\n            promiscuity:\r\n              onvalue: 1\r\n        - eth1:\r\n            linkmode:\r\n```\r\n\r\nResults in:\r\n```\r\n2018-05-18 16:23:05,601 [salt.minion      :2486][CRITICAL][4538] The beacon errored: \r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/salt/minion.py\", line 2484, in handle_beacons\r\n    beacons = self.process_beacons(self.functions)\r\n  File \"/usr/lib/python2.7/dist-packages/salt/minion.py\", line 444, in process_beacons\r\n    return self.beacons.process(b_conf, self.opts['grains'])  # pylint: disable=no-member\r\n  File \"/usr/lib/python2.7/dist-packages/salt/beacons/__init__.py\", line 104, in process\r\n    valid, vcomment = self.beacons[validate_str](b_config[mod])\r\n  File \"/usr/lib/python2.7/dist-packages/salt/beacons/network_settings.py\", line 64, in validate\r\n    if not isinstance(_config['interfaces'][item], dict):\r\nTypeError: list indices must be integers, not dict\r\n```\r\n\r\n### New Behavior\r\nThe original example from above now shows:\r\n```\r\n2018-05-18 17:28:32,724 [salt.beacons     :108 ][INFO    ][6975] Beacon network_settings configuration invalid, not running.\r\ninterfaces section for network_settings beacon must be a dictionary.\r\n```\r\n\r\nWith the updated example, the beacon works as expected :)\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/45908",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/45908/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/45908/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/45908/events",
        "html_url": "https://github.com/saltstack/salt/pull/45908",
        "id": 295290524,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTY3ODA3MzA0",
        "number": 45908,
        "title": "Fix for #45884 (\"TypeError: can't serialize <NodeImage\" when calling salt-cloud with the dimensiondata driver)",
        "user": {
            "login": "tintoy",
            "id": 1646284,
            "node_id": "MDQ6VXNlcjE2NDYyODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1646284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tintoy",
            "html_url": "https://github.com/tintoy",
            "followers_url": "https://api.github.com/users/tintoy/followers",
            "following_url": "https://api.github.com/users/tintoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tintoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tintoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tintoy/subscriptions",
            "organizations_url": "https://api.github.com/users/tintoy/orgs",
            "repos_url": "https://api.github.com/users/tintoy/repos",
            "events_url": "https://api.github.com/users/tintoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tintoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2018-02-07T20:59:03Z",
        "updated_at": "2018-02-12T22:05:29Z",
        "closed_at": "2018-02-12T22:05:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/45908",
            "html_url": "https://github.com/saltstack/salt/pull/45908",
            "diff_url": "https://github.com/saltstack/salt/pull/45908.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/45908.patch"
        },
        "body": "### What does this PR do?\r\n\r\n* Fixes the behaviour of the `dimensiondata` cloud driver when deploying a new server by ensuring that event payloads are in a format that can be serialised by msgpack (i.e. only dicts, lists, and intrinsic data types; no raw Libcloud objects).\r\n* Adds a couple of integration tests for the `dimensiondata` driver (there were none before) including one to deploy a server.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\n* \"TypeError: can't serialize <NodeImage\" error when calling salt-cloud to create a new server with the dimensiondata driver (saltstack/salt#45884)\r\n\r\n### Tests written?\r\n\r\nYes (integration).\r\n\r\n### Commits signed with GPG?\r\n\r\nYes. Using my key (C6AFE8C008E7F2B3).",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/46416",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/46416/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/46416/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/46416/events",
        "html_url": "https://github.com/saltstack/salt/pull/46416",
        "id": 303079685,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTczNDM3NjIz",
        "number": 46416,
        "title": "Fix cp.push empty file",
        "user": {
            "login": "dincamihai",
            "id": 1615643,
            "node_id": "MDQ6VXNlcjE2MTU2NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1615643?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dincamihai",
            "html_url": "https://github.com/dincamihai",
            "followers_url": "https://api.github.com/users/dincamihai/followers",
            "following_url": "https://api.github.com/users/dincamihai/following{/other_user}",
            "gists_url": "https://api.github.com/users/dincamihai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dincamihai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dincamihai/subscriptions",
            "organizations_url": "https://api.github.com/users/dincamihai/orgs",
            "repos_url": "https://api.github.com/users/dincamihai/repos",
            "events_url": "https://api.github.com/users/dincamihai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dincamihai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-03-07T12:29:55Z",
        "updated_at": "2018-03-26T17:52:47Z",
        "closed_at": "2018-03-26T17:52:47Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/46416",
            "html_url": "https://github.com/saltstack/salt/pull/46416",
            "diff_url": "https://github.com/saltstack/salt/pull/46416.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/46416.patch"
        },
        "body": "Co-authored-by: Jochen Breuer <jbreuer@suse.de>\r\n\r\n### What does this PR do?\r\n\r\nWhen running `cp.push` I get this in salt-master log:\r\n\r\n```\r\n[ERROR   ] Error in function _file_recv:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/salt/master.py\", line 1776, in run_func\r\n    ret = getattr(self, func)(load)\r\n  File \"/usr/lib/python3.6/site-packages/salt/master.py\", line 1454, in _file_recv\r\n    fp_.write(load['data'])\r\nTypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\nUsing `salt.utils.stringutils.to_str` didn't help so I am using plain `encode('utf8')`.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/46786",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/46786/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/46786/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/46786/events",
        "html_url": "https://github.com/saltstack/salt/pull/46786",
        "id": 309932209,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTc4NDYzNjE0",
        "number": 46786,
        "title": "Return int(-1) when pidfile contains invalid data",
        "user": {
            "login": "twangboy",
            "id": 9383935,
            "node_id": "MDQ6VXNlcjkzODM5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9383935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twangboy",
            "html_url": "https://github.com/twangboy",
            "followers_url": "https://api.github.com/users/twangboy/followers",
            "following_url": "https://api.github.com/users/twangboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/twangboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twangboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twangboy/subscriptions",
            "organizations_url": "https://api.github.com/users/twangboy/orgs",
            "repos_url": "https://api.github.com/users/twangboy/repos",
            "events_url": "https://api.github.com/users/twangboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twangboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-03-29T23:14:45Z",
        "updated_at": "2018-04-03T02:08:12Z",
        "closed_at": "2018-04-02T18:42:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/46786",
            "html_url": "https://github.com/saltstack/salt/pull/46786",
            "diff_url": "https://github.com/saltstack/salt/pull/46786.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/46786.patch"
        },
        "body": "### What does this PR do?\r\nDISCLAIMER: I know this may not be the right fix. Please recommend the appropriate solution. Perhaps the bug is upstream in `psutil`.\r\n\r\nReturns `int(-1)` instead of `None` when the `pidfile` contains invalid data such as null bytes. This was an issue on Windows when salt-minion is running as a service. The issue doesn't occur with salt-minion running in debug mode.\r\n\r\nHere's a pidfile with null bytes. Save the file as `salt-minion.pid` and place it in the pidfile location. (`C:\\salt\\var\\run\\salt-minion.pid`):\r\n![salt-minion.pid](https://user-images.githubusercontent.com/9383935/38117581-0edc1bc8-3373-11e8-9029-9e8b683c1bf3.jpg)\r\n\r\nAlso uses salt.utils.win_functions.get_parent_pid function to maintain sync with Linux.\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/issues/46757\r\n\r\n### Previous Behavior\r\nThe salt minion service would fail to start. The NSSM would continue attempting to start the service causing it to burn a lot of CPU cycles.\r\n\r\nThe minion log showed repeated instances of this stacktrace:\r\n```\r\n2018-03-28 13:17:15,009 [salt.log.setup   :1133][ERROR   ][20736] An un-handled exception was caught by salt's global exception handler:\r\nTypeError: unorderable types: NoneType() < int()\r\nTraceback (most recent call last):\r\n  File \"c:\\salt\\bin\\Scripts\\salt-minion\", line 26, in <module>\r\n    salt_minion()\r\n  File \"c:\\salt\\bin\\lib\\site-packages\\salt\\scripts.py\", line 168, in salt_minion\r\n    minion.start()\r\n  File \"c:\\salt\\bin\\lib\\site-packages\\salt\\cli\\daemons.py\", line 342, in start\r\n    super(Minion, self).start()\r\n  File \"c:\\salt\\bin\\lib\\site-packages\\salt\\utils\\parsers.py\", line 1039, in start\r\n    self.prepare()\r\n  File \"c:\\salt\\bin\\lib\\site-packages\\salt\\cli\\daemons.py\", line 299, in prepare\r\n    if self.check_running():\r\n  File \"c:\\salt\\bin\\lib\\site-packages\\salt\\utils\\parsers.py\", line 1022, in check_running\r\n    if self.check_pidfile() and self.is_daemonized(pid):\r\n  File \"c:\\salt\\bin\\lib\\site-packages\\salt\\utils\\parsers.py\", line 1028, in is_daemonized\r\n    return os_is_running(pid)\r\n  File \"c:\\salt\\bin\\lib\\site-packages\\salt\\utils\\process.py\", line 187, in os_is_running\r\n    return psutil.pid_exists(pid)\r\n  File \"c:\\salt\\bin\\lib\\site-packages\\psutil\\__init__.py\", line 1438, in pid_exists\r\n    if pid < 0:\r\nTypeError: unorderable types: NoneType() < int()\r\n```\r\n\r\n### New Behavior\r\nThe salt-minion starts successfully.\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/47774",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/47774/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/47774/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/47774/events",
        "html_url": "https://github.com/saltstack/salt/pull/47774",
        "id": 325342089,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTg5Njk5Nzgx",
        "number": 47774,
        "title": "Fix azurearm bootstrap exception",
        "user": {
            "login": "nicholasmhughes",
            "id": 3858651,
            "node_id": "MDQ6VXNlcjM4NTg2NTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3858651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nicholasmhughes",
            "html_url": "https://github.com/nicholasmhughes",
            "followers_url": "https://api.github.com/users/nicholasmhughes/followers",
            "following_url": "https://api.github.com/users/nicholasmhughes/following{/other_user}",
            "gists_url": "https://api.github.com/users/nicholasmhughes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nicholasmhughes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nicholasmhughes/subscriptions",
            "organizations_url": "https://api.github.com/users/nicholasmhughes/orgs",
            "repos_url": "https://api.github.com/users/nicholasmhughes/repos",
            "events_url": "https://api.github.com/users/nicholasmhughes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nicholasmhughes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-05-22T15:17:05Z",
        "updated_at": "2018-05-23T20:37:50Z",
        "closed_at": "2018-05-23T20:23:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/47774",
            "html_url": "https://github.com/saltstack/salt/pull/47774",
            "diff_url": "https://github.com/saltstack/salt/pull/47774.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/47774.patch"
        },
        "body": "### What does this PR do?\r\nThis PR fixes an issue where a dictionary with nested Azure objects is passed to the bootstrap, causing it to fail when attempting to serialize the VM object.\r\n\r\n### What issues does this PR fix or reference?\r\n#47096 \r\n\r\n### Previous Behavior\r\n```\r\n[ERROR ] There was a profile error: can't serialize <azure.mgmt.compute.models.virtual_hard_disk.VirtualHardDisk object at 0x7f7cf254b690>\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/salt/cloud/cli.py\", line 281, in run\r\nself.config.get('names')\r\nFile \"/usr/lib/python2.7/dist-packages/salt/cloud/init.py\", line 1454, in run_profile\r\nret[name] = self.create(vm_)\r\nFile \"/usr/lib/python2.7/dist-packages/salt/cloud/init.py\", line 1284, in create\r\noutput = self.cloudsfunc\r\nFile \"/usr/lib/python2.7/dist-packages/salt/cloud/clouds/azurearm.py\", line 1305, in create\r\nret = utils['cloud.bootstrap'](vm_, opts)\r\nFile \"/usr/lib/python2.7/dist-packages/salt/utils/cloud.py\", line 553, in bootstrap\r\ntransport=opts.get('transport', 'zeromq')\r\nFile \"/usr/lib/python2.7/dist-packages/salt/utils/cloud.py\", line 1786, in fire_event\r\nevent.fire_event(args, tag)\r\nFile \"/usr/lib/python2.7/dist-packages/salt/utils/event.py\", line 718, in fire_event\r\ndump_data = self.serial.dumps(data)\r\nFile \"/usr/lib/python2.7/dist-packages/salt/payload.py\", line 213, in dumps\r\nreturn msgpack.dumps(msg, default=ext_type_encoder, use_bin_type=use_bin_type)\r\nFile \"/usr/lib/python2.7/dist-packages/msgpack/init.py\", line 47, in packb\r\nreturn Packer(**kwargs).pack(o)\r\nFile \"msgpack/_packer.pyx\", line 223, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:223)\r\nFile \"msgpack/_packer.pyx\", line 225, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:225)\r\nFile \"msgpack/_packer.pyx\", line 184, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:184)\r\nFile \"msgpack/_packer.pyx\", line 184, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:184)\r\nFile \"msgpack/_packer.pyx\", line 184, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:184)\r\nFile \"msgpack/_packer.pyx\", line 213, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:213)\r\nFile \"msgpack/_packer.pyx\", line 184, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:184)\r\nFile \"msgpack/_packer.pyx\", line 220, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:220)\r\nTypeError: can't serialize <azure.mgmt.compute.models.virtual_hard_disk.VirtualHardDisk object at 0x7f7cf254b690>\r\n```\r\n\r\n### New Behavior\r\nNo exception thrown.\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nYes\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/47017",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/47017/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/47017/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/47017/events",
        "html_url": "https://github.com/saltstack/salt/pull/47017",
        "id": 313321506,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwOTAxNjQy",
        "number": 47017,
        "title": "Don\u2019t encode a unicode string",
        "user": {
            "login": "opdude",
            "id": 312493,
            "node_id": "MDQ6VXNlcjMxMjQ5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/312493?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/opdude",
            "html_url": "https://github.com/opdude",
            "followers_url": "https://api.github.com/users/opdude/followers",
            "following_url": "https://api.github.com/users/opdude/following{/other_user}",
            "gists_url": "https://api.github.com/users/opdude/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/opdude/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/opdude/subscriptions",
            "organizations_url": "https://api.github.com/users/opdude/orgs",
            "repos_url": "https://api.github.com/users/opdude/repos",
            "events_url": "https://api.github.com/users/opdude/events{/privacy}",
            "received_events_url": "https://api.github.com/users/opdude/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-04-11T13:22:01Z",
        "updated_at": "2018-04-13T13:31:33Z",
        "closed_at": "2018-04-13T13:31:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/47017",
            "html_url": "https://github.com/saltstack/salt/pull/47017",
            "diff_url": "https://github.com/saltstack/salt/pull/47017.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/47017.patch"
        },
        "body": "### What does this PR do?\r\n\r\nFixes pip installations on windows, by not encoding a unicode string.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\n### Previous Behavior\r\n```\r\n$$$$$$ [ERROR   ] An exception occurred in this state: Traceback (most recent call last):\r\n$$$$$$   File \"C:\\salt\\bin\\lib\\site-packages\\salt\\state.py\", line 1878, in call\r\n$$$$$$     **cdata['kwargs'])\r\n$$$$$$   File \"C:\\salt\\bin\\lib\\site-packages\\salt\\loader.py\", line 1823, in wrapper\r\n$$$$$$     return f(*args, **kwargs)\r\n$$$$$$   File \"C:\\salt\\bin\\lib\\site-packages\\salt\\states\\pip_state.py\", line 685, in installed\r\n$$$$$$     upgrade, user, cwd, bin_env)\r\n$$$$$$   File \"C:\\salt\\bin\\lib\\site-packages\\salt\\states\\pip_state.py\", line 193, in _check_if_installed\r\n$$$$$$     user=user, cwd=cwd)\r\n$$$$$$   File \"C:\\Users\\BUILDU~1\\AppData\\Local\\Temp\\kitchen\\var\\cache\\salt\\minion\\extmods\\modules\\pip.py\", line 1082, in list_\r\n$$$$$$     for line in freeze(bin_env=bin_env, user=user, cwd=cwd, env_vars=env_vars):\r\n$$$$$$   File \"C:\\Users\\BUILDU~1\\AppData\\Local\\Temp\\kitchen\\var\\cache\\salt\\minion\\extmods\\modules\\pip.py\", line 1019, in freeze\r\n$$$$$$     pip_bin = _get_pip_bin(bin_env)\r\n$$$$$$   File \"C:\\Users\\BUILDU~1\\AppData\\Local\\Temp\\kitchen\\var\\cache\\salt\\minion\\extmods\\modules\\pip.py\", line 135, in _get_pip_bin\r\n$$$$$$     which_result.encode('string-escape', errors='ignore')\r\n$$$$$$ TypeError: escape_encode() argument 1 must be string, not unicode\r\n```\r\n\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/46248",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/46248/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/46248/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/46248/events",
        "html_url": "https://github.com/saltstack/salt/pull/46248",
        "id": 301072619,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxOTg5OTc5",
        "number": 46248,
        "title": "[develop] display usage for runners when missing arguments",
        "user": {
            "login": "garethgreenaway",
            "id": 718525,
            "node_id": "MDQ6VXNlcjcxODUyNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/718525?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garethgreenaway",
            "html_url": "https://github.com/garethgreenaway",
            "followers_url": "https://api.github.com/users/garethgreenaway/followers",
            "following_url": "https://api.github.com/users/garethgreenaway/following{/other_user}",
            "gists_url": "https://api.github.com/users/garethgreenaway/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garethgreenaway/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garethgreenaway/subscriptions",
            "organizations_url": "https://api.github.com/users/garethgreenaway/orgs",
            "repos_url": "https://api.github.com/users/garethgreenaway/repos",
            "events_url": "https://api.github.com/users/garethgreenaway/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garethgreenaway/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-02-28T15:40:43Z",
        "updated_at": "2018-03-01T19:44:19Z",
        "closed_at": "2018-03-01T19:44:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/46248",
            "html_url": "https://github.com/saltstack/salt/pull/46248",
            "diff_url": "https://github.com/saltstack/salt/pull/46248.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/46248.patch"
        },
        "body": "### What does this PR do?\r\nCatch TypeError when not all required arguments are passed to a runner.  Display error and usage.\r\n\r\n### What issues does this PR fix or reference?\r\n#45325\r\n\r\n### Previous Behavior\r\nAn traceback would occur if the wrong number of required arguments was passed to a Salt runner.\r\n\r\n### New Behavior\r\nThis change catches the exception, displays the error then includes the usage documentation for the Salt runner.\r\n\r\n### Tests written?\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes/No\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/45698",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/45698/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/45698/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/45698/events",
        "html_url": "https://github.com/saltstack/salt/pull/45698",
        "id": 291682616,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1MjAzNDcw",
        "number": 45698,
        "title": "Fix traceback when exception instances are passed to our custom exceptions",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-01-25T19:12:38Z",
        "updated_at": "2018-01-27T20:42:14Z",
        "closed_at": "2018-01-26T20:04:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/45698",
            "html_url": "https://github.com/saltstack/salt/pull/45698",
            "diff_url": "https://github.com/saltstack/salt/pull/45698.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/45698.patch"
        },
        "body": "This fixes a traceback in `unit.serializers.test_serializers.TestSerializers.test_serialize_yaml`:\n\n\n```\nTraceback (most recent call last):\n  File \"/testing/tests/unit/serializers/test_serializers.py\", line 60, in test_serialize_yaml\n    deserialized = yaml.deserialize(serialized)\n  File \"/testing/salt/serializers/yaml.py\", line 57, in deserialize\n    raise DeserializationError(error)\n  File \"/testing/salt/exceptions.py\", line 256, in __init__\n    exc_str = salt.utils.stringutils.to_unicode(message)\n  File \"/testing/salt/utils/stringutils.py\", line 110, in to_unicode\n    raise TypeError('expected str or bytearray')\nTypeError: expected str or bytearray\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/45324",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/45324/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/45324/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/45324/events",
        "html_url": "https://github.com/saltstack/salt/pull/45324",
        "id": 286796396,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTYxNjY0MjM5",
        "number": 45324,
        "title": "Support date payload",
        "user": {
            "login": "github-abcde",
            "id": 6707706,
            "node_id": "MDQ6VXNlcjY3MDc3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6707706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-abcde",
            "html_url": "https://github.com/github-abcde",
            "followers_url": "https://api.github.com/users/github-abcde/followers",
            "following_url": "https://api.github.com/users/github-abcde/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-abcde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-abcde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-abcde/subscriptions",
            "organizations_url": "https://api.github.com/users/github-abcde/orgs",
            "repos_url": "https://api.github.com/users/github-abcde/repos",
            "events_url": "https://api.github.com/users/github-abcde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-abcde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-01-08T16:09:16Z",
        "updated_at": "2018-02-05T15:12:41Z",
        "closed_at": "2018-02-05T14:57:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/45324",
            "html_url": "https://github.com/saltstack/salt/pull/45324",
            "diff_url": "https://github.com/saltstack/salt/pull/45324.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/45324.patch"
        },
        "body": "\u2026pport for datetime.date.\r\n\r\nThese are converted to strings (which msgpack has no problem with).\r\nOptionally, we could wrap the encoded string in a msgpack ExtType - with a custom-assigned type-number which we will need when decoding - in order to preserve the datetime objects.\r\nRemoved unused and unreachable code.\r\n\r\n### What does this PR do?\r\nThis extends the fix mentioned in https://github.com/saltstack/salt/issues/21721 to include datetime.date. It also cleans up some unused code and provides a (small) framework to add other object types.\r\nIt also fixes the case where multiple objects of different (by default in msgpack unsupported) types are present in a message, like datetime.date *and* datetime.datetime.\r\n\r\n### What issues does this PR fix or reference?\r\nThere is no direct issue, but https://github.com/saltstack/salt/issues/21721 is related.\r\n\r\n### Previous Behavior\r\nIncluding a string in an .sls-file, parsed by YAML into a datetime.date object causes a TypeError to be raised upon trying to serialize the data in payload.dumps()\r\n\r\n### New Behavior\r\nThe datetime.date-object is converted by the custom code into a string, which msgpack has no problems serializing. Also, a message is (attempted to be) packed multiple times, for every TypeError that is resolved by the new code.\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/44900",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/44900/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/44900/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/44900/events",
        "html_url": "https://github.com/saltstack/salt/pull/44900",
        "id": 280798000,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTU3NDI0ODg0",
        "number": 44900,
        "title": "Fix TypeError during rbenv ruby installation when rbenv is not found",
        "user": {
            "login": "xuhcc",
            "id": 1660460,
            "node_id": "MDQ6VXNlcjE2NjA0NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1660460?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xuhcc",
            "html_url": "https://github.com/xuhcc",
            "followers_url": "https://api.github.com/users/xuhcc/followers",
            "following_url": "https://api.github.com/users/xuhcc/following{/other_user}",
            "gists_url": "https://api.github.com/users/xuhcc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xuhcc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xuhcc/subscriptions",
            "organizations_url": "https://api.github.com/users/xuhcc/orgs",
            "repos_url": "https://api.github.com/users/xuhcc/repos",
            "events_url": "https://api.github.com/users/xuhcc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xuhcc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gtmanfred",
            "id": 732321,
            "node_id": "MDQ6VXNlcjczMjMyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/732321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gtmanfred",
            "html_url": "https://github.com/gtmanfred",
            "followers_url": "https://api.github.com/users/gtmanfred/followers",
            "following_url": "https://api.github.com/users/gtmanfred/following{/other_user}",
            "gists_url": "https://api.github.com/users/gtmanfred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gtmanfred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gtmanfred/subscriptions",
            "organizations_url": "https://api.github.com/users/gtmanfred/orgs",
            "repos_url": "https://api.github.com/users/gtmanfred/repos",
            "events_url": "https://api.github.com/users/gtmanfred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gtmanfred/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gtmanfred",
                "id": 732321,
                "node_id": "MDQ6VXNlcjczMjMyMQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/732321?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gtmanfred",
                "html_url": "https://github.com/gtmanfred",
                "followers_url": "https://api.github.com/users/gtmanfred/followers",
                "following_url": "https://api.github.com/users/gtmanfred/following{/other_user}",
                "gists_url": "https://api.github.com/users/gtmanfred/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gtmanfred/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gtmanfred/subscriptions",
                "organizations_url": "https://api.github.com/users/gtmanfred/orgs",
                "repos_url": "https://api.github.com/users/gtmanfred/repos",
                "events_url": "https://api.github.com/users/gtmanfred/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gtmanfred/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2017-12-10T10:12:22Z",
        "updated_at": "2017-12-14T17:37:14Z",
        "closed_at": "2017-12-14T17:37:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/44900",
            "html_url": "https://github.com/saltstack/salt/pull/44900",
            "diff_url": "https://github.com/saltstack/salt/pull/44900.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/44900.patch"
        },
        "body": "### What does this PR do?\r\n\r\nThis PR fixes the `TypeError: 'bool' object has no attribute '__getitem__'` error during execution of **rbenv.installed** state. Error occurred when salt couldn't find rbenv. Now state execution finishes with \"Failed to install ruby\" message in that case.\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nRelated to #44811.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/45815",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/45815/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/45815/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/45815/events",
        "html_url": "https://github.com/saltstack/salt/pull/45815",
        "id": 293387306,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTY2NDMyMTA1",
        "number": 45815,
        "title": "Route53 AliasTarget and Infinite loop fixes",
        "user": {
            "login": "nullify005",
            "id": 13192879,
            "node_id": "MDQ6VXNlcjEzMTkyODc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13192879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nullify005",
            "html_url": "https://github.com/nullify005",
            "followers_url": "https://api.github.com/users/nullify005/followers",
            "following_url": "https://api.github.com/users/nullify005/following{/other_user}",
            "gists_url": "https://api.github.com/users/nullify005/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nullify005/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nullify005/subscriptions",
            "organizations_url": "https://api.github.com/users/nullify005/orgs",
            "repos_url": "https://api.github.com/users/nullify005/repos",
            "events_url": "https://api.github.com/users/nullify005/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nullify005/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-02-01T02:59:52Z",
        "updated_at": "2018-02-12T21:51:56Z",
        "closed_at": "2018-02-12T21:51:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/45815",
            "html_url": "https://github.com/saltstack/salt/pull/45815",
            "diff_url": "https://github.com/saltstack/salt/pull/45815.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/45815.patch"
        },
        "body": "### What does this PR do?\r\n\r\n1. Ensures that we don't get stuck in an infinite loop when change_resource_record_sets results in an API error that isn't rate limiting (such as the API refusing to make a change)\r\n2. Correctly checks to see if ResourceRecords coming back from API is None prior to attempting to iterate / sort over it\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nhttps://github.com/saltstack/salt/issues/45816\r\nhttps://github.com/saltstack/salt/issues/45817\r\n\r\n### Previous Behavior\r\n\r\n1. An infinite loop when you attempt to change a DNS entry from say a CNAME to an A without cleaning up first\r\n2. TypeError: 'NoneType' object is not iterable if the DNS entry you are attempting to change doesn't have an upstream ResourceRecords entry (such as when it only has an AliasTarget)\r\n\r\n### New Behavior\r\n\r\n1. module correctly throws an exception when it encounters an API error which is not associated with rate limiting\r\n2. Correctly allows for empty ResourceRecords coming back from the API when attempting to determine if an update needs to be made\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/45114",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/45114/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/45114/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/45114/events",
        "html_url": "https://github.com/saltstack/salt/pull/45114",
        "id": 283711569,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTU5NTMwNTIz",
        "number": 45114,
        "title": "Move pam library load to try/except block",
        "user": {
            "login": "twangboy",
            "id": 9383935,
            "node_id": "MDQ6VXNlcjkzODM5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9383935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twangboy",
            "html_url": "https://github.com/twangboy",
            "followers_url": "https://api.github.com/users/twangboy/followers",
            "following_url": "https://api.github.com/users/twangboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/twangboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twangboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twangboy/subscriptions",
            "organizations_url": "https://api.github.com/users/twangboy/orgs",
            "repos_url": "https://api.github.com/users/twangboy/repos",
            "events_url": "https://api.github.com/users/twangboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twangboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 723851628,
                "node_id": "MDU6TGFiZWw3MjM4NTE2Mjg=",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRELEASED%20-%202016.11.9",
                "name": "ZRELEASED - 2016.11.9",
                "color": "fbca04",
                "default": false,
                "description": ""
            },
            {
                "id": 678162187,
                "node_id": "MDU6TGFiZWw2NzgxNjIxODc=",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRELEASED%20-%202017.7.3",
                "name": "ZRELEASED - 2017.7.3",
                "color": "fbca04",
                "default": false,
                "description": ""
            },
            {
                "id": 433720155,
                "node_id": "MDU6TGFiZWw0MzM3MjAxNTU=",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRELEASED%20-%202018.3.0",
                "name": "ZRELEASED - 2018.3.0",
                "color": "fbca04",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-12-20T22:14:36Z",
        "updated_at": "2017-12-21T19:30:52Z",
        "closed_at": "2017-12-21T14:37:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/45114",
            "html_url": "https://github.com/saltstack/salt/pull/45114",
            "diff_url": "https://github.com/saltstack/salt/pull/45114.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/45114.patch"
        },
        "body": "### What does this PR do?\r\nThis was throwing an error because there is no pam library in Windows.\r\n\r\nStacktrace:\r\n```\r\n[CPU:58.2%|MEM:69.9%]  ... 14:41:42,114 [salt.loader                                :1452][ERROR   ] Failed to import\r\nauth pam, this is due most likely to a syntax error:\r\nTraceback (most recent call last):\r\n  File \"c:\\salt-dev\\salt\\salt\\loader.py\", line 1435, in _load_module\r\n    mod = imp.load_module(mod_namespace, fn_, fpath, desc)\r\n  File \"c:\\salt-dev\\salt\\salt\\auth\\pam.py\", line 51, in <module>\r\n    LIBPAM = CDLL(find_library('pam'))\r\n  File \"C:\\Python27\\lib\\ctypes\\__init__.py\", line 362, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nTypeError: LoadLibrary() argument 1 must be string, not None\r\n```\r\n\r\n### What issues does this PR fix or reference?\r\nFound in test suite run\r\n\r\n### Previous Behavior\r\nLoader throws a stack trace in Windows\r\n\r\n### New Behavior\r\nNo stack trace\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/45327",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/45327/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/45327/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/45327/events",
        "html_url": "https://github.com/saltstack/salt/pull/45327",
        "id": 286838724,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTYxNjkzMDQ5",
        "number": 45327,
        "title": "Backport #44861 to 2016.11",
        "user": {
            "login": "lomeroe",
            "id": 8835244,
            "node_id": "MDQ6VXNlcjg4MzUyNDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8835244?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lomeroe",
            "html_url": "https://github.com/lomeroe",
            "followers_url": "https://api.github.com/users/lomeroe/followers",
            "following_url": "https://api.github.com/users/lomeroe/following{/other_user}",
            "gists_url": "https://api.github.com/users/lomeroe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lomeroe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lomeroe/subscriptions",
            "organizations_url": "https://api.github.com/users/lomeroe/orgs",
            "repos_url": "https://api.github.com/users/lomeroe/repos",
            "events_url": "https://api.github.com/users/lomeroe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lomeroe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-01-08T18:20:43Z",
        "updated_at": "2018-01-08T21:10:41Z",
        "closed_at": "2018-01-08T21:10:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/45327",
            "html_url": "https://github.com/saltstack/salt/pull/45327",
            "diff_url": "https://github.com/saltstack/salt/pull/45327.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/45327.patch"
        },
        "body": "What does this PR do?\r\nBackport #44861 to 2016.11\r\n\r\nCheck for values other than 0 or 1 and return Invalid Value. In this case, the setting causing failure was a REG_BINARY value of 30 00. Valid values are 00 and 01.\r\n\r\nAdds a Try/Except block to handle unexpected values.\r\n\r\nWhat issues does this PR fix or reference?\r\nhttps://saltstack.zendesk.com/agent/tickets/1542\r\n\r\nPrevious Behavior\r\nTraceback (most recent call last): \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\state.py\", line 1837, in call \r\n**cdata['kwargs']) \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\loader.py\", line 1794, in wrapper \r\nreturn f(*args, **kwargs) \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\states\\win_lgpo.py\", line 244, in set_ \r\nhierarchical_return=False) \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\modules\\win_lgpo.py\", line 4993, in get \r\n'Get') \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\modules\\win_lgpo.py\", line 2934, in _transformValue \r\nreturn getattr(_policydata, policy['Transform'][transform_type])(value, **t_kwargs) \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\modules\\win_lgpo.py\", line 2426, in _binary_enable_zero_disable_one_conversion \r\nif ord(val) == 0: \r\nTypeError: ord() expected a character, but string of length 2 found \r\nNew Behavior\r\nCompletes successfully\r\n\r\nTests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\nSee GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.\r\n\r\n  ",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/45481",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/45481/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/45481/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/45481/events",
        "html_url": "https://github.com/saltstack/salt/pull/45481",
        "id": 289074875,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTYzMzAxMzgw",
        "number": 45481,
        "title": "Fix if statement in __init__()",
        "user": {
            "login": "twangboy",
            "id": 9383935,
            "node_id": "MDQ6VXNlcjkzODM5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9383935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twangboy",
            "html_url": "https://github.com/twangboy",
            "followers_url": "https://api.github.com/users/twangboy/followers",
            "following_url": "https://api.github.com/users/twangboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/twangboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twangboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twangboy/subscriptions",
            "organizations_url": "https://api.github.com/users/twangboy/orgs",
            "repos_url": "https://api.github.com/users/twangboy/repos",
            "events_url": "https://api.github.com/users/twangboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twangboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 433720155,
                "node_id": "MDU6TGFiZWw0MzM3MjAxNTU=",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRELEASED%20-%202018.3.0",
                "name": "ZRELEASED - 2018.3.0",
                "color": "fbca04",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-01-16T22:15:53Z",
        "updated_at": "2018-01-17T17:46:19Z",
        "closed_at": "2018-01-17T15:29:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/45481",
            "html_url": "https://github.com/saltstack/salt/pull/45481",
            "diff_url": "https://github.com/saltstack/salt/pull/45481.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/45481.patch"
        },
        "body": "### What does this PR do?\r\nFixes an issue where the `aptpkg.py` execution module was modifying the environment on non-debian machines. This was causing a stack trace in recent releases of salt due to using Unicode literals.\r\n\r\n### What issues does this PR fix or reference?\r\nExposed by: #45440\r\n\r\n### Previous Behavior\r\nThe following stack trace occurs on the head of oxygen:\r\n```\r\n[ERROR   ] Failed to import module minion, this is due most likely to a syntax error:\r\nTraceback (most recent call last):\r\n  File \"c:\\dev\\salt\\salt\\loader.py\", line 1458, in _load_module\r\n    mod = imp.load_module(mod_namespace, fn_, fpath, desc)\r\n  File \"c:\\dev\\salt\\salt\\modules\\minion.py\", line 14, in <module>\r\n    import salt.key\r\n  File \"c:\\dev\\salt\\salt\\key.py\", line 21, in <module>\r\n    import salt.daemons.masterapi\r\n  File \"c:\\dev\\salt\\salt\\daemons\\masterapi.py\", line 35, in <module>\r\n    import salt.utils.gitfs\r\n  File \"c:\\dev\\salt\\salt\\utils\\gitfs.py\", line 92, in <module>\r\n    import git\r\n  File \"c:\\python27\\lib\\site-packages\\git\\__init__.py\", line 82, in <module>\r\n    refresh()\r\n  File \"c:\\python27\\lib\\site-packages\\git\\__init__.py\", line 73, in refresh\r\n    if not Git.refresh(path=path):\r\n  File \"c:\\python27\\lib\\site-packages\\git\\cmd.py\", line 230, in refresh\r\n    cls().version()\r\n  File \"c:\\python27\\lib\\site-packages\\git\\cmd.py\", line 551, in <lambda>\r\n    return lambda *args, **kwargs: self._call_process(name, *args, **kwargs)\r\n  File \"c:\\python27\\lib\\site-packages\\git\\cmd.py\", line 1010, in _call_process\r\n    return self.execute(call, **exec_kwargs)\r\n  File \"c:\\python27\\lib\\site-packages\\git\\cmd.py\", line 732, in execute\r\n    **subprocess_kwargs\r\n  File \"c:\\python27\\lib\\subprocess.py\", line 390, in __init__\r\n    errread, errwrite)\r\n  File \"c:\\python27\\lib\\subprocess.py\", line 640, in _execute_child\r\n    startupinfo)\r\nTypeError: environment can only contain strings\r\n```\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/43866",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/43866/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/43866/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/43866/events",
        "html_url": "https://github.com/saltstack/salt/pull/43866",
        "id": 262177081,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ0MjQ4NDAw",
        "number": 43866,
        "title": "Fix TypeError: 'NoneType' object is not iterable for list_networks function",
        "user": {
            "login": "mahesh-balumuri",
            "id": 650714,
            "node_id": "MDQ6VXNlcjY1MDcxNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/650714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mahesh-balumuri",
            "html_url": "https://github.com/mahesh-balumuri",
            "followers_url": "https://api.github.com/users/mahesh-balumuri/followers",
            "following_url": "https://api.github.com/users/mahesh-balumuri/following{/other_user}",
            "gists_url": "https://api.github.com/users/mahesh-balumuri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mahesh-balumuri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mahesh-balumuri/subscriptions",
            "organizations_url": "https://api.github.com/users/mahesh-balumuri/orgs",
            "repos_url": "https://api.github.com/users/mahesh-balumuri/repos",
            "events_url": "https://api.github.com/users/mahesh-balumuri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mahesh-balumuri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2017-10-02T18:15:50Z",
        "updated_at": "2017-10-03T20:55:37Z",
        "closed_at": "2017-10-03T20:55:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/43866",
            "html_url": "https://github.com/saltstack/salt/pull/43866",
            "diff_url": "https://github.com/saltstack/salt/pull/43866.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/43866.patch"
        },
        "body": "While running salt-cloud -f list_networks azure-provider\r\n\r\nIt was throwing the error Fix TypeError: 'NoneType' object is not iterable at this line\r\n(for ip_ in subnet.ip_configurations). It was occured when there are no ipconfs available for the subnet.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/44079",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/44079/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/44079/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/44079/events",
        "html_url": "https://github.com/saltstack/salt/pull/44079",
        "id": 265089040,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ2MzE2OTY3",
        "number": 44079,
        "title": "opkg: Fix usage with pkgrepo.managed",
        "user": {
            "login": "skizunov",
            "id": 11562452,
            "node_id": "MDQ6VXNlcjExNTYyNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11562452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skizunov",
            "html_url": "https://github.com/skizunov",
            "followers_url": "https://api.github.com/users/skizunov/followers",
            "following_url": "https://api.github.com/users/skizunov/following{/other_user}",
            "gists_url": "https://api.github.com/users/skizunov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skizunov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skizunov/subscriptions",
            "organizations_url": "https://api.github.com/users/skizunov/orgs",
            "repos_url": "https://api.github.com/users/skizunov/repos",
            "events_url": "https://api.github.com/users/skizunov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skizunov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-10-12T21:16:42Z",
        "updated_at": "2017-10-16T19:58:13Z",
        "closed_at": "2017-10-16T19:58:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/44079",
            "html_url": "https://github.com/saltstack/salt/pull/44079",
            "diff_url": "https://github.com/saltstack/salt/pull/44079.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/44079.patch"
        },
        "body": "### What does this PR do?\r\n\r\nCurrently, when using `pkgrepo.managed`, the following error is reported:\r\n\r\n```\r\nTypeError: get_repo() got an unexpected keyword argument 'ppa_auth'\r\n```\r\n\r\nFix this by adding `**kwargs` to `get_repo` so that it will absorb unused\r\nkwargs instead of erroring out when given an unknown kwarg. Did the same\r\nthing for all other public APIs in this file.\r\n\r\n### Tests written?\r\n\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/44861",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/44861/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/44861/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/44861/events",
        "html_url": "https://github.com/saltstack/salt/pull/44861",
        "id": 279960031,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTU2ODc4MTM4",
        "number": 44861,
        "title": "Fix win_lgpo for unknown values",
        "user": {
            "login": "twangboy",
            "id": 9383935,
            "node_id": "MDQ6VXNlcjkzODM5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9383935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twangboy",
            "html_url": "https://github.com/twangboy",
            "followers_url": "https://api.github.com/users/twangboy/followers",
            "following_url": "https://api.github.com/users/twangboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/twangboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twangboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twangboy/subscriptions",
            "organizations_url": "https://api.github.com/users/twangboy/orgs",
            "repos_url": "https://api.github.com/users/twangboy/repos",
            "events_url": "https://api.github.com/users/twangboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twangboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-12-07T00:47:52Z",
        "updated_at": "2017-12-08T21:01:45Z",
        "closed_at": "2017-12-08T18:52:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/44861",
            "html_url": "https://github.com/saltstack/salt/pull/44861",
            "diff_url": "https://github.com/saltstack/salt/pull/44861.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/44861.patch"
        },
        "body": "### What does this PR do?\r\nCheck for values other than 0 or 1 and return `Invalid Value`. In this case, the setting causing failure was a REG_BINARY value of `30 00`. Valid values are `00` and `01`.\r\n\r\nAdds a Try/Except block to handle unexpected values.\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://saltstack.zendesk.com/agent/tickets/1542\r\n\r\n### Previous Behavior\r\n```\r\nTraceback (most recent call last): \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\state.py\", line 1837, in call \r\n**cdata['kwargs']) \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\loader.py\", line 1794, in wrapper \r\nreturn f(*args, **kwargs) \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\states\\win_lgpo.py\", line 244, in set_ \r\nhierarchical_return=False) \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\modules\\win_lgpo.py\", line 4993, in get \r\n'Get') \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\modules\\win_lgpo.py\", line 2934, in _transformValue \r\nreturn getattr(_policydata, policy['Transform'][transform_type])(value, **t_kwargs) \r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\modules\\win_lgpo.py\", line 2426, in _binary_enable_zero_disable_one_conversion \r\nif ord(val) == 0: \r\nTypeError: ord() expected a character, but string of length 2 found \r\n```\r\n\r\n### New Behavior\r\nCompletes successfully\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/44792",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/44792/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/44792/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/44792/events",
        "html_url": "https://github.com/saltstack/salt/pull/44792",
        "id": 278629161,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTU1OTgxOTE2",
        "number": 44792,
        "title": "Fix sanitize_win_path function",
        "user": {
            "login": "twangboy",
            "id": 9383935,
            "node_id": "MDQ6VXNlcjkzODM5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9383935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twangboy",
            "html_url": "https://github.com/twangboy",
            "followers_url": "https://api.github.com/users/twangboy/followers",
            "following_url": "https://api.github.com/users/twangboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/twangboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twangboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twangboy/subscriptions",
            "organizations_url": "https://api.github.com/users/twangboy/orgs",
            "repos_url": "https://api.github.com/users/twangboy/repos",
            "events_url": "https://api.github.com/users/twangboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twangboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 433720155,
                "node_id": "MDU6TGFiZWw0MzM3MjAxNTU=",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRELEASED%20-%202018.3.0",
                "name": "ZRELEASED - 2018.3.0",
                "color": "fbca04",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2017-12-01T23:42:05Z",
        "updated_at": "2017-12-06T19:55:11Z",
        "closed_at": "2017-12-06T19:54:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/44792",
            "html_url": "https://github.com/saltstack/salt/pull/44792",
            "diff_url": "https://github.com/saltstack/salt/pull/44792.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/44792.patch"
        },
        "body": "### What does this PR do?\r\nFixes problem where the `salt.utils.path.sanitize_win_path` function would fail if it received a Unicode value. This was a problem as the `fileclient` started sending Unicode values on the develop branch. This would cause any state run to fail with the following stacktrace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"c:\\salt-dev\\salt\\salt\\minion.py\", line 1536, in _thread_return\r\n    return_data = minion_instance.executors[fname](opts, data, func, args, kwargs)\r\n  File \"c:\\salt-dev\\salt\\salt\\executors\\direct_call.py\", line 12, in execute\r\n    return func(*args, **kwargs)\r\n  File \"c:\\salt-dev\\salt\\salt\\modules\\state.py\", line 1186, in sls\r\n    high_, errors = st_.render_highstate({opts['environment']: mods})\r\n  File \"c:\\salt-dev\\salt\\salt\\state.py\", line 3728, in render_highstate\r\n    sls, saltenv, mods, matches)\r\n  File \"c:\\salt-dev\\salt\\salt\\state.py\", line 3382, in render_state\r\n    state_data = self.client.get_state(sls, saltenv)\r\n  File \"c:\\salt-dev\\salt\\salt\\fileclient.py\", line 406, in get_state\r\n    sls_url = salt.utils.url.create(sls + u'.sls')\r\n  File \"c:\\salt-dev\\salt\\salt\\utils\\url.py\", line 48, in create\r\n    path = salt.utils.path.sanitize_win_path(path)\r\n  File \"c:\\salt-dev\\salt\\salt\\utils\\path.py\", line 343, in sanitize_win_path\r\n    winpath = winpath.translate(trantab)\r\nTypeError: character mapping must return integer, None or unicode\r\n```\r\n\r\n### What issues does this PR fix or reference?\r\nFound while trying to test another issue\r\n\r\n### Tests written?\r\nNo\r\n\r\n### Commits signed with GPG?\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/44092",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/44092/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/44092/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/44092/events",
        "html_url": "https://github.com/saltstack/salt/pull/44092",
        "id": 265334311,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ2NDkwNzY5",
        "number": 44092,
        "title": "Made sure that unicoded data is sent to sha256()",
        "user": {
            "login": "techhat",
            "id": 287147,
            "node_id": "MDQ6VXNlcjI4NzE0Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/287147?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/techhat",
            "html_url": "https://github.com/techhat",
            "followers_url": "https://api.github.com/users/techhat/followers",
            "following_url": "https://api.github.com/users/techhat/following{/other_user}",
            "gists_url": "https://api.github.com/users/techhat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/techhat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/techhat/subscriptions",
            "organizations_url": "https://api.github.com/users/techhat/orgs",
            "repos_url": "https://api.github.com/users/techhat/repos",
            "events_url": "https://api.github.com/users/techhat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/techhat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-10-13T15:44:18Z",
        "updated_at": "2017-10-17T02:05:53Z",
        "closed_at": "2017-10-13T21:20:12Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/44092",
            "html_url": "https://github.com/saltstack/salt/pull/44092",
            "diff_url": "https://github.com/saltstack/salt/pull/44092.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/44092.patch"
        },
        "body": "### What does this PR do?\r\nThis is actually a Python 3 fix, that surfaces with `GET` requests, which pass an empty string as `data` to the `sha256()` function.\r\n**Python 2:**\r\n```\r\nimport hashlib; hashlib.sha256('').hexdigest()\r\n'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'\r\nimport hashlib; hashlib.sha256(''.encode('utf-8')).hexdigest()\r\n'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'\r\n```\r\n**Python 3:**\r\n```\r\nimport hashlib; hashlib.sha256('').hexdigest()\r\nTypeError: Unicode-objects must be encoded before hashing\r\nimport hashlib; hashlib.sha256(''.encode('utf-8')).hexdigest()\r\n'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'\r\n```\r\n### Tests written?\r\nNo.\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/44700",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/44700/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/44700/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/44700/events",
        "html_url": "https://github.com/saltstack/salt/pull/44700",
        "id": 277206046,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTU0OTQzMDk5",
        "number": 44700,
        "title": "Fix invocation of cron.file with when run with test=True",
        "user": {
            "login": "eradman",
            "id": 1175398,
            "node_id": "MDQ6VXNlcjExNzUzOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1175398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eradman",
            "html_url": "https://github.com/eradman",
            "followers_url": "https://api.github.com/users/eradman/followers",
            "following_url": "https://api.github.com/users/eradman/following{/other_user}",
            "gists_url": "https://api.github.com/users/eradman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eradman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eradman/subscriptions",
            "organizations_url": "https://api.github.com/users/eradman/orgs",
            "repos_url": "https://api.github.com/users/eradman/repos",
            "events_url": "https://api.github.com/users/eradman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eradman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-11-27T23:27:24Z",
        "updated_at": "2017-11-28T14:00:20Z",
        "closed_at": "2017-11-28T04:19:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/44700",
            "html_url": "https://github.com/saltstack/salt/pull/44700",
            "diff_url": "https://github.com/saltstack/salt/pull/44700.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/44700.patch"
        },
        "body": "### What does this PR do?\r\n\r\nFix invocation of `file.check_managed` when testing for cron file changes. For example:\r\n\r\n    root_tasks:\r\n      cron.file:\r\n        - name: salt://t420s/root.cron\r\n        - source_hash: md5=189ceaa871306656312f39a0482c28a1\r\n\r\n\r\n### Previous Behavior\r\n\r\nRemove this section if not relevant\r\n\r\n    (saltenv) $ sudo salt-call --local --file-root=$PWD state.sls_id root_tasks test test=True\r\n    [ERROR   ] An exception occurred in this state: Traceback (most recent call last):\r\n      File \"/home/eradman/local/saltenv/lib/python2.7/site-packages/salt/state.py\", line 1927, in call\r\n        **cdata[u'kwargs'])\r\n      File \"/home/eradman/local/saltenv/lib/python2.7/site-packages/salt/loader.py\", line 1794, in wrapper\r\n        return f(*args, **kwargs)\r\n      File \"/home/eradman/local/saltenv/lib/python2.7/site-packages/salt/states/cron.py\", line 573, in file\r\n        **kwargs\r\n    TypeError: check_managed() takes at least 12 arguments (11 given)\r\n\r\n### New Behavior\r\n\r\n    (saltenv) $ sudo salt-call --local --file-root=$PWD state.sls_id root_tasks test test=True\r\n    local:\r\n    ----------\r\n              ID: root_tasks\r\n        Function: cron.file\r\n            Name: salt://t420s/root.cron\r\n          Result: None\r\n         Comment: The following values are set to be changed:\r\n                  <diff>\r\n         Started: 18:22:59.756001\r\n        Duration: 99.766 ms\r\n         Changes:\r\n    \r\n    Summary for local\r\n    ------------\r\n    Succeeded: 1 (unchanged=1)\r\n    Failed:    0\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/43878",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/43878/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/43878/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/43878/events",
        "html_url": "https://github.com/saltstack/salt/pull/43878",
        "id": 262372673,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ0MzgzMzAy",
        "number": 43878,
        "title": "Bugfix: runners/survey.py Python3 support",
        "user": {
            "login": "hackacad",
            "id": 5919669,
            "node_id": "MDQ6VXNlcjU5MTk2Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5919669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hackacad",
            "html_url": "https://github.com/hackacad",
            "followers_url": "https://api.github.com/users/hackacad/followers",
            "following_url": "https://api.github.com/users/hackacad/following{/other_user}",
            "gists_url": "https://api.github.com/users/hackacad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hackacad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hackacad/subscriptions",
            "organizations_url": "https://api.github.com/users/hackacad/orgs",
            "repos_url": "https://api.github.com/users/hackacad/repos",
            "events_url": "https://api.github.com/users/hackacad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hackacad/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-10-03T10:10:04Z",
        "updated_at": "2017-10-05T18:52:33Z",
        "closed_at": "2017-10-05T18:52:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/43878",
            "html_url": "https://github.com/saltstack/salt/pull/43878",
            "diff_url": "https://github.com/saltstack/salt/pull/43878.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/43878.patch"
        },
        "body": "### What does this PR do?\r\nFix Survey Runner for Python 3\r\n\r\n### What issues does this PR fix or reference?\r\nnone\r\n\r\n### Previous Behavior\r\nError when using Python3:\r\n```\r\nFile \"/usr/local/lib/python3.6/site-packages/salt/runners/survey.py\", line 174, in _get_pool_results\r\ndigest = hashlib.sha256(str(minions[minion])).hexdigest()\r\nTypeError: Unicode-objects must be encoded before hashing\r\n\r\n```\r\n\r\n### New Behavior\r\nfixed issue\r\n\r\n### Tests written?\r\n\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/44818",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/44818/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/44818/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/44818/events",
        "html_url": "https://github.com/saltstack/salt/pull/44818",
        "id": 279102579,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTU2MjczODk4",
        "number": 44818,
        "title": "Allow test arg to be used on master or pillar",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 433720155,
                "node_id": "MDU6TGFiZWw0MzM3MjAxNTU=",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRELEASED%20-%202018.3.0",
                "name": "ZRELEASED - 2018.3.0",
                "color": "fbca04",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-12-04T18:38:53Z",
        "updated_at": "2017-12-08T22:36:26Z",
        "closed_at": "2017-12-08T22:36:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/44818",
            "html_url": "https://github.com/saltstack/salt/pull/44818",
            "diff_url": "https://github.com/saltstack/salt/pull/44818.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/44818.patch"
        },
        "body": "### What does this PR do?\r\nCurrently `test` is already a default option in the master config but it was not being queried in the `_get_test_value`. This adds the ability for someone to set `test: True` in pillar or master configuration.\r\n\r\nThis approach does change the order of a config. The order will look like: pillar, master and then minion. Most other config orders would look like so minion, pillar, master. So if this change in order is not the best approach the other solution is to use a new configuration value, since test=False is a default value, it will always grab that value from the minion opts.\r\n\r\n### What issues does this PR fix or reference?\r\nhttps://github.com/saltstack/salt/issues/37840\r\n\r\nThis PR also fixes a bug I found on develop:\r\n\r\nThe bug would show up when running `test=True` with a state that had previously run using a `file.managed` state:\r\n\r\n```\r\nlocal:\r\n----------\r\n          ID: /tmp/test\r\n    Function: file.managed\r\n      Result: False\r\n     Comment: An exception occurred in this state: Traceback (most recent call last):\r\n                File \"/home/ch3ll/git/salt/salt/state.py\", line 1927, in call\r\n                  **cdata[u'kwargs'])\r\n                File \"/home/ch3ll/git/salt/salt/loader.py\", line 1799, in wrapper\r\n                  return f(*args, **kwargs)\r\n                File \"/home/ch3ll/git/salt/salt/states/file.py\", line 2354, in managed\r\n                  **kwargs\r\n                File \"/home/ch3ll/git/salt/salt/modules/file.py\", line 4635, in check_managed_changes\r\n                  group, mode, attrs, saltenv, contents)\r\n                File \"/home/ch3ll/git/salt/salt/modules/file.py\", line 4767, in check_file_meta\r\n                  diff_attrs = _cmp_attrs(name, attrs)\r\n                File \"/home/ch3ll/git/salt/salt/modules/file.py\", line 528, in _cmp_attrs\r\n                  new = [chr for chr in attrs if chr not in lattrs]\r\n              TypeError: 'NoneType' object is not iterable\r\n     Started: 13:45:40.801858\r\n    Duration: 23.997 ms\r\n     Changes:   \r\n\r\nSummary for local\r\n------------\r\nSucceeded: 0\r\nFailed:    1\r\n------------\r\nTotal states run:     1\r\n```\r\n\r\n### Tests written?\r\n\r\nYes\r\n\r\n### Commits signed with GPG?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/44080",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/44080/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/44080/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/44080/events",
        "html_url": "https://github.com/saltstack/salt/pull/44080",
        "id": 265102740,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ2MzI2MzMx",
        "number": 44080,
        "title": "Fix a regression in `group.present` in Windows",
        "user": {
            "login": "twangboy",
            "id": 9383935,
            "node_id": "MDQ6VXNlcjkzODM5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9383935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twangboy",
            "html_url": "https://github.com/twangboy",
            "followers_url": "https://api.github.com/users/twangboy/followers",
            "following_url": "https://api.github.com/users/twangboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/twangboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twangboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twangboy/subscriptions",
            "organizations_url": "https://api.github.com/users/twangboy/orgs",
            "repos_url": "https://api.github.com/users/twangboy/repos",
            "events_url": "https://api.github.com/users/twangboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twangboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-10-12T22:03:21Z",
        "updated_at": "2017-10-20T15:56:11Z",
        "closed_at": "2017-10-19T20:10:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/44080",
            "html_url": "https://github.com/saltstack/salt/pull/44080",
            "diff_url": "https://github.com/saltstack/salt/pull/44080.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/44080.patch"
        },
        "body": "### What does this PR do?\r\nFixes a regression in `group.present` in Windows.\r\nCaused by https://github.com/saltstack/salt/pull/43097\r\n\r\n### What issues does this PR fix or reference?\r\nFound in testing\r\n\r\n### Previous Behavior\r\nBecause the state module is calling the execution module passing `gid` positionally it would fail with the following stack trace:\r\n```\r\nAn exception occurred in this state: Traceback (most recent call last):\r\n                File \"C:\\salt\\bin\\lib\\site-packages\\salt\\state.py\", line 1843, in call\r\n                  **cdata['kwargs'])\r\n                File \"C:\\salt\\bin\\lib\\site-packages\\salt\\loader.py\", line 1795, in wrapper\r\n                  return f(*args, **kwargs)\r\n                File \"C:\\salt\\bin\\lib\\site-packages\\salt\\states\\group.py\", line 249, in present\r\n                  system=system):\r\n              TypeError: add() takes exactly 1 argument (3 given)\r\n```\r\n\r\n### New Behavior\r\nState module passes `gid` as a keyword arg.\r\n\r\n### Tests written?\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40980",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40980/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40980/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40980/events",
        "html_url": "https://github.com/saltstack/salt/pull/40980",
        "id": 225397586,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTE4MzUzMjg1",
        "number": 40980,
        "title": "Fix docker_events TypeError",
        "user": {
            "login": "ezh",
            "id": 118212,
            "node_id": "MDQ6VXNlcjExODIxMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/118212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezh",
            "html_url": "https://github.com/ezh",
            "followers_url": "https://api.github.com/users/ezh/followers",
            "following_url": "https://api.github.com/users/ezh/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezh/subscriptions",
            "organizations_url": "https://api.github.com/users/ezh/orgs",
            "repos_url": "https://api.github.com/users/ezh/repos",
            "events_url": "https://api.github.com/users/ezh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2017-05-01T07:20:17Z",
        "updated_at": "2017-05-02T15:58:10Z",
        "closed_at": "2017-05-02T15:58:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40980",
            "html_url": "https://github.com/saltstack/salt/pull/40980",
            "diff_url": "https://github.com/saltstack/salt/pull/40980.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40980.patch"
        },
        "body": "```\r\nTraceback (most recent call last):\r\n  File \"/home/ezh/.virtualenvs/salt/lib/python3.4/site-packages/salt/engines/docker_events.py\", line 82, in start\r\n    data = json.loads(event)\r\n  File \"/usr/lib64/python3.4/json/__init__.py\", line 312, in loads\r\n    s.__class__.__name__))\r\nTypeError: the JSON object must be str, not 'bytes'\r\n[INFO    ] Process <class 'salt.engines.Engine'> (12581) died with exit status 0, restarting...\r\n```\r\n\r\n### What does this PR do?\r\n\r\nFix docker-events.py TypeError on Python 3\r\n\r\n### What issues does this PR fix or reference?\r\n\r\n#40979\r\n\r\n### Tests written?\r\n\r\nNo\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/38035",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/38035/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/38035/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/38035/events",
        "html_url": "https://github.com/saltstack/salt/pull/38035",
        "id": 192955973,
        "node_id": "MDExOlB1bGxSZXF1ZXN0OTYxNjU2OTk=",
        "number": 38035,
        "title": "Updated to return status from make_repo similar to rpmbuild.py",
        "user": {
            "login": "dmurphy18",
            "id": 9943204,
            "node_id": "MDQ6VXNlcjk5NDMyMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9943204?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dmurphy18",
            "html_url": "https://github.com/dmurphy18",
            "followers_url": "https://api.github.com/users/dmurphy18/followers",
            "following_url": "https://api.github.com/users/dmurphy18/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmurphy18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dmurphy18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmurphy18/subscriptions",
            "organizations_url": "https://api.github.com/users/dmurphy18/orgs",
            "repos_url": "https://api.github.com/users/dmurphy18/repos",
            "events_url": "https://api.github.com/users/dmurphy18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dmurphy18/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-12-01T20:37:56Z",
        "updated_at": "2017-10-16T19:27:40Z",
        "closed_at": "2016-12-01T22:30:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/38035",
            "html_url": "https://github.com/saltstack/salt/pull/38035",
            "diff_url": "https://github.com/saltstack/salt/pull/38035.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/38035.patch"
        },
        "body": "### What does this PR do?\r\nFix missing return status from debbuild.py, see https://github.com/saltstack/salt-pack/issues/180\r\nProblem is due to http://localhost:8080/source/xref/salt/salt/modules/rpmbuild.py?r=a5f6630e\r\nwhere a return was added to rpmbuild.py but not debbuild.py\r\n\r\n\r\n### What issues does this PR fix or reference?\r\nFix missing return status from debbuild.py, \r\nsee https://github.com/saltstack/salt-pack/issues/180\r\nsee https://github.com/saltstack/salt-pack/issues/132\r\n\r\n### Previous Behavior\r\nRemoves error output due to missing return status\r\n\r\n          ID: /srv/debian/2016.11.0/pkgs/debian8/amd64\r\n    Function: pkgbuild.repo\r\n      Result: False\r\n     Comment: An exception occurred in this state: Traceback (most recent call last):\r\n                File \"/usr/lib/python2.7/dist-packages/salt/state.py\", line 1744, in call\r\n                  **cdata['kwargs'])\r\n                File \"/usr/lib/python2.7/dist-packages/salt/loader.py\", line 1702, in wrapper\r\n                  return f(*args, **kwargs)\r\n                File \"/usr/lib/python2.7/dist-packages/salt/states/pkgbuild.py\", line 375, in repo\r\n                  if res['retcode'] > 0:\r\n              TypeError: 'NoneType' object has no attribute '__getitem__'\r\n     Started: 11:36:38.387888\r\n    Duration: 137925.978 ms\r\n     Changes:\r\n\r\n### New Behavior\r\ndebbuild.py now returns status, and produces no error output when making a repo\r\n          ID: /srv/debian/2016.11.0/pkgs/debian8/amd64\r\n    Function: pkgbuild.repo\r\n      Result: True\r\n     Comment: [TRACE   ] Trying pysss.getgrouplist for 'root'\r\n              [TRACE   ] Trying generic group list for 'root'\r\n              [TRACE   ] Group list for user 'root': '['adm', 'root']'\r\n     Started: 11:40:08.297167\r\n    Duration: 137415.989 ms\r\n     Changes:   \r\n              ----------\r\n              refresh:\r\n                  True\r\n\r\nSummary for d8m\r\n------------\r\nSucceeded: 2 (changed=1)\r\nFailed:    0\r\n------------\r\nTotal states run:     2\r\nTotal run time: 137.459 s\r\n\r\n### Tests written?\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40967",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40967/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40967/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40967/events",
        "html_url": "https://github.com/saltstack/salt/pull/40967",
        "id": 225238840,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTE4MjY1MTk1",
        "number": 40967,
        "title": "[40966] Fix ssh client TypeError",
        "user": {
            "login": "ezh",
            "id": 118212,
            "node_id": "MDQ6VXNlcjExODIxMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/118212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezh",
            "html_url": "https://github.com/ezh",
            "followers_url": "https://api.github.com/users/ezh/followers",
            "following_url": "https://api.github.com/users/ezh/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezh/subscriptions",
            "organizations_url": "https://api.github.com/users/ezh/orgs",
            "repos_url": "https://api.github.com/users/ezh/repos",
            "events_url": "https://api.github.com/users/ezh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2017-04-29T07:02:39Z",
        "updated_at": "2017-05-04T16:39:58Z",
        "closed_at": "2017-05-04T16:39:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40967",
            "html_url": "https://github.com/saltstack/salt/pull/40967",
            "diff_url": "https://github.com/saltstack/salt/pull/40967.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40967.patch"
        },
        "body": "salt-ssh -i '*' test.ping\r\n...\r\nFile \"/home/ezh/.virtualenvs/salt/lib/python3.4/site-packages/salt/client/ssh/__init__.py\", line 1129, in cmd_block\r\nFile \"/home/ezh/.virtualenvs/salt/lib/python3.4/site-packages/salt/client/ssh/__init__.py\", line 1084, in shim_cmd\r\nFile \"/home/ezh/.virtualenvs/salt/lib64/python3.4/tempfile.py\", line 417, in func_wrapper\r\n    return func(*args, **kwargs)\r\nTypeError: 'str' does not support the buffer interface\r\n\r\n### What does this PR do?\r\n\r\nFix salt-ssh TypeError on python 3\r\n\r\n### What issues does this PR fix or reference?\r\n\r\n#40966\r\n\r\n### Tests written?\r\n\r\nYes/No\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/42984",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/42984/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/42984/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/42984/events",
        "html_url": "https://github.com/saltstack/salt/pull/42984",
        "id": 250671345,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTM2MDU3MDUz",
        "number": 42984,
        "title": "Fix param name in postgres_schema.py state file",
        "user": {
            "login": "lukasz-baranowski",
            "id": 3787729,
            "node_id": "MDQ6VXNlcjM3ODc3Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3787729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lukasz-baranowski",
            "html_url": "https://github.com/lukasz-baranowski",
            "followers_url": "https://api.github.com/users/lukasz-baranowski/followers",
            "following_url": "https://api.github.com/users/lukasz-baranowski/following{/other_user}",
            "gists_url": "https://api.github.com/users/lukasz-baranowski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lukasz-baranowski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lukasz-baranowski/subscriptions",
            "organizations_url": "https://api.github.com/users/lukasz-baranowski/orgs",
            "repos_url": "https://api.github.com/users/lukasz-baranowski/repos",
            "events_url": "https://api.github.com/users/lukasz-baranowski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lukasz-baranowski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-08-16T15:38:07Z",
        "updated_at": "2017-08-17T16:07:39Z",
        "closed_at": "2017-08-17T16:07:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/42984",
            "html_url": "https://github.com/saltstack/salt/pull/42984",
            "diff_url": "https://github.com/saltstack/salt/pull/42984.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/42984.patch"
        },
        "body": "### What does this PR do?\r\nChanges parameter name in state _postgres_schema.present_ and _postgres_schema.absent_ passed to module _postgres.py_.\r\n\r\n### What issues does this PR fix or reference?\r\nThis is a fix for [Bug 42980](https://github.com/saltstack/salt/issues/42980) introduced by [PR 42544](https://github.com/saltstack/salt/pull/42544)\r\n\r\n### Previous Behavior\r\n```\r\n[INFO    ] Executing state postgres_schema.present for [some_schema]\r\n[ERROR   ] An exception occurred in this state: Traceback (most recent call last):\r\n  File \"/usr/lib/python2.7/site-packages/salt/state.py\", line 1845, in call\r\n    **cdata['kwargs'])\r\n  File \"/usr/lib/python2.7/site-packages/salt/loader.py\", line 1801, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/salt/states/postgres_schema.py\", line 75, in present\r\n    schema_attr = __salt__['postgres.schema_get'](dbname, name, **db_args)\r\nTypeError: schema_get() got an unexpected keyword argument 'runas'\r\n\r\n[INFO    ] Completed state [some_schema] at time 14:35:03.455412 duration_in_ms=0.762\r\n```\r\n\r\n### Tests written?\r\nNo\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/42841",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/42841/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/42841/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/42841/events",
        "html_url": "https://github.com/saltstack/salt/pull/42841",
        "id": 249259602,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTM1MDYwMDUy",
        "number": 42841,
        "title": "Fix bug #42818 in win_iis module",
        "user": {
            "login": "Mapel88",
            "id": 12735495,
            "node_id": "MDQ6VXNlcjEyNzM1NDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12735495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mapel88",
            "html_url": "https://github.com/Mapel88",
            "followers_url": "https://api.github.com/users/Mapel88/followers",
            "following_url": "https://api.github.com/users/Mapel88/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mapel88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mapel88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mapel88/subscriptions",
            "organizations_url": "https://api.github.com/users/Mapel88/orgs",
            "repos_url": "https://api.github.com/users/Mapel88/repos",
            "events_url": "https://api.github.com/users/Mapel88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mapel88/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-08-10T07:41:52Z",
        "updated_at": "2017-08-10T13:44:21Z",
        "closed_at": "2017-08-10T13:44:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/42841",
            "html_url": "https://github.com/saltstack/salt/pull/42841",
            "diff_url": "https://github.com/saltstack/salt/pull/42841.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/42841.patch"
        },
        "body": "**This is the problematic code:\r\nnew_cert_bindings = list_cert_bindings(site)\r\nif binding_info not in new_cert_bindings(site):\r\n\r\nremoved (site) from second line as follows and it's fixed:\r\nnew_cert_bindings = list_cert_bindings(site)\r\nif binding_info not in new_cert_bindings:**\r\n\r\n### What does this PR do?\r\nFix bug #42818 in win_iis module\r\n\r\n### What issues does this PR fix or reference?\r\nException in function \"create_cert_binding\".\r\n\r\n\r\n### Previous Behavior\r\nfunction fails with the following exception:\r\n2017-08-09 00:23:32,096 [salt.state ][ERROR ][2948] An exception occurred in this state: Traceback (most recent call last):\r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\state.py\", line 1837, in call\r\n**cdata['kwargs'])\r\nFile \"c:\\salt\\bin\\lib\\site-packages\\salt\\loader.py\", line 1794, in wrapper\r\nreturn f(*args, **kwargs)\r\nFile \"c:\\salt\\var\\cache\\salt\\minion\\extmods\\states\\win_iisV2.py\", line 326, in create_cert_binding\r\nipaddress, port, sslflags)\r\nFile \"c:\\salt\\var\\cache\\salt\\minion\\extmods\\modules\\win_iisV2.py\", line 861, in create_cert_binding\r\nif binding_info not in new_cert_bindings(site):\r\nTypeError: 'dict' object is not callable\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40768",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40768/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40768/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40768/events",
        "html_url": "https://github.com/saltstack/salt/pull/40768",
        "id": 222799968,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTE2NTkyMjM5",
        "number": 40768,
        "title": "Fix _build_parent_list function for Py3",
        "user": {
            "login": "twangboy",
            "id": 9383935,
            "node_id": "MDQ6VXNlcjkzODM5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9383935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twangboy",
            "html_url": "https://github.com/twangboy",
            "followers_url": "https://api.github.com/users/twangboy/followers",
            "following_url": "https://api.github.com/users/twangboy/following{/other_user}",
            "gists_url": "https://api.github.com/users/twangboy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twangboy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twangboy/subscriptions",
            "organizations_url": "https://api.github.com/users/twangboy/orgs",
            "repos_url": "https://api.github.com/users/twangboy/repos",
            "events_url": "https://api.github.com/users/twangboy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twangboy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-04-19T16:43:44Z",
        "updated_at": "2017-06-14T21:21:13Z",
        "closed_at": "2017-04-20T17:15:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40768",
            "html_url": "https://github.com/saltstack/salt/pull/40768",
            "diff_url": "https://github.com/saltstack/salt/pull/40768.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40768.patch"
        },
        "body": "### What does this PR do?\r\nFixes a Py3 compatibility issue with the `_build_parent_list` function. It was throwing an error: `TypeError: 'dict_keys' object does not support indexing`\r\n\r\nIn Py3 `dict.keys()` returns an iterable view instead of a list. The easiest fix in this case is just to convert to a list, ie `list(dict.keys())`. It works in this case because the dict in question only has one element. We just need the name of its key, so `list(dict.keys())[0]` will work fine.\r\n\r\n### What issues does this PR fix or reference?\r\nIssue found by @rdutch in testing nitrogen\r\n\r\n### Previous Behavior\r\nStack trace:\r\n```\r\nAn exception occurred in this state: Traceback (most recent call last):\r\n                File \"c:\\salt\\bin\\lib\\site-packages\\salt\\state.py\", line 1822, in call\r\n                  **cdata['kwargs'])\r\n                File \"c:\\salt\\bin\\lib\\site-packages\\salt\\loader.py\", line 1727, in wrapper\r\n                  return f(*args, **kwargs)\r\n                File \"c:\\salt\\bin\\lib\\site-packages\\salt\\states\\win_lgpo.py\", line 233, in set_\r\n                  adml_language=adml_language)\r\n                File \"c:\\salt\\bin\\lib\\site-packages\\salt\\modules\\win_lgpo.py\", line 4737, in get_policy_info\r\n                  adml_policy_resources=adml_policy_resources)\r\n                File \"c:\\salt\\bin\\lib\\site-packages\\salt\\modules\\win_lgpo.py\", line 4637, in _lookup_admin_template\r\n                  adml_policy_resources)\r\n                File \"c:\\salt\\bin\\lib\\site-packages\\salt\\modules\\win_lgpo.py\", line 3868, in _build_parent_list\r\n                  policy_namespace = policy_definition.nsmap.keys()[0]\r\n              TypeError: 'dict_keys' object does not support indexing\r\n```\r\n\r\n### Tests written?\r\nNo\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40972",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40972/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40972/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40972/events",
        "html_url": "https://github.com/saltstack/salt/pull/40972",
        "id": 225315357,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTE4MzA2MDkx",
        "number": 40972,
        "title": "[#40971] Fix TypeError: must be str, not bytes for ssh_py_shim",
        "user": {
            "login": "ezh",
            "id": 118212,
            "node_id": "MDQ6VXNlcjExODIxMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/118212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezh",
            "html_url": "https://github.com/ezh",
            "followers_url": "https://api.github.com/users/ezh/followers",
            "following_url": "https://api.github.com/users/ezh/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezh/subscriptions",
            "organizations_url": "https://api.github.com/users/ezh/orgs",
            "repos_url": "https://api.github.com/users/ezh/repos",
            "events_url": "https://api.github.com/users/ezh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2017-04-30T09:15:29Z",
        "updated_at": "2017-05-02T16:06:25Z",
        "closed_at": "2017-05-02T16:06:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40972",
            "html_url": "https://github.com/saltstack/salt/pull/40972",
            "diff_url": "https://github.com/saltstack/salt/pull/40972.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40972.patch"
        },
        "body": "salt-ssh '*' test.ping\r\n...\r\n[DEBUG   ] RETCODE localhost: 1\r\n[DEBUG   ] SHIM retcode(1) and command: Traceback (most recent call last):\r\n[DEBUG   ] LazyLoaded raw.output\r\n{'ezh': {'stdout': 'Traceback (most recent call last):\\n  File \"<string>\", line 155, in <module>\\n  File \"<string>\", line 264, in <module>\\n  File \"<string>\", line 251, in main\\nTypeError: must be str, not bytes', 'retcode': 1, 'stderr': 'command-line line 0: Unsupported option \"gssapiauthentication\"\\r\\nConnection to localhost closed.\\r\\n'}\r\n\r\n### What does this PR do?\r\n\r\nFix TypeError in SSH SHIM\r\n\r\n### What issues does this PR fix or reference?\r\n\r\n#40971\r\n\r\n### Tests written?\r\n\r\nNo\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/41476",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/41476/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/41476/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/41476/events",
        "html_url": "https://github.com/saltstack/salt/pull/41476",
        "id": 231815197,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTIyNzY3OTg5",
        "number": 41476,
        "title": "Aliasing of salt-mine functions in salt-ssh",
        "user": {
            "login": "IJustWorkHere",
            "id": 16140964,
            "node_id": "MDQ6VXNlcjE2MTQwOTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/16140964?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IJustWorkHere",
            "html_url": "https://github.com/IJustWorkHere",
            "followers_url": "https://api.github.com/users/IJustWorkHere/followers",
            "following_url": "https://api.github.com/users/IJustWorkHere/following{/other_user}",
            "gists_url": "https://api.github.com/users/IJustWorkHere/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IJustWorkHere/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IJustWorkHere/subscriptions",
            "organizations_url": "https://api.github.com/users/IJustWorkHere/orgs",
            "repos_url": "https://api.github.com/users/IJustWorkHere/repos",
            "events_url": "https://api.github.com/users/IJustWorkHere/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IJustWorkHere/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-05-27T17:12:09Z",
        "updated_at": "2017-05-31T17:36:57Z",
        "closed_at": "2017-05-31T17:36:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/41476",
            "html_url": "https://github.com/saltstack/salt/pull/41476",
            "diff_url": "https://github.com/saltstack/salt/pull/41476.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/41476.patch"
        },
        "body": "### What does this PR do?\r\nAllows a user to use salt mine aliases in salt-ssh\r\n\r\n### What issues does this PR fix or reference?\r\nFixes #41377\r\n\r\n### Previous Behavior\r\nWhen executing a mine.get for an aliased value the error TypeError encountered executing say_hello: 'FunctionWrapper' object is not callable was returned\r\n\r\n### New Behavior\r\nIf the salt mine alias is defined correctly than the value is returned from the mine\r\n\r\n### Tests written?\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/41106",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/41106/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/41106/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/41106/events",
        "html_url": "https://github.com/saltstack/salt/pull/41106",
        "id": 226673971,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTE5MjQ2MDI0",
        "number": 41106,
        "title": "Update str.split call in boto_apigateway module",
        "user": {
            "login": "rallytime",
            "id": 6547906,
            "node_id": "MDQ6VXNlcjY1NDc5MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6547906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rallytime",
            "html_url": "https://github.com/rallytime",
            "followers_url": "https://api.github.com/users/rallytime/followers",
            "following_url": "https://api.github.com/users/rallytime/following{/other_user}",
            "gists_url": "https://api.github.com/users/rallytime/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rallytime/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rallytime/subscriptions",
            "organizations_url": "https://api.github.com/users/rallytime/orgs",
            "repos_url": "https://api.github.com/users/rallytime/repos",
            "events_url": "https://api.github.com/users/rallytime/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rallytime/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-05-05T19:48:09Z",
        "updated_at": "2017-05-09T15:59:47Z",
        "closed_at": "2017-05-09T15:59:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/41106",
            "html_url": "https://github.com/saltstack/salt/pull/41106",
            "diff_url": "https://github.com/saltstack/salt/pull/41106.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/41106.patch"
        },
        "body": "The previous way of calling `str.split(path, '/')` was causing a TypeError in the test runs of the boto_apigateway state and module unit tests. Switching this to `path.split('/')` instead avoids this type of error.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/testing/tests/unit/states/test_boto_apigateway.py\", line 584, in test_present_when_stage_is_to_associate_to_new_deployment\r\n    **conn_parameters)\r\n  File \"/testing/salt/states/boto_apigateway.py\", line 310, in present\r\n    authorization_type=authorization_type)\r\n  File \"/testing/salt/states/boto_apigateway.py\", line 1660, in deploy_resources\r\n    **self._common_aws_args)\r\n  File \"/testing/salt/modules/boto_apigateway.py\", line 358, in create_api_resources\r\n    path_parts = str.split(path, '/')\r\nTypeError: descriptor 'split' requires a 'str' object but received a 'unicode'\r\n```\r\n I found this issue when debugging the test failures reported in https://github.com/saltstack/salt-jenkins/issues/326.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/42332",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/42332/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/42332/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/42332/events",
        "html_url": "https://github.com/saltstack/salt/pull/42332",
        "id": 243295472,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTMwNzgzOTE0",
        "number": 42332,
        "title": "Handle forward compatibility for azurearm ",
        "user": {
            "login": "jagguli",
            "id": 74574,
            "node_id": "MDQ6VXNlcjc0NTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/74574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jagguli",
            "html_url": "https://github.com/jagguli",
            "followers_url": "https://api.github.com/users/jagguli/followers",
            "following_url": "https://api.github.com/users/jagguli/following{/other_user}",
            "gists_url": "https://api.github.com/users/jagguli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jagguli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jagguli/subscriptions",
            "organizations_url": "https://api.github.com/users/jagguli/orgs",
            "repos_url": "https://api.github.com/users/jagguli/repos",
            "events_url": "https://api.github.com/users/jagguli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jagguli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-07-17T04:39:07Z",
        "updated_at": "2017-07-17T16:34:46Z",
        "closed_at": "2017-07-17T16:34:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/42332",
            "html_url": "https://github.com/saltstack/salt/pull/42332",
            "diff_url": "https://github.com/saltstack/salt/pull/42332.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/42332.patch"
        },
        "body": "### What does this PR do?\r\nFixes 2 breakages with incompatible azure api calls\r\n\r\n1. list_storage\r\n\r\n```\r\n# salt-cloud -ldebug -c etc/salt -f list_storage_accounts azure_demo\r\n[ERROR   ] There was an error running the function: 'StorageAccount' object is not iterable\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/site-packages/salt/cloud/cli.py\", line 274, in run\r\n    self.function_provider, self.function_name, kwargs\r\n  File \"/usr/lib/python2.7/site-packages/salt/cloud/__init__.py\", line 1619, in do_function\r\n    driver: self.clouds[fun](call='function')\r\n  File \"/usr/lib/python2.7/site-packages/salt/cloud/clouds/azurearm.py\", line 1548, in list_storage_accounts\r\n    for acct in pages_to_list(storconn.storage_accounts.list()):\r\n  File \"/usr/lib/python2.7/site-packages/salt/cloud/clouds/azurearm.py\", line 1529, in pages_to_list\r\n    for item in page:\r\nTypeError: 'StorageAccount' object is not iterable\r\n```\r\n\r\n2. avail_locations\r\n\r\n```\r\n[ERROR   ] Failed to get the output of 'azurearm.avail_locations()': 'GeoRegionPaged' object has no attribute 'value'\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/site-packages/salt/cloud/__init__.py\", line 834, in location_list\r\n    data[alias][driver] = self.clouds[fun]()\r\n  File \"/usr/lib/python2.7/site-packages/salt/cloud/clouds/azurearm.py\", line 205, in avail_locations\r\n    for location in regions.value:  # pylint: disable=no-member\r\nAttributeError: 'GeoRegionPaged' object has no attribute 'value'\r\n```\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nNo reported issue \r\n\r\n### Previous Behavior\r\nonly works with older version of msrestazure module\r\n\r\n### New Behavior\r\nworks with both oldversion and new versions of msrestazure\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40461",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40461/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40461/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40461/events",
        "html_url": "https://github.com/saltstack/salt/pull/40461",
        "id": 218582423,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTEzNzA3NjI3",
        "number": 40461,
        "title": "Update verify.py",
        "user": {
            "login": "wolfpackmars2",
            "id": 1011130,
            "node_id": "MDQ6VXNlcjEwMTExMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1011130?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wolfpackmars2",
            "html_url": "https://github.com/wolfpackmars2",
            "followers_url": "https://api.github.com/users/wolfpackmars2/followers",
            "following_url": "https://api.github.com/users/wolfpackmars2/following{/other_user}",
            "gists_url": "https://api.github.com/users/wolfpackmars2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wolfpackmars2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wolfpackmars2/subscriptions",
            "organizations_url": "https://api.github.com/users/wolfpackmars2/orgs",
            "repos_url": "https://api.github.com/users/wolfpackmars2/repos",
            "events_url": "https://api.github.com/users/wolfpackmars2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wolfpackmars2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-03-31T18:35:48Z",
        "updated_at": "2017-04-01T02:35:18Z",
        "closed_at": "2017-03-31T20:01:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40461",
            "html_url": "https://github.com/saltstack/salt/pull/40461",
            "diff_url": "https://github.com/saltstack/salt/pull/40461.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40461.patch"
        },
        "body": "### What does this PR do?\r\nReturns false if id_ fails due to TypeError\r\n\r\n### What issues does this PR fix or reference?\r\n#40366\r\n#40394 \r\n\r\n### Previous Behavior\r\nHosts with null character in name would cause TypeError to be thrown, preventing minion from executing states\r\n\r\n### New Behavior\r\nHosts with null character in name will be identified as having an invalid host ID\r\n\r\n### Tests written?\r\nNo\r\nThis should not impact existing implementations.  If an ID throws a TypeError, it should be recognized as invalid.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/41288",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/41288/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/41288/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/41288/events",
        "html_url": "https://github.com/saltstack/salt/pull/41288",
        "id": 229188620,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTIwOTQwNDE2",
        "number": 41288,
        "title": "Only deal with integer bits in win_service.py.",
        "user": {
            "login": "liquidgecka",
            "id": 325667,
            "node_id": "MDQ6VXNlcjMyNTY2Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/325667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liquidgecka",
            "html_url": "https://github.com/liquidgecka",
            "followers_url": "https://api.github.com/users/liquidgecka/followers",
            "following_url": "https://api.github.com/users/liquidgecka/following{/other_user}",
            "gists_url": "https://api.github.com/users/liquidgecka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liquidgecka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liquidgecka/subscriptions",
            "organizations_url": "https://api.github.com/users/liquidgecka/orgs",
            "repos_url": "https://api.github.com/users/liquidgecka/repos",
            "events_url": "https://api.github.com/users/liquidgecka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liquidgecka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-05-16T22:36:45Z",
        "updated_at": "2017-05-17T16:54:36Z",
        "closed_at": "2017-05-17T16:54:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/41288",
            "html_url": "https://github.com/saltstack/salt/pull/41288",
            "diff_url": "https://github.com/saltstack/salt/pull/41288.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/41288.patch"
        },
        "body": "Since SERVICE_TYPE is a dictionary that contains integer, and string\r\nkeys it is not possible to perform a bitmask on the key values in\r\nwin_service.py. This make sure that this logic only runs on integer\r\nkeys.\r\n\r\nThis should be fairly easy to see the issue. The iterated dictionary is here:\r\nhttps://github.com/saltstack/salt/blob/develop/salt/modules/win_service.py#L30\r\n\r\nPrior to this using the service module would always produce this error: `TypeError: unsupported operand type(s) for &: 'int' and 'str'` on line 720 every time its run.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40360",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40360/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40360/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40360/events",
        "html_url": "https://github.com/saltstack/salt/pull/40360",
        "id": 217616620,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTEzMDExNTI3",
        "number": 40360,
        "title": "allow passing args to saltutil.runner",
        "user": {
            "login": "gtmanfred",
            "id": 732321,
            "node_id": "MDQ6VXNlcjczMjMyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/732321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gtmanfred",
            "html_url": "https://github.com/gtmanfred",
            "followers_url": "https://api.github.com/users/gtmanfred/followers",
            "following_url": "https://api.github.com/users/gtmanfred/following{/other_user}",
            "gists_url": "https://api.github.com/users/gtmanfred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gtmanfred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gtmanfred/subscriptions",
            "organizations_url": "https://api.github.com/users/gtmanfred/orgs",
            "repos_url": "https://api.github.com/users/gtmanfred/repos",
            "events_url": "https://api.github.com/users/gtmanfred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gtmanfred/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2017-03-28T16:22:56Z",
        "updated_at": "2017-05-01T21:40:00Z",
        "closed_at": "2017-03-31T19:18:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40360",
            "html_url": "https://github.com/saltstack/salt/pull/40360",
            "diff_url": "https://github.com/saltstack/salt/pull/40360.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40360.patch"
        },
        "body": "### What does this PR do?\r\nAllow for the passing of non keyword arguments, so that runners like the survey runner can be used from the saltutil.runner module.\r\n\r\n### What issues does this PR fix or reference?\r\n#38977\r\n\r\n### Previous Behavior\r\nFile \"/usr/lib/python2.7/site-packages/salt/client/mixins.py\", line 395, in _low\r\ndata['return'] = self.functions[fun](*args, **kwargs)\r\nTypeError: cmd() takes at least 1 argument (0 given)\r\n\r\n### New Behavior\r\nArgs passed in as args, and routed to RunnerClient.cmd() as arg.\r\n\r\n### Tests written?\r\n\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40264",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40264/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40264/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40264/events",
        "html_url": "https://github.com/saltstack/salt/pull/40264",
        "id": 216493367,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyMjgyODM1",
        "number": 40264,
        "title": "Makes sure \"gather_job_timeout\" is an Integer",
        "user": {
            "login": "meaksh",
            "id": 7229203,
            "node_id": "MDQ6VXNlcjcyMjkyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7229203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meaksh",
            "html_url": "https://github.com/meaksh",
            "followers_url": "https://api.github.com/users/meaksh/followers",
            "following_url": "https://api.github.com/users/meaksh/following{/other_user}",
            "gists_url": "https://api.github.com/users/meaksh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/meaksh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/meaksh/subscriptions",
            "organizations_url": "https://api.github.com/users/meaksh/orgs",
            "repos_url": "https://api.github.com/users/meaksh/repos",
            "events_url": "https://api.github.com/users/meaksh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/meaksh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2017-03-23T16:36:50Z",
        "updated_at": "2017-03-27T23:52:51Z",
        "closed_at": "2017-03-27T23:52:51Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40264",
            "html_url": "https://github.com/saltstack/salt/pull/40264",
            "diff_url": "https://github.com/saltstack/salt/pull/40264.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40264.patch"
        },
        "body": "### What does this PR do?\r\nThis PR makes sure that `gather_job_timeout` is an Integer in order to prevent `TypeError` if it's received as unicode.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40720",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40720/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40720/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40720/events",
        "html_url": "https://github.com/saltstack/salt/pull/40720",
        "id": 222154944,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTE2MTQ5NzM4",
        "number": 40720,
        "title": "Call tornado.httputil.url_concat compatibly",
        "user": {
            "login": "oeuftete",
            "id": 170730,
            "node_id": "MDQ6VXNlcjE3MDczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/170730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oeuftete",
            "html_url": "https://github.com/oeuftete",
            "followers_url": "https://api.github.com/users/oeuftete/followers",
            "following_url": "https://api.github.com/users/oeuftete/following{/other_user}",
            "gists_url": "https://api.github.com/users/oeuftete/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oeuftete/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oeuftete/subscriptions",
            "organizations_url": "https://api.github.com/users/oeuftete/orgs",
            "repos_url": "https://api.github.com/users/oeuftete/repos",
            "events_url": "https://api.github.com/users/oeuftete/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oeuftete/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2017-04-17T15:26:36Z",
        "updated_at": "2017-04-20T17:38:06Z",
        "closed_at": "2017-04-20T17:22:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40720",
            "html_url": "https://github.com/saltstack/salt/pull/40720",
            "diff_url": "https://github.com/saltstack/salt/pull/40720.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40720.patch"
        },
        "body": "See https://github.com/tornadoweb/tornado/pull/1899.\r\n\r\n### What does this PR do?\r\n\r\nMakes `salt.utils.http.query` compatible with [Tornado 4.5.0](https://github.com/tornadoweb/tornado/releases/tag/v4.5.0).\r\n\r\n### What issues does this PR fix or reference?\r\n\r\nNone\r\n\r\n### Previous Behavior\r\n\r\nFailure when `params` was `None`.\r\n\r\n```text\r\n[DEBUG   ] Traceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/salt/states/file.py\", line 1737, in managed\r\n    follow_symlinks)\r\n  File \"/usr/local/lib/python2.7/dist-packages/salt/modules/file.py\", line 4291, in manage_file\r\n    sfn = __salt__['cp.cache_file'](source, saltenv)\r\n  File \"/usr/local/lib/python2.7/dist-packages/salt/modules/cp.py\", line 393, in cache_file\r\n    result = _client().cache_file(path, saltenv)\r\n  File \"/usr/local/lib/python2.7/dist-packages/salt/fileclient.py\", line 165, in cache_file\r\n    return self.get_url(path, '', True, saltenv, cachedir=cachedir)\r\n  File \"/usr/local/lib/python2.7/dist-packages/salt/fileclient.py\", line 678, in get_url\r\n    **get_kwargs\r\n  File \"/usr/local/lib/python2.7/dist-packages/salt/utils/http.py\", line 173, in query\r\n    url_full = tornado.httputil.url_concat(url, params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/httputil.py\", line 616, in url_concat\r\n    raise TypeError(err)\r\nTypeError: 'args' parameter should be dict, list or tuple. Not <type 'NoneType'>\r\n\r\n[ERROR   ] Unable to manage file: 'args' parameter should be dict, list or tuple. Not <type 'NoneType'>\r\n```\r\n\r\n### New Behavior\r\n\r\nNow should work, I haven't tested this at all!\r\n\r\n### Tests written?\r\n\r\nNo.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40733",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40733/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40733/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40733/events",
        "html_url": "https://github.com/saltstack/salt/pull/40733",
        "id": 222231583,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTE2MjAzMzY1",
        "number": 40733,
        "title": "Change file data to bytes before attempting to hash",
        "user": {
            "login": "rallytime",
            "id": 6547906,
            "node_id": "MDQ6VXNlcjY1NDc5MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6547906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rallytime",
            "html_url": "https://github.com/rallytime",
            "followers_url": "https://api.github.com/users/rallytime/followers",
            "following_url": "https://api.github.com/users/rallytime/following{/other_user}",
            "gists_url": "https://api.github.com/users/rallytime/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rallytime/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rallytime/subscriptions",
            "organizations_url": "https://api.github.com/users/rallytime/orgs",
            "repos_url": "https://api.github.com/users/rallytime/repos",
            "events_url": "https://api.github.com/users/rallytime/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rallytime/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-04-17T21:05:39Z",
        "updated_at": "2017-04-18T20:24:52Z",
        "closed_at": "2017-04-18T20:07:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40733",
            "html_url": "https://github.com/saltstack/salt/pull/40733",
            "diff_url": "https://github.com/saltstack/salt/pull/40733.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40733.patch"
        },
        "body": "### What does this PR do?\r\nChanges the data read in from the spm file to bytes before attempting to hash the contents.\r\n\r\n### What issues does this PR fix or reference?\r\n#40435\r\n\r\n### Previous Behavior\r\n```\r\nspm install apache\r\nInstalling packages:\r\n\tapache\r\n\r\nProceed? [N/y] y\r\n... installing apache\r\n[ERROR   ] An un-handled exception was caught by salt's global exception handler:\r\nTypeError: Unicode-objects must be encoded before hashing\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/spm\", line 6, in <module>\r\n    exec(compile(open(__file__).read(), __file__, 'exec'))\r\n  File \"/root/salt/scripts/spm\", line 12, in <module>\r\n    salt_spm()\r\n  File \"/root/salt/salt/scripts.py\", line 487, in salt_spm\r\n    spm.run()\r\n  File \"/root/salt/salt/cli/spm.py\", line 34, in run\r\n    client.run(self.args)\r\n  File \"/root/salt/salt/spm/__init__.py\", line 114, in run\r\n    self._install(args)\r\n  File \"/root/salt/salt/spm/__init__.py\", line 365, in _install\r\n    self._install_indv_pkg(package, out_file)\r\n  File \"/root/salt/salt/spm/__init__.py\", line 522, in _install_indv_pkg\r\n    self.files_conn)\r\n  File \"/root/salt/salt/spm/__init__.py\", line 146, in _pkgfiles_fun\r\n    return getattr(getattr(self.pkgfiles, self.files_prov), func)(*args, **kwargs)\r\n  File \"/root/salt/salt/spm/pkgfiles/local.py\", line 183, in hash_file\r\n    hashobj.update(f.read())\r\nTypeError: Unicode-objects must be encoded before hashing\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/spm\", line 6, in <module>\r\n    exec(compile(open(__file__).read(), __file__, 'exec'))\r\n  File \"/root/salt/scripts/spm\", line 12, in <module>\r\n    salt_spm()\r\n  File \"/root/salt/salt/scripts.py\", line 487, in salt_spm\r\n    spm.run()\r\n  File \"/root/salt/salt/cli/spm.py\", line 34, in run\r\n    client.run(self.args)\r\n  File \"/root/salt/salt/spm/__init__.py\", line 114, in run\r\n    self._install(args)\r\n  File \"/root/salt/salt/spm/__init__.py\", line 365, in _install\r\n    self._install_indv_pkg(package, out_file)\r\n  File \"/root/salt/salt/spm/__init__.py\", line 522, in _install_indv_pkg\r\n    self.files_conn)\r\n  File \"/root/salt/salt/spm/__init__.py\", line 146, in _pkgfiles_fun\r\n    return getattr(getattr(self.pkgfiles, self.files_prov), func)(*args, **kwargs)\r\n  File \"/root/salt/salt/spm/pkgfiles/local.py\", line 183, in hash_file\r\n    hashobj.update(f.read())\r\nTypeError: Unicode-objects must be encoded before hashing\r\n```\r\n\r\n### Tests written?\r\nNo\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/38036",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/38036/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/38036/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/38036/events",
        "html_url": "https://github.com/saltstack/salt/pull/38036",
        "id": 192976024,
        "node_id": "MDExOlB1bGxSZXF1ZXN0OTYxODA0NjM=",
        "number": 38036,
        "title": "archive.extracted: fix problems with overwrite arg",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2016-12-01T22:06:57Z",
        "updated_at": "2017-04-25T19:12:44Z",
        "closed_at": "2016-12-08T19:08:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/38036",
            "html_url": "https://github.com/saltstack/salt/pull/38036",
            "diff_url": "https://github.com/saltstack/salt/pull/38036.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/38036.patch"
        },
        "body": "Pull request #37889 introduced several problems:\r\n\r\n1. It forces a wipe of the extracted contents if you are setting\r\n   ``overwrite`` to ``True``. This should be configurable, to allow for\r\n   the use case where extraction should be forced but there are contents\r\n   added to the extracted content which the user does not want purged\r\n   before the archive is re-extracted.\r\n\r\n2. It ignores the case where ``enforce_toplevel`` is set to ``False``\r\n   and the archive doesn't have all contents in a single top-level\r\n   directory, by only deleting the first listed top-level directory (and\r\n   ignoring completely any top-level files).\r\n\r\n3. It ignores the case where ``archive.list`` was unable to list the\r\n   contents of the archive (in which case ``contents`` would be\r\n   ``None``). This would result in a TypeError when this case was\r\n   combined with setting ``overwrite`` to ``True``.\r\n\r\nThis commit fixes all of the above problems. Additionally, a new\r\nargument called ``clean`` now controls whether destination paths are\r\nwiped before extraction is performed.\r\n\r\nFinally, an issue with how I implemented detection (and cleaning) of\r\npaths with incorrect types has been fixed. Specifically, when a path\r\nthat should have been a directory is instead a file, the ``os.stat()``\r\nwill raise an ENOTDIR when the path passed to it contains a trailing\r\npath separator, because the path exists but is not a directory.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/39567",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/39567/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/39567/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/39567/events",
        "html_url": "https://github.com/saltstack/salt/pull/39567",
        "id": 209517705,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTA3NDUzMDU4",
        "number": 39567,
        "title": "[msgpack] look for `datetime.datetime` in keys also while packing",
        "user": {
            "login": "sum12",
            "id": 3285267,
            "node_id": "MDQ6VXNlcjMyODUyNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3285267?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sum12",
            "html_url": "https://github.com/sum12",
            "followers_url": "https://api.github.com/users/sum12/followers",
            "following_url": "https://api.github.com/users/sum12/following{/other_user}",
            "gists_url": "https://api.github.com/users/sum12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sum12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sum12/subscriptions",
            "organizations_url": "https://api.github.com/users/sum12/orgs",
            "repos_url": "https://api.github.com/users/sum12/repos",
            "events_url": "https://api.github.com/users/sum12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sum12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-02-22T17:04:16Z",
        "updated_at": "2017-02-22T18:57:48Z",
        "closed_at": "2017-02-22T18:57:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/39567",
            "html_url": "https://github.com/saltstack/salt/pull/39567",
            "diff_url": "https://github.com/saltstack/salt/pull/39567.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/39567.patch"
        },
        "body": "`del` the old if the encoded key is different form the original one.\r\n\r\n### What does this PR do?\r\ndatetime.datetime can appear in keys also, causing `TypeError` to be raised.\r\nThis PR fixes that behavior.\r\n\r\n### What issues does this PR fix or reference?\r\nShould I create one. Actually this fixes an old [pull-request-22118](https://github.com/saltstack/salt/pull/22118)\r\n\r\n### Tests written?\r\nNo\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40120",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40120/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40120/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40120/events",
        "html_url": "https://github.com/saltstack/salt/pull/40120",
        "id": 215046808,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTExMzExODgx",
        "number": 40120,
        "title": "gce: Exclude GCENodeDriver objects from _expand_node result",
        "user": {
            "login": "sergeizv",
            "id": 10072335,
            "node_id": "MDQ6VXNlcjEwMDcyMzM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10072335?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sergeizv",
            "html_url": "https://github.com/sergeizv",
            "followers_url": "https://api.github.com/users/sergeizv/followers",
            "following_url": "https://api.github.com/users/sergeizv/following{/other_user}",
            "gists_url": "https://api.github.com/users/sergeizv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sergeizv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sergeizv/subscriptions",
            "organizations_url": "https://api.github.com/users/sergeizv/orgs",
            "repos_url": "https://api.github.com/users/sergeizv/repos",
            "events_url": "https://api.github.com/users/sergeizv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sergeizv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-03-17T15:59:44Z",
        "updated_at": "2017-03-21T13:40:12Z",
        "closed_at": "2017-03-20T21:44:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40120",
            "html_url": "https://github.com/saltstack/salt/pull/40120",
            "diff_url": "https://github.com/saltstack/salt/pull/40120.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40120.patch"
        },
        "body": "The dictionary returned by _expand_node contains libcloud's GCENodeDriver\r\nobjects which arent't properly serialized. With 'update_cachedir: True' setting\r\nin salt-cloud config file show_instance fails because\r\n__utils__['cloud.cache_node'] submits that dictionary to msgpack:\r\n\r\n    (py2-env) salt-test@tommynaut:~> salt-cloud -l debug -a show_instance foo\r\n    ...\r\n    [ERROR   ] There was an error actioning machines: Cannot serialize <libcloud.compute.drivers.gce.GCENodeDriver object at 0x7ff3817cca10>\r\n    Traceback (most recent call last):\r\n      File \"/home/salt-test/salt/salt/cloud/cli.py\", line 252, in run\r\n        ret = mapper.do_action(names, kwargs)\r\n      File \"/home/salt-test/salt/salt/cloud/__init__.py\", line 1527, in do_action\r\n        vm_name, call='action'\r\n      File \"/home/salt-test/salt/salt/cloud/clouds/gce.py\", line 277, in show_instance\r\n        __utils__['cloud.cache_node'](node, __active_provider_name__, __opts__)\r\n      File \"/home/salt-test/salt/salt/utils/cloud.py\", line 2921, in cache_node\r\n        msgpack.dump(node, fh_)\r\n      File \"/home/salt-test/py2-env/lib/python2.7/site-packages/msgpack/__init__.py\", line 38, in pack\r\n        stream.write(packer.pack(o))\r\n      File \"/home/salt-test/py2-env/lib/python2.7/site-packages/msgpack/fallback.py\", line 738, in pack\r\n        self._pack(obj)\r\n      File \"/home/salt-test/py2-env/lib/python2.7/site-packages/msgpack/fallback.py\", line 730, in _pack\r\n        nest_limit - 1)\r\n      File \"/home/salt-test/py2-env/lib/python2.7/site-packages/msgpack/fallback.py\", line 828, in _fb_pack_map_pairs\r\n        self._pack(v, nest_limit - 1)\r\n      File \"/home/salt-test/py2-env/lib/python2.7/site-packages/msgpack/fallback.py\", line 730, in _pack\r\n        nest_limit - 1)\r\n      File \"/home/salt-test/py2-env/lib/python2.7/site-packages/msgpack/fallback.py\", line 828, in _fb_pack_map_pairs\r\n        self._pack(v, nest_limit - 1)\r\n      File \"/home/salt-test/py2-env/lib/python2.7/site-packages/msgpack/fallback.py\", line 730, in _pack\r\n        nest_limit - 1)\r\n      File \"/home/salt-test/py2-env/lib/python2.7/site-packages/msgpack/fallback.py\", line 828, in _fb_pack_map_pairs\r\n        self._pack(v, nest_limit - 1)\r\n      File \"/home/salt-test/py2-env/lib/python2.7/site-packages/msgpack/fallback.py\", line 735, in _pack\r\n        raise TypeError(\"Cannot serialize %r\" % obj)\r\n    TypeError: Cannot serialize <libcloud.compute.drivers.gce.GCENodeDriver object at 0x7ff3817cca10>\r\n\r\nThose GCENodeDriver objects don't contain info on the node itself so may be\r\nsafely excluded from _expand_node result. Remove ret['driver'] and\r\nret['extra']['zone']['driver'] keys containing them.\r\n\r\n\r\nNOTE: As the purpose of _expand_node is to serialize libcloud node object, those GCENodeDriver objects at ret['driver'] and ret['extra']['zone']['driver'] are useless, so from my point of view removing them doesn't hurt backward compatibility. But I'm not pretty sure and would appreciate feedback on this. Maybe a correct solution would be setting those keys to None instead...",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/35078",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/35078/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/35078/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/35078/events",
        "html_url": "https://github.com/saltstack/salt/pull/35078",
        "id": 168483814,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Nzk0NjYxNzQ=",
        "number": 35078,
        "title": "added missing non-keyword argument skip_verify to __get_artifact func\u2026",
        "user": {
            "login": "jacobweinstock",
            "id": 12081036,
            "node_id": "MDQ6VXNlcjEyMDgxMDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12081036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobweinstock",
            "html_url": "https://github.com/jacobweinstock",
            "followers_url": "https://api.github.com/users/jacobweinstock/followers",
            "following_url": "https://api.github.com/users/jacobweinstock/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobweinstock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobweinstock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobweinstock/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobweinstock/orgs",
            "repos_url": "https://api.github.com/users/jacobweinstock/repos",
            "events_url": "https://api.github.com/users/jacobweinstock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobweinstock/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-07-30T19:46:23Z",
        "updated_at": "2017-01-17T05:18:33Z",
        "closed_at": "2016-08-01T12:22:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/35078",
            "html_url": "https://github.com/saltstack/salt/pull/35078",
            "diff_url": "https://github.com/saltstack/salt/pull/35078.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/35078.patch"
        },
        "body": "### What does this PR do?\n\nFixes \"TypeError: get_managed() takes exactly 11 non-keyword arguments (10 given)\" in\n jboss7.deployed when using the http(s) source protocol.\n### What issues does this PR fix or reference?\n\nNone\n### Previous Behavior\n\nTypeError: get_managed() takes exactly 11 non-keyword arguments (10 given) when deploying using the http(s) source protocol.\n### New Behavior\n\nNo error message. Deploy using http(s) source protocol completes successfully.\n### Tests written?\n\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/40465",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/40465/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/40465/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/40465/events",
        "html_url": "https://github.com/saltstack/salt/pull/40465",
        "id": 218606259,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTEzNzI0NzEy",
        "number": 40465,
        "title": "Artifactory Execution & State Module: Fixup Error Handling",
        "user": {
            "login": "rallytime",
            "id": 6547906,
            "node_id": "MDQ6VXNlcjY1NDc5MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6547906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rallytime",
            "html_url": "https://github.com/rallytime",
            "followers_url": "https://api.github.com/users/rallytime/followers",
            "following_url": "https://api.github.com/users/rallytime/following{/other_user}",
            "gists_url": "https://api.github.com/users/rallytime/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rallytime/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rallytime/subscriptions",
            "organizations_url": "https://api.github.com/users/rallytime/orgs",
            "repos_url": "https://api.github.com/users/rallytime/repos",
            "events_url": "https://api.github.com/users/rallytime/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rallytime/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-03-31T20:17:22Z",
        "updated_at": "2017-04-04T21:05:49Z",
        "closed_at": "2017-04-04T20:12:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/40465",
            "html_url": "https://github.com/saltstack/salt/pull/40465",
            "diff_url": "https://github.com/saltstack/salt/pull/40465.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/40465.patch"
        },
        "body": "### What does this PR do?\r\nArtifactory Execution Module changes:\r\n- Adds `URLError`s to the places where we're also catching `HTTPError`s \r\n- Changes the bare `Exception`s that are raised in these affected helper functions to `CommandExecutionError`s\r\n- Made some of the function calls a little more vertical. This module is extremely horizontally written, which makes it hard to see what is going on.\r\n\r\nAtrifactory State Module Changes:\r\n- Moved the log lines and dictionary manipulation lines out of the try/except block\r\n- Wrapped the `exc` variable in`str()` to ensure to avoid a `TypeError` further on in the process. The URLError being passed up to the exception to print as a comment in the state file comes back as a different type.\r\n\r\n### What issues does this PR fix or reference?\r\nFixes #37699\r\n\r\n### Previous Behavior\r\nThe error message couldn't be serialized, so the docs for the state execution module would print and then a final stacktrace:\r\n```\r\nPassed invalid arguments: Cannot serialize CommandExecutionError('Error: <urlopen error [Errno -2] Name or service not known>',).\r\n\r\nUsage:\r\n\r\n    Execute the states in one or more SLS files\r\n\r\n    test\r\n        Run states in test-only (dry-run) mode\r\n\r\n    pillar\r\n        Custom Pillar values, passed as a dictionary of key-value pairs\r\n\r\n        .. code-block:: bash\r\n\r\n            salt '*' state.apply test pillar='{\"foo\": \"bar\"}'\r\n\r\n        .. note::\r\n            Values passed this way will override Pillar values set via\r\n            ``pillar_roots`` or an external Pillar source.\r\n\r\n        .. versionchanged:: 2016.3.0\r\n            GPG-encrypted CLI Pillar data is now supported via the GPG\r\n            renderer. See :ref:`here <encrypted-cli-pillar-data>` for details.\r\n\r\n    pillar_enc\r\n        Specify which renderer to use to decrypt encrypted data located within\r\n        the ``pillar`` value. Currently, only ``gpg`` is supported.\r\n\r\n        .. versionadded:: 2016.3.0\r\n\r\n    queue : False\r\n        Instead of failing immediately when another state run is in progress,\r\n        queue the new state run to begin running once the other has finished.\r\n\r\n        This option starts a new thread for each queued state run, so use this\r\n        option sparingly.\r\n\r\n    concurrent : False\r\n        Execute state runs concurrently instead of serially\r\n\r\n        .. warning::\r\n\r\n            This flag is potentially dangerous. It is designed for use when\r\n            multiple state runs can safely be run at the same time. Do *not*\r\n            use this flag for performance optimization.\r\n\r\n    saltenv : None\r\n        Specify a salt fileserver environment to be used when applying states\r\n\r\n        .. versionchanged:: 0.17.0\r\n            Argument name changed from ``env`` to ``saltenv``.\r\n\r\n        .. versionchanged:: 2014.7.0\r\n            If no saltenv is specified, the minion config will be checked for an\r\n            ``environment`` parameter and if found, it will be used. If none is\r\n            found, ``base`` will be used. In prior releases, the minion config\r\n            was not checked and ``base`` would always be assumed when the\r\n            saltenv was not explicitly set.\r\n\r\n    pillarenv\r\n\r\n        Specify a Pillar environment to be used when applying states. By\r\n        default, all Pillar environments will be merged together and used.\r\n\r\n    localconfig\r\n\r\n        Optionally, instead of using the minion config, load minion opts from\r\n        the file specified by this argument, and then merge them with the\r\n        options from the minion config. This functionality allows for specific\r\n        states to be run with their own custom minion configuration, including\r\n        different pillars, file_roots, etc.\r\n\r\n    mock:\r\n        The mock option allows for the state run to execute without actually\r\n        calling any states. This then returns a mocked return which will show\r\n        the requisite ordering as well as fully validate the state run.\r\n\r\n        .. versionadded:: 2015.8.4\r\n\r\n    CLI Example:\r\n\r\n    .. code-block:: bash\r\n\r\n        salt '*' state.sls core,edit.vim dev\r\n        salt '*' state.sls core exclude=\"[{'id': 'id_to_exclude'}, {'sls': 'sls_to_exclude'}]\"\r\n\r\n        salt '*' state.sls myslsfile pillar=\"{foo: 'Foo!', bar: 'Bar!'}\"\r\n\r\nTraceback (most recent call last):\r\n  File \"/root/SaltStack/salt/salt/cli/caller.py\", line 197, in call\r\n    ret['return'] = func(*args, **kwargs)\r\n  File \"/root/SaltStack/salt/salt/modules/state.py\", line 1065, in sls\r\n    serial.dump(ret, fp_)\r\n  File \"/root/SaltStack/salt/salt/payload.py\", line 295, in dump\r\n    fn_.write(self.dumps(msg))\r\n  File \"/root/SaltStack/salt/salt/payload.py\", line 181, in dumps\r\n    return msgpack.dumps(msg, use_bin_type=use_bin_type)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/__init__.py\", line 47, in packb\r\n    return Packer(**kwargs).pack(o)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 734, in pack\r\n    self._pack(obj)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 726, in _pack\r\n    nest_limit - 1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 824, in _fb_pack_map_pairs\r\n    self._pack(v, nest_limit - 1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 726, in _pack\r\n    nest_limit - 1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 824, in _fb_pack_map_pairs\r\n    self._pack(v, nest_limit - 1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/msgpack/fallback.py\", line 731, in _pack\r\n    raise TypeError(\"Cannot serialize %r\" % obj)\r\nTypeError: Cannot serialize CommandExecutionError('Error: <urlopen error [Errno -2] Name or service not known>',)\r\nroot@rallytime:~#\r\n```\r\n\r\n### New Behavior\r\nPropagates the error message that is raised to the state report:\r\n```\r\nlocal:\r\n----------\r\n          ID: download_from_artifactory\r\n    Function: artifactory.downloaded\r\n      Result: False\r\n     Comment: Could not fetch data from url: http://some.url.that.i.removed/libs-snapshots/com/example/webapp/webapp/1.0-SNAPSHOT/maven-metadata.xml. ERROR: <urlopen error [Errno -2] Name or service not known>\r\n     Started: 20:03:59.576973\r\n    Duration: 8.414 ms\r\n     Changes:\r\n\r\nSummary for local\r\n------------\r\nSucceeded: 0\r\nFailed:    1\r\n------------\r\nTotal states run:     1\r\nTotal run time:   8.414 ms\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/39315",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/39315/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/39315/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/39315/events",
        "html_url": "https://github.com/saltstack/salt/pull/39315",
        "id": 206834581,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTA1NjU1NjE3",
        "number": 39315,
        "title": "improve salt-run salt.cmd test",
        "user": {
            "login": "Ch3LL",
            "id": 6886822,
            "node_id": "MDQ6VXNlcjY4ODY4MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6886822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ch3LL",
            "html_url": "https://github.com/Ch3LL",
            "followers_url": "https://api.github.com/users/Ch3LL/followers",
            "following_url": "https://api.github.com/users/Ch3LL/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ch3LL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ch3LL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ch3LL/subscriptions",
            "organizations_url": "https://api.github.com/users/Ch3LL/orgs",
            "repos_url": "https://api.github.com/users/Ch3LL/repos",
            "events_url": "https://api.github.com/users/Ch3LL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ch3LL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-02-10T16:04:18Z",
        "updated_at": "2017-02-13T19:00:14Z",
        "closed_at": "2017-02-13T19:00:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/39315",
            "html_url": "https://github.com/saltstack/salt/pull/39315",
            "diff_url": "https://github.com/saltstack/salt/pull/39315.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/39315.patch"
        },
        "body": "### What does this PR do?\r\nimproves the `salt-run salt.cmd` test. There was an issue on 2016.11.2 where `out` was returning:\r\n\r\n```\r\n'out': ['Exception occurred in runner salt.cmd:                                           \r\n         Traceback (most recent call last):', '  File                                                                  \r\n         \"/home/ch3ll/git/salt/salt/client/mixins.py\", line 397, in _low', \"                                           \r\n         if 'data' in data['return']:\", \"TypeError: argument of type 'bool' is                                         \r\n         not iterable\"]}\r\n```\r\n\r\nSee issue https://github.com/saltstack/salt/issues/38638 \r\nThis pr improves the test to make sure we catch this. \r\n\r\n### Tests written?\r\n\r\nYes",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/34897",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/34897/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/34897/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/34897/events",
        "html_url": "https://github.com/saltstack/salt/pull/34897",
        "id": 167115783,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Nzg1MjgzNTc=",
        "number": 34897,
        "title": "salt-cloud -f post_dns_record support",
        "user": {
            "login": "aphor",
            "id": 232123,
            "node_id": "MDQ6VXNlcjIzMjEyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/232123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aphor",
            "html_url": "https://github.com/aphor",
            "followers_url": "https://api.github.com/users/aphor/followers",
            "following_url": "https://api.github.com/users/aphor/following{/other_user}",
            "gists_url": "https://api.github.com/users/aphor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aphor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aphor/subscriptions",
            "organizations_url": "https://api.github.com/users/aphor/orgs",
            "repos_url": "https://api.github.com/users/aphor/repos",
            "events_url": "https://api.github.com/users/aphor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aphor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-07-22T19:31:53Z",
        "updated_at": "2017-01-17T04:22:22Z",
        "closed_at": "2016-07-22T22:20:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/34897",
            "html_url": "https://github.com/saltstack/salt/pull/34897",
            "diff_url": "https://github.com/saltstack/salt/pull/34897.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/34897.patch"
        },
        "body": "enable `salt.cloud.clouds.digital_ocean.post_dns_record()` to work with `salt-cloud -f`\n### What issues does this PR fix or reference?\n#34884\n### Previous Behavior\n\nTypeError\n### New Behavior\n\nworks per saltstack/salt#34884 \n### Tests written?\n\nNo\n### Summary\n\nrefactor arguments in salt.cloud.clouds.digital_ocean.post_dns_record() to enable use with salt-cloud --function on command line",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/38947",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/38947/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/38947/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/38947/events",
        "html_url": "https://github.com/saltstack/salt/pull/38947",
        "id": 203177922,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTAzMTcxODgz",
        "number": 38947,
        "title": "Fix ssh key deployment when using minimal salt-ssh roster",
        "user": {
            "login": "eradman",
            "id": 1175398,
            "node_id": "MDQ6VXNlcjExNzUzOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1175398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eradman",
            "html_url": "https://github.com/eradman",
            "followers_url": "https://api.github.com/users/eradman/followers",
            "following_url": "https://api.github.com/users/eradman/following{/other_user}",
            "gists_url": "https://api.github.com/users/eradman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eradman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eradman/subscriptions",
            "organizations_url": "https://api.github.com/users/eradman/orgs",
            "repos_url": "https://api.github.com/users/eradman/repos",
            "events_url": "https://api.github.com/users/eradman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eradman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-01-25T18:02:02Z",
        "updated_at": "2017-01-25T19:36:01Z",
        "closed_at": "2017-01-25T19:35:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/38947",
            "html_url": "https://github.com/saltstack/salt/pull/38947",
            "diff_url": "https://github.com/saltstack/salt/pull/38947.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/38947.patch"
        },
        "body": "### What does this PR do?\r\n\r\nAllows salt-ssh to deploy ssh keys when the roser file does not specify `ssh_options` for a given host.\r\n\r\n### Previous Behavior\r\n\r\nTraceback ending with\r\n\r\n    ...\r\n    File \"/u/en/radman/local/saltenv/lib/python2.7/site-packages/salt/client/ssh/shell.py\", line 190, in _copy_id_str_old\r\n      self._ssh_opts(),\r\n    File \"/u/en/radman/local/saltenv/lib/python2.7/site-packages/salt/client/ssh/shell.py\", line 176, in _ssh_opts\r\n      for opt in self.ssh_options])\r\n    TypeError: 'NoneType' object is not iterable\r\n\r\n\r\n### New Behavior\r\n\r\n    $ sudo salt-ssh 'login1*' test.ping\r\n    Permission denied for host login1, do you want to deploy the salt-ssh\r\n    key? (password required):\r\n    [Y/n] Y\r\n    Password for root@login1:\r\n    login1:\r\n        True\r\n\r\n### Tests written?\r\n\r\nYes\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/39662",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/39662/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/39662/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/39662/events",
        "html_url": "https://github.com/saltstack/salt/pull/39662",
        "id": 210271626,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTA3OTgyODI1",
        "number": 39662,
        "title": "Py3 compat: Force minions to be a list for local serialized caches",
        "user": {
            "login": "The-Loeki",
            "id": 426731,
            "node_id": "MDQ6VXNlcjQyNjczMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/426731?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/The-Loeki",
            "html_url": "https://github.com/The-Loeki",
            "followers_url": "https://api.github.com/users/The-Loeki/followers",
            "following_url": "https://api.github.com/users/The-Loeki/following{/other_user}",
            "gists_url": "https://api.github.com/users/The-Loeki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/The-Loeki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/The-Loeki/subscriptions",
            "organizations_url": "https://api.github.com/users/The-Loeki/orgs",
            "repos_url": "https://api.github.com/users/The-Loeki/repos",
            "events_url": "https://api.github.com/users/The-Loeki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/The-Loeki/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-02-25T23:58:51Z",
        "updated_at": "2017-02-27T09:30:46Z",
        "closed_at": "2017-02-26T02:36:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/39662",
            "html_url": "https://github.com/saltstack/salt/pull/39662",
            "diff_url": "https://github.com/saltstack/salt/pull/39662.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/39662.patch"
        },
        "body": "When running `salt-ssh` under Python 3, it tries to save load to the local_cache by passing a `dict.keys()`.\r\nThis fails horribly:\r\n\r\n```\r\n[DEBUG   ] Adding minions for job 20170226002946722433: dict_keys(['pampus1.example.com'])\r\n[ERROR   ] can't serialize dict_keys(['pampus1.example.com'])\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/salt/client/ssh/__init__.py\", line 607, in run\r\n    self.returners['{0}.save_load'.format(self.opts['master_job_cache'])](jid, job_load, minions=self.targets.keys())\r\n  File \"/usr/local/lib/python3.5/dist-packages/salt/returners/local_cache.py\", line 235, in save_load\r\n    save_minions(jid, minions)\r\n  File \"/usr/local/lib/python3.5/dist-packages/salt/returners/local_cache.py\", line 277, in save_minions\r\n    serial.dump(minions, salt.utils.fopen(minions_path, 'w+b'))\r\n  File \"/usr/local/lib/python3.5/dist-packages/salt/payload.py\", line 300, in dump\r\n    fn_.write(self.dumps(msg, use_bin_type=True))\r\n  File \"/usr/local/lib/python3.5/dist-packages/salt/payload.py\", line 181, in dumps\r\n    return msgpack.dumps(msg, use_bin_type=use_bin_type)\r\n  File \"/usr/local/lib/python3.5/dist-packages/msgpack/__init__.py\", line 47, in packb\r\n    return Packer(**kwargs).pack(o)\r\n  File \"msgpack/_packer.pyx\", line 231, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:3661)\r\n  File \"msgpack/_packer.pyx\", line 233, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:3503)\r\n  File \"msgpack/_packer.pyx\", line 228, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:3382)\r\nTypeError: can't serialize dict_keys(['pampus1.example.com'])\r\n[ERROR   ] Could not save load with returner local_cache: can't serialize dict_keys(['pampus1.example.com'])\r\n``` \r\n\r\n### What does this PR do?\r\nFix the problem by forcing `minions` arg to be(come) a `list`\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/38659",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/38659/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/38659/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/38659/events",
        "html_url": "https://github.com/saltstack/salt/pull/38659",
        "id": 199857822,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTAwODk5MzM1",
        "number": 38659,
        "title": "Turn None into an empty string (for minion matching)",
        "user": {
            "login": "techhat",
            "id": 287147,
            "node_id": "MDQ6VXNlcjI4NzE0Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/287147?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/techhat",
            "html_url": "https://github.com/techhat",
            "followers_url": "https://api.github.com/users/techhat/followers",
            "following_url": "https://api.github.com/users/techhat/following{/other_user}",
            "gists_url": "https://api.github.com/users/techhat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/techhat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/techhat/subscriptions",
            "organizations_url": "https://api.github.com/users/techhat/orgs",
            "repos_url": "https://api.github.com/users/techhat/repos",
            "events_url": "https://api.github.com/users/techhat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/techhat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-01-10T15:51:44Z",
        "updated_at": "2017-01-15T18:02:03Z",
        "closed_at": "2017-01-15T18:02:03Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/38659",
            "html_url": "https://github.com/saltstack/salt/pull/38659",
            "diff_url": "https://github.com/saltstack/salt/pull/38659.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/38659.patch"
        },
        "body": "### What does this PR do?\r\n`check_minions()` does string checking on the `expr`. If `expr` is None, then the string checking will fail, so we switch it to an empty string instead.\r\n\r\n### What issues does this PR fix or reference?\r\n#38216\r\n\r\n### Previous Behavior\r\n```\r\n[ERROR   ] Failed matching available minions with glob pattern: None\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/site-packages/salt/utils/minions.py\", line 650, in check_minions\r\n    minions = check_func(expr, greedy)\r\n  File \"/usr/lib/python2.7/site-packages/salt/utils/minions.py\", line 202, in _check_glob_minions\r\n    return fnmatch.filter(self._pki_minions(), expr)\r\n  File \"/usr/lib/python2.7/fnmatch.py\", line 53, in filter\r\n    res = translate(pat)\r\n  File \"/usr/lib/python2.7/fnmatch.py\", line 91, in translate\r\n    i, n = 0, len(pat)\r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n### New Behavior\r\n(not that)\r\n\r\n### Tests written?\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/39227",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/39227/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/39227/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/39227/events",
        "html_url": "https://github.com/saltstack/salt/pull/39227",
        "id": 205996307,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTA1MDgwOTA4",
        "number": 39227,
        "title": "Loader optimzation",
        "user": {
            "login": "terminalmage",
            "id": 328598,
            "node_id": "MDQ6VXNlcjMyODU5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terminalmage",
            "html_url": "https://github.com/terminalmage",
            "followers_url": "https://api.github.com/users/terminalmage/followers",
            "following_url": "https://api.github.com/users/terminalmage/following{/other_user}",
            "gists_url": "https://api.github.com/users/terminalmage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terminalmage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terminalmage/subscriptions",
            "organizations_url": "https://api.github.com/users/terminalmage/orgs",
            "repos_url": "https://api.github.com/users/terminalmage/repos",
            "events_url": "https://api.github.com/users/terminalmage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terminalmage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-02-07T19:54:11Z",
        "updated_at": "2017-02-08T19:38:22Z",
        "closed_at": "2017-02-08T19:38:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/39227",
            "html_url": "https://github.com/saltstack/salt/pull/39227",
            "diff_url": "https://github.com/saltstack/salt/pull/39227.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/39227.patch"
        },
        "body": "Use a str.join instead of str.format to make the full function name. Based on the below benchmarking using ``timeit``, we should get a considerable improvement, especially with hundreds of functions being loaded in a single loader invocation.\n\n```python\n>>> import timeit\n>>> try1 = '''\\\n  2 full_funcname = '{0}.{1}'.format(module_name, funcname)\n  3 '''\n>>> try2 = '''\\\n  2 full_funcname = '.'.join((module_name, funcname))\n  3 '''\n>>> try3 = '''\\\n  2 try:\n  3     full_funcname = '.'.join((module_name, funcname))\n  4 except TypeError:\n  5     full_funcname = '{0}.{1}'.format(module_name, funcname)\n  6 '''\n>>> prep = '''\\\n  2 module_name = 'foo'\n  3 funcname = 'bar'\n  4 '''\n>>> t1 = timeit.Timer(try1, prep)\n>>> t2 = timeit.Timer(try2, prep)\n>>> t3 = timeit.Timer(try3, prep)\n>>> t1.repeat()\n[0.28724193572998047, 0.25792503356933594, 0.2585139274597168]\n>>> t2.repeat()\n[0.14360880851745605, 0.12038207054138184, 0.12308502197265625]\n>>> t3.repeat()\n[0.16092491149902344, 0.13240313529968262, 0.1337299346923828]\n>>>\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/39108",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/39108/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/39108/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/39108/events",
        "html_url": "https://github.com/saltstack/salt/pull/39108",
        "id": 204615943,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTA0MTU5MDg5",
        "number": 39108,
        "title": "[Bugfix] Fix state x509.crl_managed",
        "user": {
            "login": "janhorstmann",
            "id": 21240781,
            "node_id": "MDQ6VXNlcjIxMjQwNzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/21240781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/janhorstmann",
            "html_url": "https://github.com/janhorstmann",
            "followers_url": "https://api.github.com/users/janhorstmann/followers",
            "following_url": "https://api.github.com/users/janhorstmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/janhorstmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/janhorstmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/janhorstmann/subscriptions",
            "organizations_url": "https://api.github.com/users/janhorstmann/orgs",
            "repos_url": "https://api.github.com/users/janhorstmann/repos",
            "events_url": "https://api.github.com/users/janhorstmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/janhorstmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2017-02-01T15:31:59Z",
        "updated_at": "2017-02-01T18:32:58Z",
        "closed_at": "2017-02-01T18:32:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/39108",
            "html_url": "https://github.com/saltstack/salt/pull/39108",
            "diff_url": "https://github.com/saltstack/salt/pull/39108.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/39108.patch"
        },
        "body": "### What does this PR do?\r\nThis PR changes previously used boolean variable names to new ones which do not yet exist.\r\n\r\n### What issues does this PR fix or reference?\r\nCommit https://github.com/saltstack/salt/commit/a4d6598f1e3d6faa96c7e11ba2e2c367f9e68099 overwrites new_crl with boolean values but new_crl is still needed\r\n### Previous Behavior\r\n   Function: x509.crl_managed\r\n      Result: False\r\n     Comment: An exception occurred in this state: Traceback (most recent call last):\r\n                File \"/usr/lib/python2.7/dist-packages/salt/state.py\", line 1745, in call\r\n                  **cdata['kwargs'])\r\n                File \"/usr/lib/python2.7/dist-packages/salt/loader.py\", line 1702, in wrapper\r\n                  return f(*args, **kwargs)\r\n                File \"/usr/lib/python2.7/dist-packages/salt/states/x509.py\", line 663, in crl_managed\r\n                  'x509.read_crl'](crl=new_crl)}\r\n                File \"/usr/lib/python2.7/dist-packages/salt/modules/x509.py\", line 647, in read_crl\r\n                  text = _text_or_file(crl)\r\n                File \"/usr/lib/python2.7/dist-packages/salt/modules/x509.py\", line 317, in _text_or_file\r\n                  if os.path.isfile(input_):\r\n                File \"/usr/lib/python2.7/genericpath.py\", line 37, in isfile\r\n                  st = os.stat(path)\r\n              TypeError: coercing to Unicode: need string or buffer, bool found\r\n\r\n\r\n### New Behavior\r\n   Function: x509.crl_managed\r\n      Result: True\r\n     Comment: File [...] updated\r\n     Started: 15:28:51.428353\r\n    Duration: 48.241 ms\r\n     Changes:   \r\n [...]\r\n\r\n### Tests written?\r\nNo",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/37831",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/37831/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/37831/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/37831/events",
        "html_url": "https://github.com/saltstack/salt/pull/37831",
        "id": 190884733,
        "node_id": "MDExOlB1bGxSZXF1ZXN0OTQ3MzIyOTQ=",
        "number": 37831,
        "title": "PY3: Fix exception when handling connect exception in TCP transport",
        "user": {
            "login": "skizunov",
            "id": 11562452,
            "node_id": "MDQ6VXNlcjExNTYyNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11562452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skizunov",
            "html_url": "https://github.com/skizunov",
            "followers_url": "https://api.github.com/users/skizunov/followers",
            "following_url": "https://api.github.com/users/skizunov/following{/other_user}",
            "gists_url": "https://api.github.com/users/skizunov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skizunov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skizunov/subscriptions",
            "organizations_url": "https://api.github.com/users/skizunov/orgs",
            "repos_url": "https://api.github.com/users/skizunov/repos",
            "events_url": "https://api.github.com/users/skizunov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skizunov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-11-22T01:36:33Z",
        "updated_at": "2016-11-22T15:27:04Z",
        "closed_at": "2016-11-22T15:27:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/37831",
            "html_url": "https://github.com/saltstack/salt/pull/37831",
            "diff_url": "https://github.com/saltstack/salt/pull/37831.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/37831.patch"
        },
        "body": "### What does this PR do?\r\n\r\nWhen `self.auth.authenticate()` would throw this exception:\r\n`raise SaltClientError(\r\n'Attempt to authenticate with the salt master failed with timeout error')`\r\n\r\nThe code would throw an additional exception dealing with the original\r\nexception as follows:\r\n\r\n```\r\n  File \"...\\salt\\transport\\tcp.py\", line 500, in connect\r\n      if '-|RETRY|-' not in exc:\r\n      TypeError: argument of type 'SaltClientError' is not iterable\r\n```\r\n\r\nAnd since the final exception being thrown is `TypeError` instead of\r\n`SaltClientError`, caller code would not correctly deal with this\r\ncase and the salt-minion would terminate.\r\n\r\nFix this by using Python 3 friendly `str(exc)` instead of plain\r\n`exc` when doing a string search.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\nSigned-off-by: Sergey Kizunov <sergey.kizunov@ni.com>",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/36643",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/36643/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/36643/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/36643/events",
        "html_url": "https://github.com/saltstack/salt/pull/36643",
        "id": 179825638,
        "node_id": "MDExOlB1bGxSZXF1ZXN0ODcxNTczMDY=",
        "number": 36643,
        "title": "a small, and unfortunate error",
        "user": {
            "login": "jamesloosli",
            "id": 3769605,
            "node_id": "MDQ6VXNlcjM3Njk2MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3769605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesloosli",
            "html_url": "https://github.com/jamesloosli",
            "followers_url": "https://api.github.com/users/jamesloosli/followers",
            "following_url": "https://api.github.com/users/jamesloosli/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesloosli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesloosli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesloosli/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesloosli/orgs",
            "repos_url": "https://api.github.com/users/jamesloosli/repos",
            "events_url": "https://api.github.com/users/jamesloosli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesloosli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-09-28T16:44:31Z",
        "updated_at": "2017-01-17T04:26:25Z",
        "closed_at": "2016-09-28T20:20:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/36643",
            "html_url": "https://github.com/saltstack/salt/pull/36643",
            "diff_url": "https://github.com/saltstack/salt/pull/36643.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/36643.patch"
        },
        "body": "### What does this PR do?\n\nThis corrects a dumb argument naming error that was keeping elasticsearch index creation states from working.\n### What issues does this PR fix or reference?\n\nhttps://github.com/saltstack/salt/issues/36642\n### Previous Behavior\n\n```\n----------\n          ID: elasticsearch_index_some_index_name\n    Function: elasticsearch_index.present\n        Name: appointment\n      Result: False\n     Comment: An exception occurred in this state: Traceback (most recent call last):\n                File \"/usr/lib/python2.7/site-packages/salt/state.py\", line 1723, in call\n                  **cdata['kwargs'])\n                File \"/usr/lib/python2.7/site-packages/salt/loader.py\", line 1650, in wrapper\n                  return f(*args, **kwargs)\n                File \"/usr/lib/python2.7/site-packages/salt/states/elasticsearch_index.py\", line 53, in present\n                  index_exists = __salt__['elasticsearch.index_exists'](name=name)\n              TypeError: index_exists() got an unexpected keyword argument 'name'\n     Started: 23:58:37.170851\n    Duration: 1.342 ms\n     Changes:\n```\n### New Behavior\n\n```\n----------\n          ID: elasticsearch_index_some_index_name\n    Function: elasticsearch_index.present\n        Name: some_index_name\n      Result: True\n     Comment: Index some_index_name is already present\n     Started: 15:41:33.948572\n    Duration: 2.834 ms\n     Changes:\n```\n### Tests written?\n\nNo.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/38031",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/38031/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/38031/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/38031/events",
        "html_url": "https://github.com/saltstack/salt/pull/38031",
        "id": 192948430,
        "node_id": "MDExOlB1bGxSZXF1ZXN0OTYxNjA0MDc=",
        "number": 38031,
        "title": "Windows: Fix exception when certain grains are None",
        "user": {
            "login": "skizunov",
            "id": 11562452,
            "node_id": "MDQ6VXNlcjExNTYyNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11562452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skizunov",
            "html_url": "https://github.com/skizunov",
            "followers_url": "https://api.github.com/users/skizunov/followers",
            "following_url": "https://api.github.com/users/skizunov/following{/other_user}",
            "gists_url": "https://api.github.com/users/skizunov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skizunov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skizunov/subscriptions",
            "organizations_url": "https://api.github.com/users/skizunov/orgs",
            "repos_url": "https://api.github.com/users/skizunov/repos",
            "events_url": "https://api.github.com/users/skizunov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skizunov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-12-01T20:05:27Z",
        "updated_at": "2016-12-01T22:02:51Z",
        "closed_at": "2016-12-01T22:02:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/38031",
            "html_url": "https://github.com/saltstack/salt/pull/38031",
            "diff_url": "https://github.com/saltstack/salt/pull/38031.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/38031.patch"
        },
        "body": "### What does this PR do?\r\n\r\nCertain grains may be set to `None` due to PR #37593. When either\r\nthe `manufacturer` or `productname` grain is `None` due to the cleaning\r\nfeature from the above referenced PR, an exception will be thrown that\r\nlooks like:\r\n\r\n```\r\nFile \"...\\salt\\grains\\core.py\", line 442, in _windows_virtual\r\n  if 'QEMU' in osdata.get('manufacturer', ''):\r\nTypeError: argument of type 'NoneType' is not iterable\r\n```\r\n\r\nFix this by making `_windows_virtual` tolerant to grains that have\r\na value of `None`.\r\n\r\n### Tests written?\r\n\r\nNo\r\n\r\nSigned-off-by: Sergey Kizunov <sergey.kizunov@ni.com>",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/33190",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/33190/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/33190/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/33190/events",
        "html_url": "https://github.com/saltstack/salt/pull/33190",
        "id": 154350045,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Njk3NDc1Mzg=",
        "number": 33190,
        "title": "Fixes Type error in jboss state module when concatenating comments",
        "user": {
            "login": "usbportnoy",
            "id": 7015813,
            "node_id": "MDQ6VXNlcjcwMTU4MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7015813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/usbportnoy",
            "html_url": "https://github.com/usbportnoy",
            "followers_url": "https://api.github.com/users/usbportnoy/followers",
            "following_url": "https://api.github.com/users/usbportnoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/usbportnoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/usbportnoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/usbportnoy/subscriptions",
            "organizations_url": "https://api.github.com/users/usbportnoy/orgs",
            "repos_url": "https://api.github.com/users/usbportnoy/repos",
            "events_url": "https://api.github.com/users/usbportnoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/usbportnoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2016-05-11T21:44:06Z",
        "updated_at": "2016-11-01T21:57:11Z",
        "closed_at": "2016-05-12T20:39:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/33190",
            "html_url": "https://github.com/saltstack/salt/pull/33190",
            "diff_url": "https://github.com/saltstack/salt/pull/33190.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/33190.patch"
        },
        "body": "### What does this PR do?\n\nFixes Type error in jboss state module when concatenating comments\n### What issues does this PR fix or reference?\n\nDeploy to jboss TypeError at boss7.py:469 #33187\n### Previous Behavior\n\nBreaks when concatenating a string to a message defined as NoneType\n### Tests written?\n\nNo\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/37689",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/37689/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/37689/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/37689/events",
        "html_url": "https://github.com/saltstack/salt/pull/37689",
        "id": 189263687,
        "node_id": "MDExOlB1bGxSZXF1ZXN0OTM2NzU1NTI=",
        "number": 37689,
        "title": "joyent: Handle error if deployment fails",
        "user": {
            "login": "eradman",
            "id": 1175398,
            "node_id": "MDQ6VXNlcjExNzUzOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1175398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eradman",
            "html_url": "https://github.com/eradman",
            "followers_url": "https://api.github.com/users/eradman/followers",
            "following_url": "https://api.github.com/users/eradman/following{/other_user}",
            "gists_url": "https://api.github.com/users/eradman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eradman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eradman/subscriptions",
            "organizations_url": "https://api.github.com/users/eradman/orgs",
            "repos_url": "https://api.github.com/users/eradman/repos",
            "events_url": "https://api.github.com/users/eradman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eradman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-11-15T00:15:32Z",
        "updated_at": "2016-11-15T02:41:59Z",
        "closed_at": "2016-11-15T02:41:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/37689",
            "html_url": "https://github.com/saltstack/salt/pull/37689",
            "diff_url": "https://github.com/saltstack/salt/pull/37689.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/37689.patch"
        },
        "body": "### What does this PR do?\r\n\r\nTry to handle errors during the provisioning of new VMs on Joyent.\r\n\r\n### Previous Behavior\r\n\r\nIf VM creation failed a confusing traceback ending with the following would be printed:\r\n\r\n    TypeError: 'NoneType' object has no attribute '__getitem__'\r\n\r\nThe code path was set up to handle exceptions, but if a failure occurred an exception was not raised. Instead interpret the return values.\r\n\r\n### New Behavior\r\n\r\nIf a parameter in the profile is not correct the following error is logged:\r\n\r\n    Error: There was a profile error: Failed to deploy VM\r\n\r\n### Tests written?\r\n\r\nYes. The heavy use of mocks can be reduced by relocating RSA key processing to a helper function.\r\n\r\nAlso fix up some pylint warnings.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/36608",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/36608/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/36608/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/36608/events",
        "html_url": "https://github.com/saltstack/salt/pull/36608",
        "id": 179534643,
        "node_id": "MDExOlB1bGxSZXF1ZXN0ODY5NTg1ODE=",
        "number": 36608,
        "title": "PY3: Fix broken minion",
        "user": {
            "login": "skizunov",
            "id": 11562452,
            "node_id": "MDQ6VXNlcjExNTYyNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11562452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skizunov",
            "html_url": "https://github.com/skizunov",
            "followers_url": "https://api.github.com/users/skizunov/followers",
            "following_url": "https://api.github.com/users/skizunov/following{/other_user}",
            "gists_url": "https://api.github.com/users/skizunov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skizunov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skizunov/subscriptions",
            "organizations_url": "https://api.github.com/users/skizunov/orgs",
            "repos_url": "https://api.github.com/users/skizunov/repos",
            "events_url": "https://api.github.com/users/skizunov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skizunov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-09-27T15:53:53Z",
        "updated_at": "2016-09-28T02:37:05Z",
        "closed_at": "2016-09-28T02:37:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/36608",
            "html_url": "https://github.com/saltstack/salt/pull/36608",
            "diff_url": "https://github.com/saltstack/salt/pull/36608.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/36608.patch"
        },
        "body": "### What does this PR do?\n\nThe following error occurs when the salt-minion runs using Python 3:\n\n```\n  File \"...\\bin\\lib\\site-packages\\salt\\minion.py\", line 1880,\n    in handle_event\n      elif package.startswith('__schedule_return'):\n      TypeError: startswith first arg must be bytes or a tuple of bytes,\n      not str\n```\n\nUse `tag` instead of `package` when reading the tag names just like\nevery other case.\n\nBroken by PR #36202.\n### Tests written?\n\nNo\n\nSigned-off-by: Sergey Kizunov sergey.kizunov@ni.com\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/37527",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/37527/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/37527/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/37527/events",
        "html_url": "https://github.com/saltstack/salt/pull/37527",
        "id": 187836085,
        "node_id": "MDExOlB1bGxSZXF1ZXN0OTI2NjkzMDc=",
        "number": 37527,
        "title": "Add syndic_id=None kwarg to save_minions funcs in returners",
        "user": {
            "login": "rallytime",
            "id": 6547906,
            "node_id": "MDQ6VXNlcjY1NDc5MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6547906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rallytime",
            "html_url": "https://github.com/rallytime",
            "followers_url": "https://api.github.com/users/rallytime/followers",
            "following_url": "https://api.github.com/users/rallytime/following{/other_user}",
            "gists_url": "https://api.github.com/users/rallytime/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rallytime/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rallytime/subscriptions",
            "organizations_url": "https://api.github.com/users/rallytime/orgs",
            "repos_url": "https://api.github.com/users/rallytime/repos",
            "events_url": "https://api.github.com/users/rallytime/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rallytime/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-11-07T21:37:33Z",
        "updated_at": "2017-01-17T04:29:36Z",
        "closed_at": "2016-11-07T23:04:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/37527",
            "html_url": "https://github.com/saltstack/salt/pull/37527",
            "diff_url": "https://github.com/saltstack/salt/pull/37527.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/37527.patch"
        },
        "body": "### What does this PR do?\r\nCleans up stack traces when a returner is used that has the `save_minions` function, but is missing the `syndic_id` kwarg. This PR adds this kwarg to functions that are only available for API consistency, but currently don't perform any functionality.\r\n\r\n### What issues does this PR fix or reference?\r\nFixes #35016\r\n\r\n### Previous Behavior\r\nIf the `save_minions` func is called on a returner that doesn't have the `syndic_id` kwarg, a stacktrace will occur:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.6/site-packages/salt/master.py\", line 1540, in run_func\r\n    ret = getattr(self, func)(load)\r\n  File \"/usr/lib/python2.6/site-packages/salt/master.py\", line 1308, in _minion_event\r\n    self._handle_minion_event(load)\r\n  File \"/usr/lib/python2.6/site-packages/salt/master.py\", line 1334, in _handle_minion_event\r\n    syndic_id=id_)\r\n  File \"/usr/lib/python2.6/site-packages/salt/utils/job.py\", line 114, in store_minions\r\n    mminion.returners[minions_fstr](jid, minions, syndic_id=syndic_id)\r\nTypeError: save_minions() got an unexpected keyword argument 'syndic_id'\r\n```\r\n\r\n### New Behavior\r\nNo more stack traces.\r\n\r\nSince all of the `save_minions` funcs changed here are implemented strictly for API consistency anyway, adding this kwarg just helps clean up some stacktraces without changing any functionality.\r\n\r\n### Tests written?\r\n\r\nYes/No\r\n\r\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/35763",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/35763/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/35763/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/35763/events",
        "html_url": "https://github.com/saltstack/salt/pull/35763",
        "id": 173225295,
        "node_id": "MDExOlB1bGxSZXF1ZXN0ODI3MzQ2MDM=",
        "number": 35763,
        "title": "Sphinx crash: documentation config fix",
        "user": {
            "login": "isbm",
            "id": 1073714,
            "node_id": "MDQ6VXNlcjEwNzM3MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1073714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isbm",
            "html_url": "https://github.com/isbm",
            "followers_url": "https://api.github.com/users/isbm/followers",
            "following_url": "https://api.github.com/users/isbm/following{/other_user}",
            "gists_url": "https://api.github.com/users/isbm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/isbm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/isbm/subscriptions",
            "organizations_url": "https://api.github.com/users/isbm/orgs",
            "repos_url": "https://api.github.com/users/isbm/repos",
            "events_url": "https://api.github.com/users/isbm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/isbm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 77737132,
                "node_id": "MDU6TGFiZWw3NzczNzEzMg==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/Pending-Discussion",
                "name": "Pending-Discussion",
                "color": "c7def8",
                "default": false,
                "description": "The issue or pull request needs more discussion before it can be closed or merged"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2016-08-25T14:52:23Z",
        "updated_at": "2016-08-31T10:17:48Z",
        "closed_at": "2016-08-25T21:12:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/35763",
            "html_url": "https://github.com/saltstack/salt/pull/35763",
            "diff_url": "https://github.com/saltstack/salt/pull/35763.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/35763.patch"
        },
        "body": "### What does this PR do?\n\nFixes sphinx doc generator on mocked imports.\n### What issues does this PR fix or reference?\n### Previous Behavior\n\n```\nNo need to update translations. Skipping...\nsphinx-build -b html -d _build/doctrees    . _build/html\nRunning Sphinx v1.4.6\nmaking output directory...\nloading translations [en]... done\nloading pickled environment... not yet created\n[autosummary] generating autosummary for: contents.rst, faq.rst, glossary.rst,\nref/auth/all/index.rst, ref/auth/all/salt.auth.auto.rst, ref/auth/all/salt.auth.django.rst,\nref/auth/all/salt.auth.keystone.rst, ref/auth/all/salt.auth.ldap.rst, \nref/auth/all/salt.auth.mysql.rst, ref/auth/all/salt.auth.pam.rst, ...,\ntopics/tutorials/walkthrough_macosx.rst, topics/tutorials/writing_tests.rst,\ntopics/using_salt.rst, topics/virt/disk.rst, topics/virt/index.rst, topics/virt/nic.rst,\ntopics/windows/index.rst, topics/windows/windows-package-manager.rst,\ntopics/windows/windows-specific-behavior.rst, topics/yaml/index.rst\n\nException occurred:\n  File \"/builds/salt-2016.3.2/salt/config/__init__.py\", line 89, in _gather_buffer_space\n    return max([total_mem * 0.05, 10 << 20])\nTypeError: unsupported operand type(s) for *: 'Mock' and 'float'\nThe full traceback has been saved in /tmp/sphinx-err-MhWC7u.log, if you want to report the issue to the developers.\nPlease also report this if it was a user error, so that a better error message can be provided next time.\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\nMakefile:73: recipe for target 'html' failed\nmake: *** [html] Error 1\n```\n### New Behavior\n\nProblem gone.\n### Tests written?\n\nNo\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/36268",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/36268/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/36268/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/36268/events",
        "html_url": "https://github.com/saltstack/salt/pull/36268",
        "id": 176667327,
        "node_id": "MDExOlB1bGxSZXF1ZXN0ODUwNjcxNjE=",
        "number": 36268,
        "title": "Fixed arguments to VPC peering function",
        "user": {
            "login": "blarghmatey",
            "id": 479088,
            "node_id": "MDQ6VXNlcjQ3OTA4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/479088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blarghmatey",
            "html_url": "https://github.com/blarghmatey",
            "followers_url": "https://api.github.com/users/blarghmatey/followers",
            "following_url": "https://api.github.com/users/blarghmatey/following{/other_user}",
            "gists_url": "https://api.github.com/users/blarghmatey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blarghmatey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blarghmatey/subscriptions",
            "organizations_url": "https://api.github.com/users/blarghmatey/orgs",
            "repos_url": "https://api.github.com/users/blarghmatey/repos",
            "events_url": "https://api.github.com/users/blarghmatey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blarghmatey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2016-09-13T15:09:05Z",
        "updated_at": "2016-09-15T21:07:45Z",
        "closed_at": "2016-09-15T21:07:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/36268",
            "html_url": "https://github.com/saltstack/salt/pull/36268",
            "diff_url": "https://github.com/saltstack/salt/pull/36268.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/36268.patch"
        },
        "body": "### What does this PR do?\n\nFix a bug in the keyword arguments used for `is_peering_connection_pending` in the state function `accept_vpc_peering_connection`.\n### What issues does this PR fix or reference?\n\nNone\n### Previous Behavior\n\nWhen using the `accept_vpc_peering_connection` state function it would result in the following stacktrace:\n\n```\n               An exception occurred in this state: Traceback (most recent call last):\n                File \"/usr/lib/python2.7/dist-packages/salt/state.py\", line 1744, in call\n                  **cdata['kwargs'])\n                File \"/usr/lib/python2.7/dist-packages/salt/loader.py\", line 1704, in wrapper\n                  return f(*args, **kwargs)\n                File \"/usr/lib/python2.7/dist-packages/salt/states/boto_vpc.py\", line 1487, in accept_vpc_peering_connection\n                  profile=profile\n              TypeError: is_peering_connection_pending() got an unexpected keyword argument 'name'\n```\n### New Behavior\n\nAn exception is not raised.\n### Tests written?\n\nNo\n\nPlease review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/36464",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/36464/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/36464/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/36464/events",
        "html_url": "https://github.com/saltstack/salt/pull/36464",
        "id": 178321842,
        "node_id": "MDExOlB1bGxSZXF1ZXN0ODYxNDYwMzY=",
        "number": 36464,
        "title": "Fix `options` parameter processing in `postgres_tablespace.present`",
        "user": {
            "login": "vutny",
            "id": 16338056,
            "node_id": "MDQ6VXNlcjE2MzM4MDU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16338056?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vutny",
            "html_url": "https://github.com/vutny",
            "followers_url": "https://api.github.com/users/vutny/followers",
            "following_url": "https://api.github.com/users/vutny/following{/other_user}",
            "gists_url": "https://api.github.com/users/vutny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vutny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vutny/subscriptions",
            "organizations_url": "https://api.github.com/users/vutny/orgs",
            "repos_url": "https://api.github.com/users/vutny/repos",
            "events_url": "https://api.github.com/users/vutny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vutny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-09-21T11:39:35Z",
        "updated_at": "2016-09-22T04:24:04Z",
        "closed_at": "2016-09-22T04:24:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/36464",
            "html_url": "https://github.com/saltstack/salt/pull/36464",
            "diff_url": "https://github.com/saltstack/salt/pull/36464.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/36464.patch"
        },
        "body": "### What does this PR do?\n\nIt makes the `options` parameter of the `postgres_tablespace.present` work and report changes if any option was changed. Updated the docsting with meaningful example.\n### Previous Behavior\n\nThe `postgres_tablespace.present` fails with correctly provided `options` dictionary.\n\nFor example, following state\n\n``` yaml\nmy_space:\n  postgres_tablespace.present:\n    - directory: /srv/my_tablespace\n    - options:\n        seq_page_cost: 1.0\n        random_page_cost: 4.0\n```\n\ngives something like this:\n\n```\n[ERROR   ] An exception occurred in this state: Traceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/salt/state.py\", line 1733, in call\n    **cdata['kwargs'])\n  File \"/usr/lib/python2.7/site-packages/salt/loader.py\", line 1652, in wrapper\n    return f(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/salt/states/postgres_tablespace.py\", line 124, in present\n    for k, v in options:\nValueError: too many values to unpack\n```\n\nAnd after fixing that issue it leads to this:\n\n```\n[ERROR   ] An exception occurred in this state: Traceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/salt/state.py\", line 1733, in call\n    **cdata['kwargs'])\n  File \"/usr/lib/python2.7/site-packages/salt/loader.py\", line 1652, in wrapper\n    return f(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/salt/states/postgres_tablespace.py\", line 142, in present\n    set_options={k: v}):\nTypeError: tablespace_alter() got an unexpected keyword argument 'set_options'\n```\n### New Behavior\n\nThe `postgres_tablespace.present` state works with `options` parameter and reports changes.\n\n``` yaml\n----------\n          ID: my_space\n    Function: postgres_tablespace.present\n        Name: my_space\n      Result: True\n     Comment: Tablespace my_space opts changed\n     Started: 11:00:02.593824\n    Duration: 1389.75 ms\n     Changes:   \n              ----------\n              my_space:\n                  ----------\n                  options:\n                      ----------\n                      random_page_cost:\n                          4.0\n                      seq_page_cost:\n                          1.0\n```\n### Tests written?\n\nNo\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/34103",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/34103/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/34103/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/34103/events",
        "html_url": "https://github.com/saltstack/salt/pull/34103",
        "id": 160982338,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NzQzMTA3MzY=",
        "number": 34103,
        "title": "Fix diskusage beacon",
        "user": {
            "login": "morganwillcock",
            "id": 14958747,
            "node_id": "MDQ6VXNlcjE0OTU4NzQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/14958747?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/morganwillcock",
            "html_url": "https://github.com/morganwillcock",
            "followers_url": "https://api.github.com/users/morganwillcock/followers",
            "following_url": "https://api.github.com/users/morganwillcock/following{/other_user}",
            "gists_url": "https://api.github.com/users/morganwillcock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/morganwillcock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/morganwillcock/subscriptions",
            "organizations_url": "https://api.github.com/users/morganwillcock/orgs",
            "repos_url": "https://api.github.com/users/morganwillcock/repos",
            "events_url": "https://api.github.com/users/morganwillcock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/morganwillcock/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2016-06-17T21:56:38Z",
        "updated_at": "2016-06-21T16:52:35Z",
        "closed_at": "2016-06-21T16:25:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/34103",
            "html_url": "https://github.com/saltstack/salt/pull/34103",
            "diff_url": "https://github.com/saltstack/salt/pull/34103.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/34103.patch"
        },
        "body": "### What does this PR do?\n\nThis fixes the diskusage beacon, which looks to have been broken by #33474 (\"TypeError: must be string, not dict\" when try to check a mount point). This effectively reverts #33474.\n### What issues does this PR fix or reference?\n#33972\n### Tests written?\n\nNo\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/34702",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/34702/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/34702/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/34702/events",
        "html_url": "https://github.com/saltstack/salt/pull/34702",
        "id": 165864113,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Nzc2NjgzOTk=",
        "number": 34702,
        "title": "Fixed dockerng.list_tags",
        "user": {
            "login": "farcaller",
            "id": 693,
            "node_id": "MDQ6VXNlcjY5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/693?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/farcaller",
            "html_url": "https://github.com/farcaller",
            "followers_url": "https://api.github.com/users/farcaller/followers",
            "following_url": "https://api.github.com/users/farcaller/following{/other_user}",
            "gists_url": "https://api.github.com/users/farcaller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/farcaller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/farcaller/subscriptions",
            "organizations_url": "https://api.github.com/users/farcaller/orgs",
            "repos_url": "https://api.github.com/users/farcaller/repos",
            "events_url": "https://api.github.com/users/farcaller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/farcaller/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2016-07-15T19:49:38Z",
        "updated_at": "2016-08-09T17:51:15Z",
        "closed_at": "2016-07-15T20:50:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/34702",
            "html_url": "https://github.com/saltstack/salt/pull/34702",
            "diff_url": "https://github.com/saltstack/salt/pull/34702.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/34702.patch"
        },
        "body": "### What does this PR do?\n\nFixes a bug in dockerng module crashing when an image doesn't have tags.\n### Previous Behavior\n\n```\n$ docker pull registry/image:latest\n...\n# update the image in the registry\n$ docker pull registry/image:latest\n... # pulls new image\n$ docker images\nREPOSITORY                          TAG                 IMAGE ID            CREATED              SIZE\nregistry/image               latest              b510b2249009        About a minute ago   33.23 MB\nregistry/image               <none>              888075fb7fb6        About an hour ago    33.23 MB\n```\n\n```\n     Comment: An exception occurred in this state: Traceback (most recent call last):\n                File \"/var/tmp/.prod_0615df_salt/py2/salt/state.py\", line 1723, in call\n                  **cdata['kwargs'])\n                File \"/var/tmp/.prod_0615df_salt/py2/salt/loader.py\", line 1650, in wrapper\n                  return f(*args, **kwargs)\n                File \"/var/tmp/.prod_0615df_salt/py2/salt/states/dockerng.py\", line 1519, in running\n                  if image not in __salt__['dockerng.list_tags']():\n                File \"/var/tmp/.prod_0615df_salt/py2/salt/modules/dockerng.py\", line 2240, in list_tags\n                  for repo_tag in item.get('RepoTags', []):\n              TypeError: 'NoneType' object is not iterable\n```\n### Tests written?\n\nNo\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/33611",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/33611/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/33611/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/33611/events",
        "html_url": "https://github.com/saltstack/salt/pull/33611",
        "id": 157388215,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NzE4MjgzMjM=",
        "number": 33611,
        "title": "2015.5",
        "user": {
            "login": "rolffokkens",
            "id": 5619718,
            "node_id": "MDQ6VXNlcjU2MTk3MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5619718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolffokkens",
            "html_url": "https://github.com/rolffokkens",
            "followers_url": "https://api.github.com/users/rolffokkens/followers",
            "following_url": "https://api.github.com/users/rolffokkens/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolffokkens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolffokkens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolffokkens/subscriptions",
            "organizations_url": "https://api.github.com/users/rolffokkens/orgs",
            "repos_url": "https://api.github.com/users/rolffokkens/repos",
            "events_url": "https://api.github.com/users/rolffokkens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolffokkens/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-05-29T14:14:58Z",
        "updated_at": "2016-06-02T19:32:58Z",
        "closed_at": "2016-06-02T19:32:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/33611",
            "html_url": "https://github.com/saltstack/salt/pull/33611",
            "diff_url": "https://github.com/saltstack/salt/pull/33611.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/33611.patch"
        },
        "body": "This PR solves 2 issues that appeared while initiating sqlite3 returner usage:\n- Type in master,py regarding base.exceptions (solved in master already)\n- A TypeError exception resulting from sqlite3 returner passing improper data\n\nWe're succesfully using these patches in our production salt environment.\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/33908",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/33908/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/33908/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/33908/events",
        "html_url": "https://github.com/saltstack/salt/pull/33908",
        "id": 159442398,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NzMyMzg2OTM=",
        "number": 33908,
        "title": "[boto_lambda] handle ommitted Permissions parameter",
        "user": {
            "login": "ticosax",
            "id": 1174343,
            "node_id": "MDQ6VXNlcjExNzQzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1174343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ticosax",
            "html_url": "https://github.com/ticosax",
            "followers_url": "https://api.github.com/users/ticosax/followers",
            "following_url": "https://api.github.com/users/ticosax/following{/other_user}",
            "gists_url": "https://api.github.com/users/ticosax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ticosax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ticosax/subscriptions",
            "organizations_url": "https://api.github.com/users/ticosax/orgs",
            "repos_url": "https://api.github.com/users/ticosax/repos",
            "events_url": "https://api.github.com/users/ticosax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ticosax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2016-06-09T15:49:01Z",
        "updated_at": "2016-06-10T17:31:23Z",
        "closed_at": "2016-06-10T17:31:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/33908",
            "html_url": "https://github.com/saltstack/salt/pull/33908",
            "diff_url": "https://github.com/saltstack/salt/pull/33908.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/33908.patch"
        },
        "body": "### What does this PR do?\n\nIf `Permissions` parameter was ommited but actual lambda function defines `Permissions`,\nthe state would fail attempting to compare old and new values.\n\n```\nAn exception occurred in this state: Traceback (most recent call last):\nFile \"/usr/lib/python2.7/dist-packages/salt/state.py\", line 1703, in call\n    **cdata['kwargs'])\nFile \"/usr/lib/python2.7/dist-packages/salt/loader.py\", line 1649, in wrapper\n    return f(*args, **kwargs)\nFile \"/usr/lib/python2.7/dist-packages/salt/states/boto_lambda.py\", line 255, in function_present\n    region, key, keyid, profile)\nFile \"/usr/lib/python2.7/dist-packages/salt/states/boto_lambda.py\", line 372, in _function_permissions_present\n    diffs = salt.utils.compare_dicts(curr_permissions, Permissions)\nFile \"/usr/lib/python2.7/dist-packages/salt/utils/__init__.py\", line 2355, in compare_dicts\n    elif key not in new:\nTypeError: argument of type 'NoneType' is not iterable\n```\n### What issues does this PR fix or reference?\n\nnone\n### Tests written?\n\nYes\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/33952",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/33952/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/33952/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/33952/events",
        "html_url": "https://github.com/saltstack/salt/pull/33952",
        "id": 159736455,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NzM0NDU1Mzk=",
        "number": 33952,
        "title": "Add base argument to salt-ssh grains wrapper for filter_by func",
        "user": {
            "login": "rallytime",
            "id": 6547906,
            "node_id": "MDQ6VXNlcjY1NDc5MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6547906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rallytime",
            "html_url": "https://github.com/rallytime",
            "followers_url": "https://api.github.com/users/rallytime/followers",
            "following_url": "https://api.github.com/users/rallytime/following{/other_user}",
            "gists_url": "https://api.github.com/users/rallytime/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rallytime/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rallytime/subscriptions",
            "organizations_url": "https://api.github.com/users/rallytime/orgs",
            "repos_url": "https://api.github.com/users/rallytime/repos",
            "events_url": "https://api.github.com/users/rallytime/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rallytime/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-06-10T22:38:21Z",
        "updated_at": "2016-06-13T15:51:38Z",
        "closed_at": "2016-06-13T15:51:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/33952",
            "html_url": "https://github.com/saltstack/salt/pull/33952",
            "diff_url": "https://github.com/saltstack/salt/pull/33952.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/33952.patch"
        },
        "body": "### What does this PR do?\n\nAdds the `base` kwarg to the `grains.filter_by` function in the salt-ssh wrapper.\n### What issues does this PR fix or reference?\n\nFixes #33911 \n### Previous Behavior\n\n```\nroot@rallytime:~# salt-ssh -i rally-ssh state.sls example\n[ERROR   ] Rendering exception occurred: Jinja error: filter_by() got an unexpected keyword argument 'base'\nTraceback (most recent call last):\n  File \"/root/SaltStack/salt/salt/utils/templates.py\", line 366, in render_jinja_tmpl\n    output = template.render(**decoded_context)\n  File \"/usr/local/lib/python2.7/dist-packages/jinja2/environment.py\", line 989, in render\n    return self.environment.handle_exception(exc_info, True)\n  File \"/usr/local/lib/python2.7/dist-packages/jinja2/environment.py\", line 754, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"<template>\", line 1, in top-level template code\nTypeError: filter_by() got an unexpected keyword argument 'base'\n\n; line 1\n\n---\n{% set test = salt['grains.filter_by']({    <======================\n    'default': {'foo': 'bar'},\n}, base='default') %}\n\ntest-it:\n  file.managed:\n[...]\n\n---\n[CRITICAL] Rendering SLS 'base:example' failed: Jinja error: filter_by() got an unexpected keyword argument 'base'\nTraceback (most recent call last):\n  File \"/root/SaltStack/salt/salt/utils/templates.py\", line 366, in render_jinja_tmpl\n    output = template.render(**decoded_context)\n  File \"/usr/local/lib/python2.7/dist-packages/jinja2/environment.py\", line 989, in render\n    return self.environment.handle_exception(exc_info, True)\n  File \"/usr/local/lib/python2.7/dist-packages/jinja2/environment.py\", line 754, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"<template>\", line 1, in top-level template code\nTypeError: filter_by() got an unexpected keyword argument 'base'\n\n; line 1\n\n---\n{% set test = salt['grains.filter_by']({    <======================\n    'default': {'foo': 'bar'},\n}, base='default') %}\n\ntest-it:\n  file.managed:\n[...]\n\n---\nrally-ssh:\n    - Rendering SLS 'base:example' failed: Jinja error: filter_by() got an unexpected keyword argument 'base'\n      Traceback (most recent call last):\n        File \"/root/SaltStack/salt/salt/utils/templates.py\", line 366, in render_jinja_tmpl\n          output = template.render(**decoded_context)\n        File \"/usr/local/lib/python2.7/dist-packages/jinja2/environment.py\", line 989, in render\n          return self.environment.handle_exception(exc_info, True)\n        File \"/usr/local/lib/python2.7/dist-packages/jinja2/environment.py\", line 754, in handle_exception\n          reraise(exc_type, exc_value, tb)\n        File \"<template>\", line 1, in top-level template code\n      TypeError: filter_by() got an unexpected keyword argument 'base'\n\n      ; line 1\n\n      ---\n      {% set test = salt['grains.filter_by']({    <======================\n          'default': {'foo': 'bar'},\n      }, base='default') %}\n\n      test-it:\n        file.managed:\n      [...]\n      ---\n```\n### New Behavior\n\n```\nroot@rallytime:~# salt-ssh -i rally-ssh state.sls example\nrally-ssh:\n----------\n          ID: test-it\n    Function: file.managed\n        Name: /tmp/bar\n      Result: True\n     Comment: Empty file\n     Started: 22:33:08.496032\n    Duration: 45.968 ms\n     Changes:\n              ----------\n              new:\n                  file /tmp/bar created\n\nSummary for rally-ssh\n------------\nSucceeded: 1 (changed=1)\nFailed:    0\n------------\nTotal states run:     1\n```\n### Tests written?\n\nNo\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/32944",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/32944/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/32944/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/32944/events",
        "html_url": "https://github.com/saltstack/salt/pull/32944",
        "id": 151819339,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjgzNDAwMzg=",
        "number": 32944,
        "title": "OpenSSL.crypto.X509Extension object is not serializable",
        "user": {
            "login": "jirikotlin",
            "id": 13884115,
            "node_id": "MDQ6VXNlcjEzODg0MTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13884115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jirikotlin",
            "html_url": "https://github.com/jirikotlin",
            "followers_url": "https://api.github.com/users/jirikotlin/followers",
            "following_url": "https://api.github.com/users/jirikotlin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jirikotlin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jirikotlin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jirikotlin/subscriptions",
            "organizations_url": "https://api.github.com/users/jirikotlin/orgs",
            "repos_url": "https://api.github.com/users/jirikotlin/repos",
            "events_url": "https://api.github.com/users/jirikotlin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jirikotlin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-04-29T08:41:46Z",
        "updated_at": "2016-04-29T16:40:12Z",
        "closed_at": "2016-04-29T16:40:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/32944",
            "html_url": "https://github.com/saltstack/salt/pull/32944",
            "diff_url": "https://github.com/saltstack/salt/pull/32944.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/32944.patch"
        },
        "body": "### What issues does this PR fix or reference?\n\nFunction `cert_info` in tls module fails if certificate has additional info because OpenSSL.crypto.X509Extension object is not serializable:\n\n`salt '*' tls.cert_info /path/to/cert.pem`\n`Minion did not return. [No response]`\n\nLog from minion:\n`TypeError: can't serialize <OpenSSL.crypto.X509Extension object at 0x7fc80d70c350>`\n### Tests written?\n\nNo\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/32955",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/32955/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/32955/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/32955/events",
        "html_url": "https://github.com/saltstack/salt/pull/32955",
        "id": 151934872,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Njg0MTA3NjU=",
        "number": 32955,
        "title": "Fixed glusterfs.peered output",
        "user": {
            "login": "atengler",
            "id": 11465219,
            "node_id": "MDQ6VXNlcjExNDY1MjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11465219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atengler",
            "html_url": "https://github.com/atengler",
            "followers_url": "https://api.github.com/users/atengler/followers",
            "following_url": "https://api.github.com/users/atengler/following{/other_user}",
            "gists_url": "https://api.github.com/users/atengler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atengler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atengler/subscriptions",
            "organizations_url": "https://api.github.com/users/atengler/orgs",
            "repos_url": "https://api.github.com/users/atengler/repos",
            "events_url": "https://api.github.com/users/atengler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atengler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2016-04-29T18:06:09Z",
        "updated_at": "2016-05-03T15:57:36Z",
        "closed_at": "2016-05-03T15:57:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/32955",
            "html_url": "https://github.com/saltstack/salt/pull/32955",
            "diff_url": "https://github.com/saltstack/salt/pull/32955.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/32955.patch"
        },
        "body": "### What does this PR do?\n\nFixes 'NoneType' object is not iterable issue and removes existing peers from newpeers list\n### What issues does this PR fix or reference?\n\nIssue #32954\n### Previous Behavior\n\n```\n----------\n          ID: glusterfs_peers\n    Function: glusterfs.peered\n        Name: 172.16.20.101\n      Result: False\n     Comment: An exception occurred in this state: Traceback (most recent call last):\n                File \"/usr/lib/python2.7/dist-packages/salt/state.py\", line 1626, in call\n                  **cdata['kwargs'])\n                File \"/usr/lib/python2.7/dist-packages/salt/loader.py\", line 1492, in wrapper\n                  return f(*args, **kwargs)\n                File \"/usr/lib/python2.7/dist-packages/salt/states/glusterfs.py\", line 92, in peered\n                  if newpeers and name in newpeers or any([name in newpeers[x] for x in newpeers]):\n              TypeError: 'NoneType' object is not iterable\n     Started: 19:25:36.955326\n    Duration: 268.857 ms\n     Changes:   \n```\n### New Behavior\n\n```\n----------\n          ID: glusterfs_peers\n    Function: glusterfs.peered\n        Name: 172.16.20.101\n      Result: True\n     Comment: Peering with localhost is not needed\n     Started: 20:05:16.446194\n    Duration: 271.019 ms\n     Changes:   \n```\n### Tests written?\n\nNo\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/33606",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/33606/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/33606/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/33606/events",
        "html_url": "https://github.com/saltstack/salt/pull/33606",
        "id": 157366860,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NzE4MTcwMTE=",
        "number": 33606,
        "title": "Fixed ini.options_absent. Resolves #33590.",
        "user": {
            "login": "danslimmon",
            "id": 342881,
            "node_id": "MDQ6VXNlcjM0Mjg4MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/342881?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danslimmon",
            "html_url": "https://github.com/danslimmon",
            "followers_url": "https://api.github.com/users/danslimmon/followers",
            "following_url": "https://api.github.com/users/danslimmon/following{/other_user}",
            "gists_url": "https://api.github.com/users/danslimmon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danslimmon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danslimmon/subscriptions",
            "organizations_url": "https://api.github.com/users/danslimmon/orgs",
            "repos_url": "https://api.github.com/users/danslimmon/repos",
            "events_url": "https://api.github.com/users/danslimmon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danslimmon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2016-05-29T03:10:56Z",
        "updated_at": "2016-05-31T15:51:46Z",
        "closed_at": "2016-05-31T15:51:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/33606",
            "html_url": "https://github.com/saltstack/salt/pull/33606",
            "diff_url": "https://github.com/saltstack/salt/pull/33606.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/33606.patch"
        },
        "body": "### What does this PR do?\n\nIt fixes the bug #33590 where the state `ini.options_absent` would crash with an \"unhashable type\" error.\n### What issues does this PR fix or reference?\n#33590\n### Previous Behavior\n\n```\n----------\n          ID: /home/ubuntu/test.ini\n    Function: ini.options_absent\n      Result: False\n     Comment: An exception occurred in this state: Traceback (most recent call last):\n                File \"/opt/vagrant/salt/state.py\", line 1703, in call\n                  **cdata['kwargs'])\n                File \"/opt/vagrant/salt/loader.py\", line 1649, in wrapper\n                  return f(*args, **kwargs)\n                File \"/opt/vagrant/salt/states/ini_manage.py\", line 114, in options_absent\n                  current_value = __salt__['ini.remove_option'](name, section, key)\n                File \"/opt/vagrant/salt/modules/ini_manage.py\", line 124, in remove_option\n                  value = inifile.get(section, {}).pop(option, None)\n                File \"/usr/lib/python2.7/collections.py\", line 155, in pop\n                  if key in self:\n              TypeError: unhashable type: 'list'\n     Started: 02:54:06.809985\n    Duration: 9.262 ms\n     Changes:\n```\n### New Behavior\n\n```\n----------\n          ID: /home/ubuntu/test.ini\n    Function: ini.options_absent\n      Result: True\n     Comment: Changes take effect\n     Started: 02:58:53.498259\n    Duration: 3.88 ms\n     Changes:\n              ----------\n              test2:\n                  ----------\n                  absent_opt:\n                      7\n                  test2_opt:\n                      0\n```\n### Tests written?\n\nNo.\n\nI can add test logic to the module if you think that's appropriate. I would need to add test logic to the module to bypass the normal behavior, so I'm not sure that would be a meaningful test.\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/33172",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/33172/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/33172/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/33172/events",
        "html_url": "https://github.com/saltstack/salt/pull/33172",
        "id": 154244969,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Njk2NzI3NTM=",
        "number": 33172,
        "title": "linux_acl: Allow '-' as a separation character in ACL permissions. Fi\u2026",
        "user": {
            "login": "Kurocon",
            "id": 1193988,
            "node_id": "MDQ6VXNlcjExOTM5ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1193988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kurocon",
            "html_url": "https://github.com/Kurocon",
            "followers_url": "https://api.github.com/users/Kurocon/followers",
            "following_url": "https://api.github.com/users/Kurocon/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kurocon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kurocon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kurocon/subscriptions",
            "organizations_url": "https://api.github.com/users/Kurocon/orgs",
            "repos_url": "https://api.github.com/users/Kurocon/repos",
            "events_url": "https://api.github.com/users/Kurocon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kurocon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 83156978,
                "node_id": "MDU6TGFiZWw4MzE1Njk3OA==",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZZZBugfix%20-%20[Done]%20back-ported",
                "name": "ZZZBugfix - [Done] back-ported",
                "color": "5319e7",
                "default": false,
                "description": "RETIRED The pull request has been back-ported to an older branch."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-05-11T13:34:45Z",
        "updated_at": "2016-05-17T15:43:53Z",
        "closed_at": "2016-05-16T15:01:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/33172",
            "html_url": "https://github.com/saltstack/salt/pull/33172",
            "diff_url": "https://github.com/saltstack/salt/pull/33172.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/33172.patch"
        },
        "body": "### What does this PR do?\n\nAllow '-' as a separation character in ACL permissions.  \n\nThis allows using acl states with things like '- perms: r-x' or '- perms: r--', which also works when manually setting ACL's using setfacl.\n### What issues does this PR fix or reference?\n\nFixes #31270\n### Previous Behavior\n\nACL states defined as follows would fail with the error below. One would have to remove the '-' from the state for it to work correctly:\n\nState:\n\n```\n/tmp/testdir/:\n  acl.present:\n    - acl_type: user\n    - acl_name: root\n    - perms: r-x\n```\n\nError:\n\n```\n     Comment: An exception occurred in this state: Traceback (most recent call last):\n                File \"/usr/lib/python2.7/dist-packages/salt/state.py\", line 1624, in call\n                  **cdata['kwargs'])\n                File \"/usr/lib/python2.7/dist-packages/salt/loader.py\", line 1491, in wrapper\n                  return f(*args, **kwargs)\n                File \"/usr/lib/python2.7/dist-packages/salt/states/linux_acl.py\", line 77, in present\n                  if user[acl_name]['octal'] == sum([_octal.get(i, i) for i in perms]):\n              TypeError: unsupported operand type(s) for +: 'int' and 'str'\n```\n### New Behavior\n\nThe above ACL state works as expected, giving read and execute permissions on `/tmp/testdir/` to the user root.\n### Tests written?\n\nNo\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/31843",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/31843/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/31843/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/31843/events",
        "html_url": "https://github.com/saltstack/salt/pull/31843",
        "id": 140376476,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjI2Mzk0MTg=",
        "number": 31843,
        "title": "salt.states.smartos.image_vacuum should not throw and exception ",
        "user": {
            "login": "sjorge",
            "id": 379665,
            "node_id": "MDQ6VXNlcjM3OTY2NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/379665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sjorge",
            "html_url": "https://github.com/sjorge",
            "followers_url": "https://api.github.com/users/sjorge/followers",
            "following_url": "https://api.github.com/users/sjorge/following{/other_user}",
            "gists_url": "https://api.github.com/users/sjorge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sjorge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sjorge/subscriptions",
            "organizations_url": "https://api.github.com/users/sjorge/orgs",
            "repos_url": "https://api.github.com/users/sjorge/repos",
            "events_url": "https://api.github.com/users/sjorge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sjorge/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-03-12T11:45:17Z",
        "updated_at": "2016-03-13T11:54:54Z",
        "closed_at": "2016-03-13T02:06:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/31843",
            "html_url": "https://github.com/saltstack/salt/pull/31843",
            "diff_url": "https://github.com/saltstack/salt/pull/31843.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/31843.patch"
        },
        "body": "### What does this PR do?\n\nsmartos.image_vacuum only works when running on a highstate (to collect and track all image_present states) This make it throw an exception when doing a single one of state run.\n\n``` yaml\n          ID: smartos.images::vacuum\n    Function: smartos.image_vacuum\n      Result: False\n     Comment: An exception occurred in this state: Traceback (most recent call last):\n                File \"salt/state.py\", line 1701, in call\n                File \"salt/loader.py\", line 1607, in wrapper\n                File \"/opt/salt/var/cache/salt/minion/extmods/states/smartos.py\", line 374, in image_vacuum\n                  if state['state'] != __virtualname__:\n              TypeError: string indices must be integers, not str\n     Started: 11:28:34.858776\n    Duration: 1148.884 ms\n     Changes:\n```\n### What issues does this PR fix or reference?\n\nn/a\n### Previous Behavior\n\nException resulting in a failed state\n### New Behavior\n\nException is avoided, we just don't clean up any images\n### Tests written?\n- [ ] Yes\n- [X] No\n### Affected branches\n- 2016.3\n- develop\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/31314",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/31314/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/31314/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/31314/events",
        "html_url": "https://github.com/saltstack/salt/pull/31314",
        "id": 134606645,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTk4MTI1Nzg=",
        "number": 31314,
        "title": "fix salt.states.smartos tripping over NoneType",
        "user": {
            "login": "sjorge",
            "id": 379665,
            "node_id": "MDQ6VXNlcjM3OTY2NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/379665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sjorge",
            "html_url": "https://github.com/sjorge",
            "followers_url": "https://api.github.com/users/sjorge/followers",
            "following_url": "https://api.github.com/users/sjorge/following{/other_user}",
            "gists_url": "https://api.github.com/users/sjorge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sjorge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sjorge/subscriptions",
            "organizations_url": "https://api.github.com/users/sjorge/orgs",
            "repos_url": "https://api.github.com/users/sjorge/repos",
            "events_url": "https://api.github.com/users/sjorge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sjorge/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 227620482,
                "node_id": "MDU6TGFiZWwyMjc2MjA0ODI=",
                "url": "https://api.github.com/repos/saltstack/salt/labels/ZRELEASED%20-%20Boron",
                "name": "ZRELEASED - Boron",
                "color": "fbca04",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-02-18T15:13:56Z",
        "updated_at": "2016-02-22T19:44:04Z",
        "closed_at": "2016-02-18T18:56:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/31314",
            "html_url": "https://github.com/saltstack/salt/pull/31314",
            "diff_url": "https://github.com/saltstack/salt/pull/31314.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/31314.patch"
        },
        "body": "Present in 2016.3 and develop, so targetting 2016.3\n\nFixes the following:\n\n```\n----------\n          ID: smartos.zones.native::test\n    Function: smartos.vm_present\n        Name: test\n      Result: False\n     Comment: An exception occurred in this state: Traceback (most recent call last):\n                File \"salt/state.py\", line 1701, in call\n                File \"salt/loader.py\", line 1597, in wrapper\n                File \"salt/states/smartos.py\", line 761, in vm_present\n              TypeError: argument of type 'NoneType' is not iterable\n     Started: 15:06:50.099882\n    Duration: 1067.997 ms\n     Changes:\n```\n\nOnly happens when 'test=True' is given for state.sls or state.highstate\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/29647",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/29647/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/29647/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/29647/events",
        "html_url": "https://github.com/saltstack/salt/pull/29647",
        "id": 121835518,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTM0NjkzOTU=",
        "number": 29647,
        "title": "Update user.py",
        "user": {
            "login": "serge-p",
            "id": 10004393,
            "node_id": "MDQ6VXNlcjEwMDA0Mzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10004393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/serge-p",
            "html_url": "https://github.com/serge-p",
            "followers_url": "https://api.github.com/users/serge-p/followers",
            "following_url": "https://api.github.com/users/serge-p/following{/other_user}",
            "gists_url": "https://api.github.com/users/serge-p/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/serge-p/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/serge-p/subscriptions",
            "organizations_url": "https://api.github.com/users/serge-p/orgs",
            "repos_url": "https://api.github.com/users/serge-p/repos",
            "events_url": "https://api.github.com/users/serge-p/events{/privacy}",
            "received_events_url": "https://api.github.com/users/serge-p/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2015-12-12T05:45:18Z",
        "updated_at": "2016-02-12T10:53:51Z",
        "closed_at": "2015-12-15T18:59:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/29647",
            "html_url": "https://github.com/saltstack/salt/pull/29647",
            "diff_url": "https://github.com/saltstack/salt/pull/29647.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/29647.patch"
        },
        "body": "### ISSUE:\n\n`salt/states/user.py` passes 3 args to virtual module user, but \n`salt/modules/mac_user.py` accepts only 2 arguments \n\nactual exception: \n\n```\n Name: lemon - Function: group.present - Result: Clean\n----------\n          ID: lemon\n    Function: user.present\n      Result: False\n     Comment: An exception occurred in this state: Traceback (most recent call last):\n                File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/salt/state.py\", line 1594, in call\n                  **cdata['kwargs'])\n                File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/salt/loader.py\", line 1491, in wrapper\n                  return f(*args, **kwargs)\n                File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/salt/states/user.py\", line 471, in present\n                  __salt__['user.chhome'](name, val, True)\n              TypeError: chhome() takes exactly 2 arguments (3 given)\n     Started: 23:03:30.934322\n    Duration: 643.339 ms\n     Changes:   \n```\n### PROPOSAL\n\nAdded check: if Darwin kernel, then ignoring persist arg,\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/30351",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/30351/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/30351/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/30351/events",
        "html_url": "https://github.com/saltstack/salt/pull/30351",
        "id": 126563707,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTU5ODUxNTE=",
        "number": 30351,
        "title": "Summary: correct a small defect in openstack_config.set function.",
        "user": {
            "login": "MIBc",
            "id": 4477478,
            "node_id": "MDQ6VXNlcjQ0Nzc0Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4477478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MIBc",
            "html_url": "https://github.com/MIBc",
            "followers_url": "https://api.github.com/users/MIBc/followers",
            "following_url": "https://api.github.com/users/MIBc/following{/other_user}",
            "gists_url": "https://api.github.com/users/MIBc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MIBc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MIBc/subscriptions",
            "organizations_url": "https://api.github.com/users/MIBc/orgs",
            "repos_url": "https://api.github.com/users/MIBc/repos",
            "events_url": "https://api.github.com/users/MIBc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MIBc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-01-14T02:25:03Z",
        "updated_at": "2016-01-14T16:32:36Z",
        "closed_at": "2016-01-14T16:32:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/30351",
            "html_url": "https://github.com/saltstack/salt/pull/30351",
            "diff_url": "https://github.com/saltstack/salt/pull/30351.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/30351.patch"
        },
        "body": "Desrciption:\nWhen execte command \"salt  * openstack.set file section key true\".\nThe openstack.set function will raise TypeError, because the \"_quote\" function need a\nstring as input parameter. However, salt bash resolve \"true\" to Ture a\nbool variable which is passed into \"_quote\". Therefore, if user wants to\nset a string \"true\" in openstack config file, he must use a command like\nsalt '*' openstack_config.set file section key \"'true'\". Similar issue\nalso occurs when input a number parameter in salt bash.\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/32329",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/32329/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/32329/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/32329/events",
        "html_url": "https://github.com/saltstack/salt/pull/32329",
        "id": 145729050,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjUxNzAxNTU=",
        "number": 32329,
        "title": "PY3 support for Windows master/minion using TCP transport",
        "user": {
            "login": "skizunov",
            "id": 11562452,
            "node_id": "MDQ6VXNlcjExNTYyNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11562452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skizunov",
            "html_url": "https://github.com/skizunov",
            "followers_url": "https://api.github.com/users/skizunov/followers",
            "following_url": "https://api.github.com/users/skizunov/following{/other_user}",
            "gists_url": "https://api.github.com/users/skizunov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skizunov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skizunov/subscriptions",
            "organizations_url": "https://api.github.com/users/skizunov/orgs",
            "repos_url": "https://api.github.com/users/skizunov/repos",
            "events_url": "https://api.github.com/users/skizunov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skizunov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2016-04-04T16:03:23Z",
        "updated_at": "2016-04-05T16:17:02Z",
        "closed_at": "2016-04-05T16:16:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/32329",
            "html_url": "https://github.com/saltstack/salt/pull/32329",
            "diff_url": "https://github.com/saltstack/salt/pull/32329.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/32329.patch"
        },
        "body": "### What does this PR do?\n\nThis allows masters and minions to run on Windows using Python 3. Tested\nwith Python 3.5.1 64-bit on Windows 7. Only the TCP transport has been\nported. It will likely not work with other transports such as ZeroMQ or\nRAET without further work.\n\nSince there were many changes necessary to make this work, here is a list\nof common changes:\n- Python 3 distinguishes `bytes` from `str`. In some cases `bytes` must be\n  used (eg read/write to binary file). In other cases `str` must be used\n  (eg general Salt dictionary look-ups, read/write to text file). Due to\n  this, there are a lot of extra uses of `salt.utils.to_bytes` in necessary\n  locations.\n- Use `six.itervalues(varname)` instead of `varname.itervalues()`.\n- In Python 2.6 and 2.7, the 'b' prefix is ignored. So instead of\n\n```\nif six.PY2:\n    some_var = 'some_value'\nelse:\n    some_var = b'some_value'\n```\n\nwe choose to simply use:\n\n```\nsome_var = b'some_value'\n\n```\n\n`salt/engine/__init__.py`:\n- In Python 3, `engine.items()` will return an iterator instead of\n  a list. Due to this, needed to change `engine.items()[0]` to\n  `list(engine.items())[0]`.\n\n`salt/minion.py`:\n- `contextlib.nested` no longer supported in Python 3. Use\n  `contextlib.ExitStack` in this case.\n- In `Minion.handle_event`, in PY3, `package` is of type `bytes` and `tag`\n  is of type `str`. Due to this, do all string searches via `tag` instead\n  of `package` since you can't search for a `str` in a `bytes` object.\n\n`salt/payload.py`:\n- Added `encoding` parameter to `Serial.loads`. See description in comments\n  for details.\n- Added `use_bin_type` parameter to `Serial.dumps`. See description in\n  comments for details.\n- When reading / writing local files, encode using `use_bin_type=True` and\n  decode using `encoding='utf-8'` to distinguish `bytes` and `str` types.\n\n`salt/transport/frame.py`:\n- Added `frame_msg_ipc`. This is used for IPC communications where it is\n  safe to break the wire protocol and so we encode using `use_bin_type=True`.\n- Added `decode_embedded_strs`. This is used when it is not safe to break\n  the wire protocol (eg external communications). This will convert `bytes`\n  objects to `str` objects if possible. This will search for such objects\n  within dicts and lists.\n\n`salt/transport/ipc.py`:\n- Use `salt.transport.frame.frame_msg_ipc` to encode using\n  `use_bin_type=True`.\n- Use `encoding='utf-8'` to decode such messages and ensure proper\n  distinction of `bytes` and `str` types.\n\n`salt/transport/tpc.py`:\n- Since we need to preserve the wire protocol, we don't use\n  `use_bin_type=True`. When decoding, we use `decode_embedded_strs` to\n  convert the embedded `bytes` objects that can be converted to `str`.\n- `urlparse` doesn't exist in PY3. Use `urllib.parse` instead.\n- `sys.maxint` not supported in PY3. Use `int((1 << 31) - 1)` instead.\n  Hence `sys.maxint - 1` becomes `int((1 << 31) - 2)`.\n\n`salt/utils/__init__.py`:\n- `libc = ctypes.cdll.LoadLibrary(ctypes.util.find_library(\"c\"))` returns\n  `TypeError` in PY3. This is because `ctypes.util.find_library(\"c\")`\n  returns `None` and in PY3 `ctypes.cdll.LoadLibrary(None)` is a\n  `TypeError`.\n- On Windows, `salt.utils.fopen` would always read and write files in\n  binary mode. This has been changed for Python 3 since `bytes` must be\n  used for binary mode and `str` must be used for text mode and forcing\n  binary mode would screw things up if you want to read/write to `str`\n  objects. Preserved original behavior on PY2.\n- For `salt.utils.fopen`, when reading and writing text files in PY3, if\n  an encoding is not specified, it will choose 'utf-8'.\n\n`salt/utils/args.py`:\n- In Python 3.5, every time `inspect.getargsspec` is used, a warning would\n  appear announcing its deprecation (it will be removed entirely in Python\n  3.6). Due to this, implemented our own version using\n  `inspect.getfullargspec`.\n\n`salt/utils/event.py`:\n- Since all functionality here is used only in IPC (the mechanism for\n  firing an event from minion to master is outside this file), we can break\n  the wire protocol and hence encode using `use_bin_type=True` and decode\n  using `encoding='utf-8'`.\n\n`salt/utils/vt.py`:\n- `_subprocess` is not available in PY3 under Windows, so we use an\n  alternate method to invoke `TerminateProcess` and `GetExitCodeProcess`.\n\n`setup.py`:\n- In PY3, `req.read(4096)` returns a `bytes` object. If you try to for\n  loop through it, each element is an `int` which represents an individual\n  byte. Trying to write an `int` to `wfh.write` raises an exception. Due to\n  this, use an alternate approach when writing from a\n  `http.client.HTTPResponse` object to file in PY3.\n### What issues does this PR fix or reference?\n\nThis is a prerequisite for issue #27367\n\nI believe Python 3 is required to implement the load balancer for Windows using the TCP transport in the manner described in that issue.\n### Tests written?\n\nNo\n\nSigned-off-by: Sergey Kizunov sergey.kizunov@ni.com\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/31198",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/31198/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/31198/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/31198/events",
        "html_url": "https://github.com/saltstack/salt/pull/31198",
        "id": 133455209,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTkyNzM0NjY=",
        "number": 31198,
        "title": "[Py3 w/raet startup only] change salt/master.py:510 to work in both py2 & py3",
        "user": {
            "login": "FirefighterBlu3",
            "id": 3165044,
            "node_id": "MDQ6VXNlcjMxNjUwNDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3165044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FirefighterBlu3",
            "html_url": "https://github.com/FirefighterBlu3",
            "followers_url": "https://api.github.com/users/FirefighterBlu3/followers",
            "following_url": "https://api.github.com/users/FirefighterBlu3/following{/other_user}",
            "gists_url": "https://api.github.com/users/FirefighterBlu3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FirefighterBlu3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FirefighterBlu3/subscriptions",
            "organizations_url": "https://api.github.com/users/FirefighterBlu3/orgs",
            "repos_url": "https://api.github.com/users/FirefighterBlu3/repos",
            "events_url": "https://api.github.com/users/FirefighterBlu3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FirefighterBlu3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-02-13T18:06:39Z",
        "updated_at": "2016-02-26T17:21:41Z",
        "closed_at": "2016-02-26T17:21:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/31198",
            "html_url": "https://github.com/saltstack/salt/pull/31198",
            "diff_url": "https://github.com/saltstack/salt/pull/31198.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/31198.patch"
        },
        "body": "this is a compatibility fix so both py2 and py3 will accept the supplied data. \n\nsalt.crypt.Crypticle.generate_key_string() returns an str() object which is simple bytes in py2 and unicode in py3. multiprocessing.Array() wants single byte characters and in py3, a string may have more than one byte per character. therefore, encode the output of generate_key_string() to a bytes object which Array() will happily accept.\n\n``` python\nPython 2.7.11 (default, Dec  6 2015, 15:43:46) \n[GCC 5.2.0] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import multiprocessing\n>>> import ctypes\n>>> multiprocessing.Array(ctypes.c_char, 'abc')\n<SynchronizedString wrapper for <multiprocessing.sharedctypes.c_char_Array_3 object at 0x7f5302e8c950>>\n>>> multiprocessing.Array(ctypes.c_char, 'abc'.encode('ascii'))\n<SynchronizedString wrapper for <multiprocessing.sharedctypes.c_char_Array_3 object at 0x7f5302e8c950>>\n```\n\n``` python\nPython 3.5.1 (default, Dec  7 2015, 12:58:09) \n[GCC 5.2.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import multiprocessing\n>>> import ctypes\n>>> multiprocessing.Array(ctypes.c_char, 'abc')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python3.5/multiprocessing/context.py\", line 140, in Array\n    ctx=self.get_context())\n  File \"/usr/lib/python3.5/multiprocessing/sharedctypes.py\", line 87, in Array\n    obj = RawArray(typecode_or_type, size_or_initializer)\n  File \"/usr/lib/python3.5/multiprocessing/sharedctypes.py\", line 66, in RawArray\n    result.__init__(*size_or_initializer)\nTypeError: one character bytes, bytearray or integer expected\n>>> multiprocessing.Array(ctypes.c_char, 'abc'.encode('ascii'))\n<SynchronizedString wrapper for <multiprocessing.sharedctypes.c_char_Array_3 object at 0x7f2e5cd91a60>>\n```\n\nbe mindful that the returned obj.value will be 'abc' in py2 and b'abc' in py3\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/saltstack/salt/issues/31387",
        "repository_url": "https://api.github.com/repos/saltstack/salt",
        "labels_url": "https://api.github.com/repos/saltstack/salt/issues/31387/labels{/name}",
        "comments_url": "https://api.github.com/repos/saltstack/salt/issues/31387/comments",
        "events_url": "https://api.github.com/repos/saltstack/salt/issues/31387/events",
        "html_url": "https://github.com/saltstack/salt/pull/31387",
        "id": 135116683,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjAwNTkwOTc=",
        "number": 31387,
        "title": "Master running under non-privileged account and pygit2 as gitfs provider fails pre-flight check",
        "user": {
            "login": "rattlesnack",
            "id": 17362816,
            "node_id": "MDQ6VXNlcjE3MzYyODE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/17362816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rattlesnack",
            "html_url": "https://github.com/rattlesnack",
            "followers_url": "https://api.github.com/users/rattlesnack/followers",
            "following_url": "https://api.github.com/users/rattlesnack/following{/other_user}",
            "gists_url": "https://api.github.com/users/rattlesnack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rattlesnack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rattlesnack/subscriptions",
            "organizations_url": "https://api.github.com/users/rattlesnack/orgs",
            "repos_url": "https://api.github.com/users/rattlesnack/repos",
            "events_url": "https://api.github.com/users/rattlesnack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rattlesnack/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-02-20T20:25:20Z",
        "updated_at": "2016-02-22T20:14:00Z",
        "closed_at": "2016-02-22T20:14:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/saltstack/salt/pulls/31387",
            "html_url": "https://github.com/saltstack/salt/pull/31387",
            "diff_url": "https://github.com/saltstack/salt/pull/31387.diff",
            "patch_url": "https://github.com/saltstack/salt/pull/31387.patch"
        },
        "body": "The following config always triggers the issue when master is started as system service. The same config works when master is started interactively from the configured non-privileged account:\n\n```\nuser: salt\nfileserver_backend:\n  - git\ngitfs_provider: pygit2\n```\n\nStack trace for the exception\n\n```\n2016-02-20 14:03:05,970 [salt.utils.gitfs ][CRITICAL][7894] Exception caught while initializing gitfs remote 'ssh://git@git/salt.git': must be string, not function\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/salt/utils/gitfs.py\", line 263, in __init__\n    self.new = self.init_remote()\n  File \"/usr/lib64/python2.7/site-packages/salt/utils/gitfs.py\", line 918, in init_remote\n    home = pwd.getpwnam(salt.utils.get_user).pw_dir\nTypeError: must be string, not \n2016-02-20 14:03:05,971 [salt.master      ][CRITICAL][7894] Failed to load gitfs\n2016-02-20 14:03:05,971 [salt.master      ][CRITICAL][7894] Master failed pre flight checks, exiting\n```\n\n```\nsalt --versions-report\nSalt Version:\n           Salt: 2015.8.7\n\nDependency Versions:\n         Jinja2: 2.7.3\n       M2Crypto: 0.22\n           Mako: Not Installed\n         PyYAML: 3.11\n          PyZMQ: 14.4.1\n         Python: 2.7.10 (default, Nov 21 2015, 14:26:07)\n           RAET: Not Installed\n        Tornado: 4.2.1\n            ZMQ: 4.1.1\n           cffi: 1.2.1\n       cherrypy: Not Installed\n       dateutil: Not Installed\n          gitdb: Not Installed\n      gitpython: Not Installed\n          ioflo: Not Installed\n        libgit2: 0.22.3\n        libnacl: Not Installed\n   msgpack-pure: Not Installed\n msgpack-python: 0.4.6\n   mysql-python: 1.2.5\n      pycparser: 2.14\n       pycrypto: 2.6.1\n         pygit2: 0.22.1\n   python-gnupg: Not Installed\n          smmap: Not Installed\n        timelib: Not Installed\n\nSystem Versions:\n           dist: gentoo 2.2 \n        machine: x86_64\n        release: 4.1.15-gentoo-r1-r4\n         system: Gentoo Base System 2.2 \n```\n",
        "performed_via_github_app": null,
        "score": 1.0
    }
]