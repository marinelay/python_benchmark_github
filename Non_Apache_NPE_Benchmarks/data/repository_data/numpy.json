[
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/19269",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/19269/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/19269/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/19269/events",
        "html_url": "https://github.com/numpy/numpy/pull/19269",
        "id": 924295458,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjcyOTU0NTcy",
        "number": 19269,
        "title": "BUG: Invalid dtypes comparison should not raise TypeError",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 249193408,
                "node_id": "MDU6TGFiZWwyNDkxOTM0MDg=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/08%20-%20Backport",
                "name": "08 - Backport",
                "color": "fef2c0",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/87",
            "html_url": "https://github.com/numpy/numpy/milestone/87",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/87/labels",
            "id": 5963031,
            "node_id": "MDk6TWlsZXN0b25lNTk2MzAzMQ==",
            "number": 87,
            "title": "1.21.0 release",
            "description": "",
            "creator": {
                "login": "seberg",
                "id": 61977,
                "node_id": "MDQ6VXNlcjYxOTc3",
                "avatar_url": "https://avatars.githubusercontent.com/u/61977?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/seberg",
                "html_url": "https://github.com/seberg",
                "followers_url": "https://api.github.com/users/seberg/followers",
                "following_url": "https://api.github.com/users/seberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
                "organizations_url": "https://api.github.com/users/seberg/orgs",
                "repos_url": "https://api.github.com/users/seberg/repos",
                "events_url": "https://api.github.com/users/seberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/seberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 77,
            "state": "closed",
            "created_at": "2020-10-07T19:19:55Z",
            "updated_at": "2021-06-23T13:51:30Z",
            "due_on": null,
            "closed_at": "2021-06-23T13:51:30Z"
        },
        "comments": 0,
        "created_at": "2021-06-17T20:16:52Z",
        "updated_at": "2021-06-17T21:55:32Z",
        "closed_at": "2021-06-17T21:55:25Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/19269",
            "html_url": "https://github.com/numpy/numpy/pull/19269",
            "diff_url": "https://github.com/numpy/numpy/pull/19269.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/19269.patch"
        },
        "body": "Backport of #19228. \r\n\r\n### Invalid dtypes comparison\r\nChanges behavior of comparison to not raise `TypeError` when one of the operands cannot be converted to valid dtype.\r\n\r\n### Example:\r\n```py\r\n>>> dtype = pd.date_range(\"2016-01-01\", periods=2, tz=\"UTC\").dtype\r\n>>> dtype == np.dtype(\"datetime64[ns]\")\r\nFalse\r\n>>> np.dtype(\"datetime64[ns]\") == dtype\r\nFalse\r\n\r\n# Before:\r\n>>> np.dtype(\"datetime64[ns]\") == dtype\r\nTypeError: Cannot interpret 'datetime64[ns, UTC]' as a data type\r\n```\r\n\r\nresolves #19187\r\n<!--         ----------------------------------------------------------------\r\n                MAKE SURE YOUR PR GETS THE ATTENTION IT DESERVES!\r\n                ----------------------------------------------------------------\r\n\r\n*  FORMAT IT RIGHT:\r\n      http://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n\r\n*  IF IT'S A NEW FEATURE OR API CHANGE, TEST THE WATERS:\r\n      http://www.numpy.org/devdocs/dev/development_workflow.html#get-the-mailing-list-s-opinion\r\n\r\n*  HIT ALL THE GUIDELINES:\r\n      https://numpy.org/devdocs/dev/index.html#guidelines\r\n\r\n*  WHAT TO DO IF WE HAVEN'T GOTTEN BACK TO YOU:\r\n      http://www.numpy.org/devdocs/dev/development_workflow.html#getting-your-pr-reviewed\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/19228",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/19228/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/19228/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/19228/events",
        "html_url": "https://github.com/numpy/numpy/pull/19228",
        "id": 919571646,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjY4ODc4NjEx",
        "number": 19228,
        "title": "BUG: Invalid dtypes comparison should not raise `TypeError`",
        "user": {
            "login": "ganesh-k13",
            "id": 20969920,
            "node_id": "MDQ6VXNlcjIwOTY5OTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20969920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ganesh-k13",
            "html_url": "https://github.com/ganesh-k13",
            "followers_url": "https://api.github.com/users/ganesh-k13/followers",
            "following_url": "https://api.github.com/users/ganesh-k13/following{/other_user}",
            "gists_url": "https://api.github.com/users/ganesh-k13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ganesh-k13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ganesh-k13/subscriptions",
            "organizations_url": "https://api.github.com/users/ganesh-k13/orgs",
            "repos_url": "https://api.github.com/users/ganesh-k13/repos",
            "events_url": "https://api.github.com/users/ganesh-k13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ganesh-k13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-06-12T14:18:45Z",
        "updated_at": "2021-06-17T20:17:15Z",
        "closed_at": "2021-06-17T19:49:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/19228",
            "html_url": "https://github.com/numpy/numpy/pull/19228",
            "diff_url": "https://github.com/numpy/numpy/pull/19228.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/19228.patch"
        },
        "body": "### Invalid dtypes comparison\r\nChanges behavior of comparison to not raise `TypeError` when one of the operands cannot be converted to valid dtype.\r\n\r\n### Example:\r\n```py\r\n>>> dtype = pd.date_range(\"2016-01-01\", periods=2, tz=\"UTC\").dtype\r\n>>> dtype == np.dtype(\"datetime64[ns]\")\r\nFalse\r\n>>> np.dtype(\"datetime64[ns]\") == dtype\r\nFalse\r\n\r\n# Before:\r\n>>> np.dtype(\"datetime64[ns]\") == dtype\r\nTypeError: Cannot interpret 'datetime64[ns, UTC]' as a data type\r\n```\r\n\r\nresolves #19187",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/19135",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/19135/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/19135/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/19135/events",
        "html_url": "https://github.com/numpy/numpy/pull/19135",
        "id": 906527271,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjU3NTEwMzU3",
        "number": 19135,
        "title": "BUG: Remove complex floor divide",
        "user": {
            "login": "ganesh-k13",
            "id": 20969920,
            "node_id": "MDQ6VXNlcjIwOTY5OTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/20969920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ganesh-k13",
            "html_url": "https://github.com/ganesh-k13",
            "followers_url": "https://api.github.com/users/ganesh-k13/followers",
            "following_url": "https://api.github.com/users/ganesh-k13/following{/other_user}",
            "gists_url": "https://api.github.com/users/ganesh-k13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ganesh-k13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ganesh-k13/subscriptions",
            "organizations_url": "https://api.github.com/users/ganesh-k13/orgs",
            "repos_url": "https://api.github.com/users/ganesh-k13/repos",
            "events_url": "https://api.github.com/users/ganesh-k13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ganesh-k13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2021-05-29T18:01:22Z",
        "updated_at": "2021-06-23T22:40:21Z",
        "closed_at": "2021-06-23T22:39:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/19135",
            "html_url": "https://github.com/numpy/numpy/pull/19135",
            "diff_url": "https://github.com/numpy/numpy/pull/19135.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/19135.patch"
        },
        "body": "### Changes:\r\n1. Removed `floor_divide` for all complex types\r\n2. Modified UFuncs `floor_divde` TC to check for `TypeError`. Added same for divmod and remainder.\r\n3. Modified `test_core` to check `TypeError` raised for unsupported types.\r\n4. Removed Typing Tests\r\n\r\n### TODO:\r\n- [x] Add release note (Need PR number for this) \r\n\r\ncloses: #13236\r\nfinishes: #13245 (work done by @kaivu1999)",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/19094",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/19094/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/19094/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/19094/events",
        "html_url": "https://github.com/numpy/numpy/pull/19094",
        "id": 900839888,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjUyMzYwNjU1",
        "number": 19094,
        "title": "BUG: Fixed an issue wherein `_GenericAlias.__getitem__` would raise for types with >1 parameters",
        "user": {
            "login": "BvB93",
            "id": 43369155,
            "node_id": "MDQ6VXNlcjQzMzY5MTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43369155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BvB93",
            "html_url": "https://github.com/BvB93",
            "followers_url": "https://api.github.com/users/BvB93/followers",
            "following_url": "https://api.github.com/users/BvB93/following{/other_user}",
            "gists_url": "https://api.github.com/users/BvB93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BvB93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BvB93/subscriptions",
            "organizations_url": "https://api.github.com/users/BvB93/orgs",
            "repos_url": "https://api.github.com/users/BvB93/repos",
            "events_url": "https://api.github.com/users/BvB93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BvB93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 249193408,
                "node_id": "MDU6TGFiZWwyNDkxOTM0MDg=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/08%20-%20Backport",
                "name": "08 - Backport",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 2195737570,
                "node_id": "MDU6TGFiZWwyMTk1NzM3NTcw",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.typing",
                "name": "component: numpy.typing",
                "color": "009800",
                "default": false,
                "description": ""
            },
            {
                "id": 2124388074,
                "node_id": "MDU6TGFiZWwyMTI0Mzg4MDc0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/static%20typing",
                "name": "static typing",
                "color": "fcff6b",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/87",
            "html_url": "https://github.com/numpy/numpy/milestone/87",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/87/labels",
            "id": 5963031,
            "node_id": "MDk6TWlsZXN0b25lNTk2MzAzMQ==",
            "number": 87,
            "title": "1.21.0 release",
            "description": "",
            "creator": {
                "login": "seberg",
                "id": 61977,
                "node_id": "MDQ6VXNlcjYxOTc3",
                "avatar_url": "https://avatars.githubusercontent.com/u/61977?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/seberg",
                "html_url": "https://github.com/seberg",
                "followers_url": "https://api.github.com/users/seberg/followers",
                "following_url": "https://api.github.com/users/seberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
                "organizations_url": "https://api.github.com/users/seberg/orgs",
                "repos_url": "https://api.github.com/users/seberg/repos",
                "events_url": "https://api.github.com/users/seberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/seberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 77,
            "state": "closed",
            "created_at": "2020-10-07T19:19:55Z",
            "updated_at": "2021-06-23T13:51:30Z",
            "due_on": null,
            "closed_at": "2021-06-23T13:51:30Z"
        },
        "comments": 6,
        "created_at": "2021-05-25T13:48:37Z",
        "updated_at": "2021-05-25T22:32:01Z",
        "closed_at": "2021-05-25T16:43:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/19094",
            "html_url": "https://github.com/numpy/numpy/pull/19094",
            "diff_url": "https://github.com/numpy/numpy/pull/19094.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/19094.patch"
        },
        "body": "Backport of https://github.com/numpy/numpy/pull/19092.\r\n\r\nFound and fixed a minor bug wherein `_GenericAlias` could raise under certain circumstances.\r\n\r\nThe issue was that only a single parameter was passed to underlying generic types, \r\neven if aforementioned types would demand more than 1 parameter.\r\n\r\nExamples\r\n----------\r\nThe behavior prior to this PR:\r\n``` python\r\nIn [1]: from typing import TypeVar, Union\r\n   ...: \r\n   ...: import numpy as np\r\n   ...: import numpy.typing as npt\r\n   ...: \r\n   ...: T1 = TypeVar(\"T1\", bound=np.generic)\r\n   ...: T2 = TypeVar(\"T2\", bound=np.generic)\r\n   ...: \r\n   ...: NDArray_A_or_B = npt.NDArray[Union[T1, T2]]\r\n\r\nIn [2]: NDArray_A_or_B[np.float32, np.float64]\r\n  ...\r\nTypeError: Too few parameters for typing.Union[~T1, ~T2]; actual 1, expected 2\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/19092",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/19092/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/19092/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/19092/events",
        "html_url": "https://github.com/numpy/numpy/pull/19092",
        "id": 900830354,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjUyMzUyMjc0",
        "number": 19092,
        "title": "BUG: Fixed an issue wherein `_GenericAlias.__getitem__` would raise for types with >1 parameters",
        "user": {
            "login": "BvB93",
            "id": 43369155,
            "node_id": "MDQ6VXNlcjQzMzY5MTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43369155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BvB93",
            "html_url": "https://github.com/BvB93",
            "followers_url": "https://api.github.com/users/BvB93/followers",
            "following_url": "https://api.github.com/users/BvB93/following{/other_user}",
            "gists_url": "https://api.github.com/users/BvB93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BvB93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BvB93/subscriptions",
            "organizations_url": "https://api.github.com/users/BvB93/orgs",
            "repos_url": "https://api.github.com/users/BvB93/repos",
            "events_url": "https://api.github.com/users/BvB93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BvB93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 2195737570,
                "node_id": "MDU6TGFiZWwyMTk1NzM3NTcw",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.typing",
                "name": "component: numpy.typing",
                "color": "009800",
                "default": false,
                "description": ""
            },
            {
                "id": 2124388074,
                "node_id": "MDU6TGFiZWwyMTI0Mzg4MDc0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/static%20typing",
                "name": "static typing",
                "color": "fcff6b",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-05-25T13:41:26Z",
        "updated_at": "2021-05-25T22:32:07Z",
        "closed_at": "2021-05-25T16:44:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/19092",
            "html_url": "https://github.com/numpy/numpy/pull/19092",
            "diff_url": "https://github.com/numpy/numpy/pull/19092.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/19092.patch"
        },
        "body": "Found and fixed a minor bug wherein `_GenericAlias` could raise under certain circumstances.\r\n\r\nThe issue was that only a single parameter was passed to underlying generic types, \r\neven if aforementioned types would demand more than 1 parameter.\r\n\r\nExamples\r\n----------\r\nThe behavior prior to this PR:\r\n``` python\r\nIn [1]: from typing import TypeVar, Union\r\n   ...: \r\n   ...: import numpy as np\r\n   ...: import numpy.typing as npt\r\n   ...: \r\n   ...: T1 = TypeVar(\"T1\", bound=np.generic)\r\n   ...: T2 = TypeVar(\"T2\", bound=np.generic)\r\n   ...: \r\n   ...: NDArray_A_or_B = npt.NDArray[Union[T1, T2]]\r\n\r\nIn [2]: NDArray_A_or_B[np.float32, np.float64]\r\n  ...\r\nTypeError: Too few parameters for typing.Union[~T1, ~T2]; actual 1, expected 2\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/14472",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/14472/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/14472/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/14472/events",
        "html_url": "https://github.com/numpy/numpy/pull/14472",
        "id": 491756102,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzE2MDYxNzk2",
        "number": 14472,
        "title": "BUG: core: Fix the str function of the rational dtype.",
        "user": {
            "login": "WarrenWeckesser",
            "id": 321463,
            "node_id": "MDQ6VXNlcjMyMTQ2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/321463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WarrenWeckesser",
            "html_url": "https://github.com/WarrenWeckesser",
            "followers_url": "https://api.github.com/users/WarrenWeckesser/followers",
            "following_url": "https://api.github.com/users/WarrenWeckesser/following{/other_user}",
            "gists_url": "https://api.github.com/users/WarrenWeckesser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WarrenWeckesser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WarrenWeckesser/subscriptions",
            "organizations_url": "https://api.github.com/users/WarrenWeckesser/orgs",
            "repos_url": "https://api.github.com/users/WarrenWeckesser/repos",
            "events_url": "https://api.github.com/users/WarrenWeckesser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WarrenWeckesser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-09-10T15:46:17Z",
        "updated_at": "2021-02-18T04:36:50Z",
        "closed_at": "2019-09-11T23:40:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/14472",
            "html_url": "https://github.com/numpy/numpy/pull/14472",
            "diff_url": "https://github.com/numpy/numpy/pull/14472.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/14472.patch"
        },
        "body": "Fix the function pyrational_str to return a Unicode string.\r\n\r\nBefore this change:\r\n\r\n    >>> r = _rational_tests.rational(17, 5)\r\n    >>> r\r\n    rational(17,5)\r\n    >>> str(r)\r\n    Traceback (most recent call last):\r\n      File \"<stdin>\", line 1, in <module>\r\n    TypeError: __str__ returned non-string (type bytes)\r\n\r\nAfter this change:\r\n\r\n    >>> r = _rational_tests.rational(17, 5)\r\n    >>> r\r\n    rational(17,5)\r\n    >>> str(r)\r\n    '17/5'\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/18238",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/18238/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/18238/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/18238/events",
        "html_url": "https://github.com/numpy/numpy/pull/18238",
        "id": 794705914,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTYyMTc3MTcz",
        "number": 18238,
        "title": "DOC: __array__ accepts a dtype argument",
        "user": {
            "login": "rsokl",
            "id": 29104956,
            "node_id": "MDQ6VXNlcjI5MTA0OTU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/29104956?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rsokl",
            "html_url": "https://github.com/rsokl",
            "followers_url": "https://api.github.com/users/rsokl/followers",
            "following_url": "https://api.github.com/users/rsokl/following{/other_user}",
            "gists_url": "https://api.github.com/users/rsokl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rsokl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rsokl/subscriptions",
            "organizations_url": "https://api.github.com/users/rsokl/orgs",
            "repos_url": "https://api.github.com/users/rsokl/repos",
            "events_url": "https://api.github.com/users/rsokl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rsokl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359990,
                "node_id": "MDU6TGFiZWw2MzU5OTkw",
                "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation",
                "name": "04 - Documentation",
                "color": "fef2c0",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-01-27T02:13:03Z",
        "updated_at": "2021-01-28T05:45:10Z",
        "closed_at": "2021-01-28T05:45:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/18238",
            "html_url": "https://github.com/numpy/numpy/pull/18238",
            "diff_url": "https://github.com/numpy/numpy/pull/18238.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/18238.patch"
        },
        "body": "The documentation for [writing custom array containers](https://numpy.org/devdocs/user/basics.dispatch.html) should indicate that the `__array__` interface accepts an optional dtype parameter.\r\n\r\nIn the present docs, the example class has a bug lurking:\r\n\r\n```python\r\nclass DiagonalArray:\r\n    def __init__(self, N, value):\r\n        self._N = N\r\n        self._i = value\r\n    def __repr__(self):\r\n        return f\"{self.__class__.__name__}(N={self._N}, value={self._i})\"\r\n    def __array__(self):\r\n        return self._i * np.eye(self._N)\r\n```\r\n```python\r\n>>> arr = DiagonalArray(4, 2)\r\n>>> np.asarray(arr, dtype=np.float32)\r\nTypeError: __array__() takes 1 positional argument but 2 were given\r\n```\r\n ",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/17906",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17906/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17906/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/17906/events",
        "html_url": "https://github.com/numpy/numpy/pull/17906",
        "id": 756318398,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTMxODgyMzg2",
        "number": 17906,
        "title": "BUG: Fix a MacOS build failure",
        "user": {
            "login": "fxcoudert",
            "id": 1980544,
            "node_id": "MDQ6VXNlcjE5ODA1NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fxcoudert",
            "html_url": "https://github.com/fxcoudert",
            "followers_url": "https://api.github.com/users/fxcoudert/followers",
            "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}",
            "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions",
            "organizations_url": "https://api.github.com/users/fxcoudert/orgs",
            "repos_url": "https://api.github.com/users/fxcoudert/repos",
            "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fxcoudert/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917063,
                "node_id": "MDU6TGFiZWwxNjkxNzA2Mw==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.distutils",
                "name": "component: numpy.distutils",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2020-12-03T15:48:13Z",
        "updated_at": "2021-01-21T02:01:15Z",
        "closed_at": "2020-12-12T19:21:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/17906",
            "html_url": "https://github.com/numpy/numpy/pull/17906",
            "diff_url": "https://github.com/numpy/numpy/pull/17906.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/17906.patch"
        },
        "body": "`numpy` fails to build on macOS Big Sur, on a Python 3.9.0 that was configured with `MACOSX_DEPLOYMENT_TARGET=11`:\r\n\r\n```\r\n    File \"/private/var/folders/kf/25msxpx52j98k6qm2pgq11rh0000gn/T/pip-req-build-zkhrmwam/numpy/distutils/fcompiler/gnu.py\", line 346, in get_flags_linker_so\r\n      flags = GnuFCompiler.get_flags_linker_so(self)\r\n    File \"/private/var/folders/kf/25msxpx52j98k6qm2pgq11rh0000gn/T/pip-req-build-zkhrmwam/numpy/distutils/fcompiler/gnu.py\", line 136, in get_flags_linker_so\r\n      os.environ['MACOSX_DEPLOYMENT_TARGET'] = target\r\n    File \"/usr/local/Cellar/python@3.9/3.9.0_4/Frameworks/Python.framework/Versions/3.9/lib/python3.9/os.py\", line 684, in __setitem__\r\n      value = self.encodevalue(value)\r\n    File \"/usr/local/Cellar/python@3.9/3.9.0_4/Frameworks/Python.framework/Versions/3.9/lib/python3.9/os.py\", line 756, in encode\r\n      raise TypeError(\"str expected, not %s\" % type(value).__name__)\r\n  TypeError: str expected, not int\r\n```\r\n\r\nOn such a system, `sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET')` will return `11` as an `int`, not as a `str`. And setting an environment variable to an `int` is not allowed, and fails as seen above.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/18317",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/18317/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/18317/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/18317/events",
        "html_url": "https://github.com/numpy/numpy/pull/18317",
        "id": 800530369,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTY3MDAwMzA3",
        "number": 18317,
        "title": "MAINT: Fixed chain exception for array_split func",
        "user": {
            "login": "abhayaman669",
            "id": 24496584,
            "node_id": "MDQ6VXNlcjI0NDk2NTg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/24496584?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhayaman669",
            "html_url": "https://github.com/abhayaman669",
            "followers_url": "https://api.github.com/users/abhayaman669/followers",
            "following_url": "https://api.github.com/users/abhayaman669/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhayaman669/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhayaman669/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhayaman669/subscriptions",
            "organizations_url": "https://api.github.com/users/abhayaman669/orgs",
            "repos_url": "https://api.github.com/users/abhayaman669/repos",
            "events_url": "https://api.github.com/users/abhayaman669/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhayaman669/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-02-03T17:14:58Z",
        "updated_at": "2021-02-11T09:37:57Z",
        "closed_at": "2021-02-10T20:48:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/18317",
            "html_url": "https://github.com/numpy/numpy/pull/18317",
            "diff_url": "https://github.com/numpy/numpy/pull/18317.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/18317.patch"
        },
        "body": "This update is related to #15986.\r\n@eric-wieser please review this PR.\r\n\r\nBefore:\r\n\r\n```\r\n>>> import numpy as np\r\n>>> x = np.arange(8.0)\r\n>>> np.array_split(x, 0)\r\nTraceback (most recent call last):\r\n  File \"/home/fruity/Desktop/venv/lib/python3.8/site-packages/numpy/lib/shape_base.py\", line 772, in array_split\r\n    Nsections = len(indices_or_sections) + 1\r\nTypeError: object of type 'int' has no len()\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<__array_function__ internals>\", line 5, in array_split\r\n  File \"/home/fruity/Desktop/venv/lib/python3.8/site-packages/numpy/lib/shape_base.py\", line 778, in array_split\r\n    raise ValueError('number sections must be larger than 0.') from None\r\nValueError: number sections must be larger than 0.\r\n```\r\n\r\nAfter:\r\n\r\n```\r\n>>> import numpy as np\r\n>>> x = np.arange(8.0)\r\n>>> np.array_split(x, 0)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<__array_function__ internals>\", line 5, in array_split\r\n  File \"/home/fruity/Desktop/venv/lib/python3.8/site-packages/numpy/lib/shape_base.py\", line 778, in array_split\r\n    raise ValueError('number sections must be larger than 0.') from None\r\nValueError: number sections must be larger than 0.\r\n```\r\n\r\nThank you.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/18016",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/18016/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/18016/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/18016/events",
        "html_url": "https://github.com/numpy/numpy/pull/18016",
        "id": 770473715,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTQyMjE0NjYw",
        "number": 18016,
        "title": "BUG: Fix a MacOS build failure ",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 249193408,
                "node_id": "MDU6TGFiZWwyNDkxOTM0MDg=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/08%20-%20Backport",
                "name": "08 - Backport",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917063,
                "node_id": "MDU6TGFiZWwxNjkxNzA2Mw==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.distutils",
                "name": "component: numpy.distutils",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/83",
            "html_url": "https://github.com/numpy/numpy/milestone/83",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/83/labels",
            "id": 5385883,
            "node_id": "MDk6TWlsZXN0b25lNTM4NTg4Mw==",
            "number": 83,
            "title": "1.20.0 release",
            "description": null,
            "creator": {
                "login": "seberg",
                "id": 61977,
                "node_id": "MDQ6VXNlcjYxOTc3",
                "avatar_url": "https://avatars.githubusercontent.com/u/61977?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/seberg",
                "html_url": "https://github.com/seberg",
                "followers_url": "https://api.github.com/users/seberg/followers",
                "following_url": "https://api.github.com/users/seberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
                "organizations_url": "https://api.github.com/users/seberg/orgs",
                "repos_url": "https://api.github.com/users/seberg/repos",
                "events_url": "https://api.github.com/users/seberg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/seberg/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 128,
            "state": "closed",
            "created_at": "2020-05-05T13:15:52Z",
            "updated_at": "2021-01-31T21:11:40Z",
            "due_on": null,
            "closed_at": "2021-01-31T14:12:48Z"
        },
        "comments": 0,
        "created_at": "2020-12-18T00:28:35Z",
        "updated_at": "2020-12-18T02:39:20Z",
        "closed_at": "2020-12-18T02:39:17Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/18016",
            "html_url": "https://github.com/numpy/numpy/pull/18016",
            "diff_url": "https://github.com/numpy/numpy/pull/18016.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/18016.patch"
        },
        "body": "Backport of #17906. \r\n\r\n`numpy` fails to build on macOS Big Sur, on a Python 3.9.0 that was configured with `MACOSX_DEPLOYMENT_TARGET=11`:\r\n\r\n```\r\n    File \"/private/var/folders/kf/25msxpx52j98k6qm2pgq11rh0000gn/T/pip-req-build-zkhrmwam/numpy/distutils/fcompiler/gnu.py\", line 346, in get_flags_linker_so\r\n      flags = GnuFCompiler.get_flags_linker_so(self)\r\n    File \"/private/var/folders/kf/25msxpx52j98k6qm2pgq11rh0000gn/T/pip-req-build-zkhrmwam/numpy/distutils/fcompiler/gnu.py\", line 136, in get_flags_linker_so\r\n      os.environ['MACOSX_DEPLOYMENT_TARGET'] = target\r\n    File \"/usr/local/Cellar/python@3.9/3.9.0_4/Frameworks/Python.framework/Versions/3.9/lib/python3.9/os.py\", line 684, in __setitem__\r\n      value = self.encodevalue(value)\r\n    File \"/usr/local/Cellar/python@3.9/3.9.0_4/Frameworks/Python.framework/Versions/3.9/lib/python3.9/os.py\", line 756, in encode\r\n      raise TypeError(\"str expected, not %s\" % type(value).__name__)\r\n  TypeError: str expected, not int\r\n```\r\n\r\nOn such a system, `sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET')` will return `11` as an `int`, not as a `str`. And setting an environment variable to an `int` is not allowed, and fails as seen above.\r\n<!--         ----------------------------------------------------------------\r\n                MAKE SURE YOUR PR GETS THE ATTENTION IT DESERVES!\r\n                ----------------------------------------------------------------\r\n\r\n*  FORMAT IT RIGHT:\r\n      http://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n\r\n*  IF IT'S A NEW FEATURE OR API CHANGE, TEST THE WATERS:\r\n      http://www.numpy.org/devdocs/dev/development_workflow.html#get-the-mailing-list-s-opinion\r\n\r\n*  HIT ALL THE GUIDELINES:\r\n      https://numpy.org/devdocs/dev/index.html#guidelines\r\n\r\n*  WHAT TO DO IF WE HAVEN'T GOTTEN BACK TO YOU:\r\n      http://www.numpy.org/devdocs/dev/development_workflow.html#getting-your-pr-reviewed\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/18079",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/18079/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/18079/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/18079/events",
        "html_url": "https://github.com/numpy/numpy/pull/18079",
        "id": 775242902,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ1OTYzNzMz",
        "number": 18079,
        "title": "MAINT: Bump sphinx from 3.3.1 to 3.4.1",
        "user": {
            "login": "dependabot-preview[bot]",
            "id": 27856297,
            "node_id": "MDM6Qm90Mjc4NTYyOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/in/2141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D",
            "html_url": "https://github.com/apps/dependabot-preview",
            "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-28T07:08:19Z",
        "updated_at": "2020-12-28T09:00:39Z",
        "closed_at": "2020-12-28T09:00:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/18079",
            "html_url": "https://github.com/numpy/numpy/pull/18079",
            "diff_url": "https://github.com/numpy/numpy/pull/18079.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/18079.patch"
        },
        "body": "Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.3.1 to 3.4.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/sphinx-doc/sphinx/blob/3.x/CHANGES\">sphinx's changelog</a>.</em></p>\n<blockquote>\n<h1>Release 3.4.1 (released Dec 25, 2020)</h1>\n<h2>Bugs fixed</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8559\">#8559</a>: autodoc: AttributeError is raised when using forward-reference type\nannotations</li>\n<li><a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8568\">#8568</a>: autodoc: TypeError is raised on checking slots attribute</li>\n<li><a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8567\">#8567</a>: autodoc: Instance attributes are incorrectly added to Parent class</li>\n<li><a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8566\">#8566</a>: autodoc: The <code>autodoc-process-docstring</code> event is emitted to the\nalias classes unexpectedly</li>\n<li><a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8583\">#8583</a>: autodoc: Unnecessary object comparision via <code>__eq__</code> method</li>\n<li><a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8565\">#8565</a>: linkcheck: Fix PriorityQueue crash when link tuples are not\ncomparable</li>\n</ul>\n<h1>Release 3.4.0 (released Dec 20, 2020)</h1>\n<h2>Incompatible changes</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8105\">#8105</a>: autodoc: the signature of class constructor will be shown for decorated\nclasses, not a signature of decorator</li>\n</ul>\n<h2>Deprecated</h2>\n<ul>\n<li>The <code>follow_wrapped</code> argument of <code>sphinx.util.inspect.signature()</code></li>\n<li>The <code>no_docstring</code> argument of\n<code>sphinx.ext.autodoc.Documenter.add_content()</code></li>\n<li><code>sphinx.ext.autodoc.Documenter.get_object_members()</code></li>\n<li><code>sphinx.ext.autodoc.DataDeclarationDocumenter</code></li>\n<li><code>sphinx.ext.autodoc.GenericAliasDocumenter</code></li>\n<li><code>sphinx.ext.autodoc.InstanceAttributeDocumenter</code></li>\n<li><code>sphinx.ext.autodoc.SlotsAttributeDocumenter</code></li>\n<li><code>sphinx.ext.autodoc.TypeVarDocumenter</code></li>\n<li><code>sphinx.ext.autodoc.importer._getannotations()</code></li>\n<li><code>sphinx.ext.autodoc.importer._getmro()</code></li>\n<li><code>sphinx.pycode.ModuleAnalyzer.parse()</code></li>\n<li><code>sphinx.util.osutil.movefile()</code></li>\n<li><code>sphinx.util.requests.is_ssl_error()</code></li>\n</ul>\n<h2>Features added</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8119\">#8119</a>: autodoc: Allow to determine whether a member not included in\n<code>__all__</code> attribute of the module should be documented or not via\n:event:<code>autodoc-skip-member</code> event</li>\n<li><a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8219\">#8219</a>: autodoc: Parameters for generic class are not shown when super class is</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/f5406b918791d9504ca6638330d89dbd86ebcb93\"><code>f5406b9</code></a> Bump to 3.4.1 final</li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/b94752a293c37d61ee89bc4a9f3e5b937fde525d\"><code>b94752a</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8585\">#8585</a> from tk0miya/8583_unnecessary_eq</li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/5c39d0c0688d011a26b806f9bcc90d194ad292f0\"><code>5c39d0c</code></a> Fix <a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8583\">#8583</a>: autodoc: Unnecessary object comparision via <code>__eq__</code> method</li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/043260481b59c922fea042a1e9bbc4ff32fa1069\"><code>0432604</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8581\">#8581</a> from tk0miya/8566_autodoc_process_docstring_for_alia...</li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/df8ab215c0c30da1de6ddadfef957b447510778a\"><code>df8ab21</code></a> Fix <a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8566\">#8566</a>: autodoc-process-docstring is emitted to the alias classes</li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/46eaa5db8005492ae2ff28208f95b9ea8dab62b5\"><code>46eaa5d</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8579\">#8579</a> from francoisfreitag/fix-queue</li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/a1b8b1febb6ce0b7423bb78df30b0fc424c12325\"><code>a1b8b1f</code></a> Ensure linkcheck items are comparable</li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/955d6558ec155dffaef999d890c2cdb224cbfbb9\"><code>955d655</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8571\">#8571</a> from tk0miya/8567_wrong_ivars_in_parent_class</li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/70bb2262d6677e5bcf2c85786b5f410a3a0f68aa\"><code>70bb226</code></a> Fix <a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8567\">#8567</a>: autodoc: Instance attributes are incorrectly added to Parent class</li>\n<li><a href=\"https://github.com/sphinx-doc/sphinx/commit/31cad2ebe7a205154e1374bfa52338111e515719\"><code>31cad2e</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/8570\">#8570</a> from tk0miya/8569_getslots_TypeError</li>\n<li>Additional commits viewable in <a href=\"https://github.com/sphinx-doc/sphinx/compare/v3.3.1...v3.4.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=sphinx&package-manager=pip&previous-version=3.3.1&new-version=3.4.1)](https://dependabot.com/compatibility-score/?dependency-name=sphinx&package-manager=pip&previous-version=3.3.1&new-version=3.4.1)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\n\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\n- Update frequency\n- Out-of-range updates (receive only lockfile updates, if desired)\n- Security updates (receive only security updates, if desired)\n\n\n\n</details>",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/18450",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/18450/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/18450/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/18450/events",
        "html_url": "https://github.com/numpy/numpy/pull/18450",
        "id": 812677013,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTc2OTg1MzE3",
        "number": 18450,
        "title": "BUG: Segfault in nditer buffer dealloc for Object arrays",
        "user": {
            "login": "ahaldane",
            "id": 9040124,
            "node_id": "MDQ6VXNlcjkwNDAxMjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9040124?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahaldane",
            "html_url": "https://github.com/ahaldane",
            "followers_url": "https://api.github.com/users/ahaldane/followers",
            "following_url": "https://api.github.com/users/ahaldane/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahaldane/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahaldane/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahaldane/subscriptions",
            "organizations_url": "https://api.github.com/users/ahaldane/orgs",
            "repos_url": "https://api.github.com/users/ahaldane/repos",
            "events_url": "https://api.github.com/users/ahaldane/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahaldane/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 6394859,
                "node_id": "MDU6TGFiZWw2Mzk0ODU5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/06%20-%20Regression",
                "name": "06 - Regression",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-02-20T18:17:35Z",
        "updated_at": "2021-03-02T23:52:21Z",
        "closed_at": "2021-02-22T17:19:24Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/18450",
            "html_url": "https://github.com/numpy/numpy/pull/18450",
            "diff_url": "https://github.com/numpy/numpy/pull/18450.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/18450.patch"
        },
        "body": "I get a segfault in 1.20.0 and in master involving nditer and object arrays. It doesn't seem to happen in 1.18. The cause seems to be some combination of incomplete error handling in nditer ( known problem which @seberg seems to have been working on fixing a few months ago), as well as mis-detection of buffer non-initialization.\r\n\r\nThis PR has two changes: \r\n 1. It adds a check in `npyiter_clear_buffers` to avoid clearing unused buffers, which is the main fix. I am not 100% on correctness since I'm not yet sure of the lifetime of validity of the `NPY_OP_ITFLAG_USINGBUFFER` flag: Can it get set/unset between the call to `npyiter_copy_to_buffers` (where it is set) and `npyiter_clear_buffers` (which does the check)?\r\n 2. Second, it adds a check to `PyErr_Occurred` in ufunc inner-loop code. While I think there is a problem with fall-through errors, I am not sure if this is the right fix: Are there performance implications? Also, if this is a correct change, I think I'd need to do it elsewhere in the file where nditer is used.\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\n>>> np.zeros((17000, 2), dtype='f4') * None\r\n```\r\n\r\nThis code should return an error, `TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'`, however it often segfaults. The segfault depends on malloc'ing some memory with uninitualized non-null bytes, so you may need to vary the number 17000 two or three times to trigger a different malloc. The second array should be a 0d (and not 1d) object array. The segfaulting code was recently touched in #17029 (see `npyiter_clear_buffers` in backtrace below).\r\n\r\n### Debug Info + Discussion\r\n\r\nWhat appears to happen in the example code:\r\n\r\n 1. the ufunc sets up an nditer with buffers to carry out the multiplication op. The `None` is converted to a 0d object array. Buffers of 'O' dtype of size 8192 are created for both of the inputs and the one output. (sidenote: can we update nditer to avoid creating a 64k buffer for the 0d array (op 1) which we never even use?)\r\n 2. The ufunc does:\r\n```C\r\n        do {\r\n            innerloop(dataptr, count_ptr, stride, innerloopdata);\r\n        } while (iternext(iter));\r\n```\r\n 3. in this loop, the ufunc `innerloop` fails due to an invalid python operation (float*None), and sets PyErr\r\n 4. \"iternext\" in the while condition (`npyiter_buffered_iternext`) copies the output buffer to the output array (no problem)\r\n 5. \"iternext\" prepares to copy the next chunk from the input arrays into buffers. However, it determines that the 0d array does not need to use its buffer, so does not zero out that buffer, and unsets `NPY_OP_ITFLAG_USINGBUFFER` for that op.\r\n 6.  \"iternext\" copies op 0 input into its buffer using  `_aligned_contig_to_contig_cast`. After successfully doing the copy, this function checks if `PyErr_Occurred`, which incorrectly triggers due to the previously set error from innerloop.\r\n 7.  \"iternext\" now thinks that something went wrong with the input->buffer copy, so tries to clear the buffers (`npyiter_clear_buffers`) and return failure.\r\n 8. When clearing the buffers, `npyiter_clear_buffers` tries to zero-out op 1's buffer, which involves decref'ing each element since it is Object dtype. However, this buffer was never initialized, so depending on malloc has random addresses, so this often segfaults.\r\n\r\n\r\nGDB traceback:\r\n```gdb\r\nThread 1 \"python\" received signal SIGSEGV, Segmentation fault.\r\nPyArray_Item_XDECREF (data=<optimized out>, \r\n    descr=0x7ffff584b300 <OBJECT_Descr>)\r\n    at numpy/core/src/multiarray/refcount.c:102\r\n102\t        Py_XDECREF(temp);\r\n(gdb) bt\r\n#0  PyArray_Item_XDECREF (data=<optimized out>, \r\n    descr=0x7ffff584b300 <OBJECT_Descr>)\r\n    at numpy/core/src/multiarray/refcount.c:102\r\n#1  0x00007ffff559b066 in npyiter_clear_buffers (\r\n    iter=iter@entry=0x555556088680)\r\n    at numpy/core/src/multiarray/nditer_api.c:2659\r\n#2  0x00007ffff5592fe5 in npyiter_buffered_iternext (iter=0x555556088680)\r\n    at numpy/core/src/multiarray/nditer_templ.c.src:331\r\n#3  0x00007ffff575a8d0 in iterator_loop (ufunc=ufunc@entry=0x7ffff58b66d0, \r\n    op=op@entry=0x7fffffffbc30, dtype=dtype@entry=0x7fffffffa980, \r\n    order=order@entry=NPY_KEEPORDER, buffersize=buffersize@entry=8192, \r\n    arr_prep=<optimized out>, full_args=..., \r\n    innerloop=0x7ffff562c430 <PyUFunc_OO_O>, \r\n    innerloopdata=0x7ffff7d42df0 <PyNumber_Multiply>, op_flags=0x7fffffffa880)\r\n    at numpy/core/src/umath/ufunc_object.c:1535\r\n#4  0x00007ffff5760f82 in execute_legacy_ufunc_loop (ufunc=0x7ffff58b66d0, \r\n    trivial_loop_ok=trivial_loop_ok@entry=0, op=op@entry=0x7fffffffbc30, \r\n    dtypes=dtypes@entry=0x7fffffffa980, order=NPY_KEEPORDER, buffersize=8192, \r\n    arr_prep=0x7fffffffaa80, full_args=..., op_flags=0x7fffffffa880)\r\n    at numpy/core/src/umath/ufunc_object.c:1702\r\n```\r\n\r\nAdditionally, this is the output with `NPY_IT_DBG_TRACING` and  `NPY_UF_DBG_TRACING` turned on:\r\n```\r\nEvaluating ufunc multiply\r\nGetting arguments\r\nFinding inner loop\r\ninput types:\r\ndtype('O') dtype('O') \r\noutput types:\r\ndtype('O') \r\nExecuting legacy inner loop\r\niterator loop\r\nIterator: Checking casting for operand 0\r\nop: dtype('float32'), iter: dtype('O')\r\nIterator: Setting NPY_OP_ITFLAG_CAST because the types aren't equivalent\r\nIterator: Checking casting for operand 1\r\nop: dtype('O'), iter: dtype('O')\r\nIterator: Checking casting for operand 2\r\nop: <null>, iter: dtype('O')\r\nIterator: Setting allocated stride 1 for iterator dimension 0 to 8\r\nIterator: Setting allocated stride 0 for iterator dimension 1 to 16\r\nIterator: Copying inputs to buffers\r\nIterator: Buffer requires init, memsetting to 0\r\nIterator: Copying operand 0 to buffer (8192 items)\r\nAny buffering needed: 1\r\nIterator: Finished copying inputs to buffers (buffered size is 8192)\r\niterator loop count 8192\r\nIterator: Copying buffers to outputs\r\nIterator: Freeing refs and zeroing buffer of operand 0\r\nIterator: Finished copying buffers to outputs\r\nIterator: Copying inputs to buffers\r\nIterator: Buffer requires init, memsetting to 0\r\nIterator: Copying operand 0 to buffer (8192 items)\r\nzsh: segmentation fault (core dumped)  ./runtests.py -g --ipython\r\n```\r\n\r\nIt doesn't show it, but I in gdb I can see the segfault happens when clearing op 1's buffer\r\n\r\n### NumPy/Python version information:\r\n\r\n1.20.0 and master\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/18469",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/18469/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/18469/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/18469/events",
        "html_url": "https://github.com/numpy/numpy/pull/18469",
        "id": 813724660,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTc3ODI1MjQ2",
        "number": 18469,
        "title": "BUG: Segfault in nditer buffer dealloc for Object arrays",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 6394859,
                "node_id": "MDU6TGFiZWw2Mzk0ODU5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/06%20-%20Regression",
                "name": "06 - Regression",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 249193408,
                "node_id": "MDU6TGFiZWwyNDkxOTM0MDg=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/08%20-%20Backport",
                "name": "08 - Backport",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/91",
            "html_url": "https://github.com/numpy/numpy/milestone/91",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/91/labels",
            "id": 6394881,
            "node_id": "MDk6TWlsZXN0b25lNjM5NDg4MQ==",
            "number": 91,
            "title": "1.20.2 release",
            "description": "",
            "creator": {
                "login": "charris",
                "id": 77272,
                "node_id": "MDQ6VXNlcjc3Mjcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/charris",
                "html_url": "https://github.com/charris",
                "followers_url": "https://api.github.com/users/charris/followers",
                "following_url": "https://api.github.com/users/charris/following{/other_user}",
                "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
                "organizations_url": "https://api.github.com/users/charris/orgs",
                "repos_url": "https://api.github.com/users/charris/repos",
                "events_url": "https://api.github.com/users/charris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/charris/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 25,
            "state": "closed",
            "created_at": "2021-02-04T19:05:11Z",
            "updated_at": "2021-04-07T21:54:24Z",
            "due_on": null,
            "closed_at": "2021-04-07T21:54:24Z"
        },
        "comments": 0,
        "created_at": "2021-02-22T17:53:15Z",
        "updated_at": "2021-02-23T01:34:12Z",
        "closed_at": "2021-02-22T21:13:07Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/18469",
            "html_url": "https://github.com/numpy/numpy/pull/18469",
            "diff_url": "https://github.com/numpy/numpy/pull/18469.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/18469.patch"
        },
        "body": "Backport of #18450. \r\n\r\nI get a segfault in 1.20.0 and in master involving nditer and object arrays. It doesn't seem to happen in 1.18. The cause seems to be some combination of incomplete error handling in nditer ( known problem which @seberg seems to have been working on fixing a few months ago), as well as mis-detection of buffer non-initialization.\r\n\r\nThis PR has two changes: \r\n 1. It adds a check in `npyiter_clear_buffers` to avoid clearing unused buffers, which is the main fix. I am not 100% on correctness since I'm not yet sure of the lifetime of validity of the `NPY_OP_ITFLAG_USINGBUFFER` flag: Can it get set/unset between the call to `npyiter_copy_to_buffers` (where it is set) and `npyiter_clear_buffers` (which does the check)?\r\n 2. Second, it adds a check to `PyErr_Occurred` in ufunc inner-loop code. While I think there is a problem with fall-through errors, I am not sure if this is the right fix: Are there performance implications? Also, if this is a correct change, I think I'd need to do it elsewhere in the file where nditer is used.\r\n\r\n### Reproducing code example:\r\n\r\n```python\r\n>>> np.zeros((17000, 2), dtype='f4') * None\r\n```\r\n\r\nThis code should return an error, `TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'`, however it often segfaults. The segfault depends on malloc'ing some memory with uninitualized non-null bytes, so you may need to vary the number 17000 two or three times to trigger a different malloc. The second array should be a 0d (and not 1d) object array. The segfaulting code was recently touched in #17029 (see `npyiter_clear_buffers` in backtrace below).\r\n\r\n### Debug Info + Discussion\r\n\r\nWhat appears to happen in the example code:\r\n\r\n 1. the ufunc sets up an nditer with buffers to carry out the multiplication op. The `None` is converted to a 0d object array. Buffers of 'O' dtype of size 8192 are created for both of the inputs and the one output. (sidenote: can we update nditer to avoid creating a 64k buffer for the 0d array (op 1) which we never even use?)\r\n 2. The ufunc does:\r\n```C\r\n        do {\r\n            innerloop(dataptr, count_ptr, stride, innerloopdata);\r\n        } while (iternext(iter));\r\n```\r\n 3. in this loop, the ufunc `innerloop` fails due to an invalid python operation (float*None), and sets PyErr\r\n 4. \"iternext\" in the while condition (`npyiter_buffered_iternext`) copies the output buffer to the output array (no problem)\r\n 5. \"iternext\" prepares to copy the next chunk from the input arrays into buffers. However, it determines that the 0d array does not need to use its buffer, so does not zero out that buffer, and unsets `NPY_OP_ITFLAG_USINGBUFFER` for that op.\r\n 6.  \"iternext\" copies op 0 input into its buffer using  `_aligned_contig_to_contig_cast`. After successfully doing the copy, this function checks if `PyErr_Occurred`, which incorrectly triggers due to the previously set error from innerloop.\r\n 7.  \"iternext\" now thinks that something went wrong with the input->buffer copy, so tries to clear the buffers (`npyiter_clear_buffers`) and return failure.\r\n 8. When clearing the buffers, `npyiter_clear_buffers` tries to zero-out op 1's buffer, which involves decref'ing each element since it is Object dtype. However, this buffer was never initialized, so depending on malloc has random addresses, so this often segfaults.\r\n\r\n\r\nGDB traceback:\r\n```gdb\r\nThread 1 \"python\" received signal SIGSEGV, Segmentation fault.\r\nPyArray_Item_XDECREF (data=<optimized out>, \r\n    descr=0x7ffff584b300 <OBJECT_Descr>)\r\n    at numpy/core/src/multiarray/refcount.c:102\r\n102\t        Py_XDECREF(temp);\r\n(gdb) bt\r\n#0  PyArray_Item_XDECREF (data=<optimized out>, \r\n    descr=0x7ffff584b300 <OBJECT_Descr>)\r\n    at numpy/core/src/multiarray/refcount.c:102\r\n#1  0x00007ffff559b066 in npyiter_clear_buffers (\r\n    iter=iter@entry=0x555556088680)\r\n    at numpy/core/src/multiarray/nditer_api.c:2659\r\n#2  0x00007ffff5592fe5 in npyiter_buffered_iternext (iter=0x555556088680)\r\n    at numpy/core/src/multiarray/nditer_templ.c.src:331\r\n#3  0x00007ffff575a8d0 in iterator_loop (ufunc=ufunc@entry=0x7ffff58b66d0, \r\n    op=op@entry=0x7fffffffbc30, dtype=dtype@entry=0x7fffffffa980, \r\n    order=order@entry=NPY_KEEPORDER, buffersize=buffersize@entry=8192, \r\n    arr_prep=<optimized out>, full_args=..., \r\n    innerloop=0x7ffff562c430 <PyUFunc_OO_O>, \r\n    innerloopdata=0x7ffff7d42df0 <PyNumber_Multiply>, op_flags=0x7fffffffa880)\r\n    at numpy/core/src/umath/ufunc_object.c:1535\r\n#4  0x00007ffff5760f82 in execute_legacy_ufunc_loop (ufunc=0x7ffff58b66d0, \r\n    trivial_loop_ok=trivial_loop_ok@entry=0, op=op@entry=0x7fffffffbc30, \r\n    dtypes=dtypes@entry=0x7fffffffa980, order=NPY_KEEPORDER, buffersize=8192, \r\n    arr_prep=0x7fffffffaa80, full_args=..., op_flags=0x7fffffffa880)\r\n    at numpy/core/src/umath/ufunc_object.c:1702\r\n```\r\n\r\nAdditionally, this is the output with `NPY_IT_DBG_TRACING` and  `NPY_UF_DBG_TRACING` turned on:\r\n```\r\nEvaluating ufunc multiply\r\nGetting arguments\r\nFinding inner loop\r\ninput types:\r\ndtype('O') dtype('O') \r\noutput types:\r\ndtype('O') \r\nExecuting legacy inner loop\r\niterator loop\r\nIterator: Checking casting for operand 0\r\nop: dtype('float32'), iter: dtype('O')\r\nIterator: Setting NPY_OP_ITFLAG_CAST because the types aren't equivalent\r\nIterator: Checking casting for operand 1\r\nop: dtype('O'), iter: dtype('O')\r\nIterator: Checking casting for operand 2\r\nop: <null>, iter: dtype('O')\r\nIterator: Setting allocated stride 1 for iterator dimension 0 to 8\r\nIterator: Setting allocated stride 0 for iterator dimension 1 to 16\r\nIterator: Copying inputs to buffers\r\nIterator: Buffer requires init, memsetting to 0\r\nIterator: Copying operand 0 to buffer (8192 items)\r\nAny buffering needed: 1\r\nIterator: Finished copying inputs to buffers (buffered size is 8192)\r\niterator loop count 8192\r\nIterator: Copying buffers to outputs\r\nIterator: Freeing refs and zeroing buffer of operand 0\r\nIterator: Finished copying buffers to outputs\r\nIterator: Copying inputs to buffers\r\nIterator: Buffer requires init, memsetting to 0\r\nIterator: Copying operand 0 to buffer (8192 items)\r\nzsh: segmentation fault (core dumped)  ./runtests.py -g --ipython\r\n```\r\n\r\nIt doesn't show it, but I in gdb I can see the segfault happens when clearing op 1's buffer\r\n\r\n### NumPy/Python version information:\r\n\r\n1.20.0 and master\r\n\r\n<!--         ----------------------------------------------------------------\r\n                MAKE SURE YOUR PR GETS THE ATTENTION IT DESERVES!\r\n                ----------------------------------------------------------------\r\n\r\n*  FORMAT IT RIGHT:\r\n      http://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n\r\n*  IF IT'S A NEW FEATURE OR API CHANGE, TEST THE WATERS:\r\n      http://www.numpy.org/devdocs/dev/development_workflow.html#get-the-mailing-list-s-opinion\r\n\r\n*  HIT ALL THE GUIDELINES:\r\n      https://numpy.org/devdocs/dev/index.html#guidelines\r\n\r\n*  WHAT TO DO IF WE HAVEN'T GOTTEN BACK TO YOU:\r\n      http://www.numpy.org/devdocs/dev/development_workflow.html#getting-your-pr-reviewed\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/17199",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17199/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17199/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/17199/events",
        "html_url": "https://github.com/numpy/numpy/pull/17199",
        "id": 689284746,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDc2MzYyMjEz",
        "number": 17199,
        "title": "DOC: Fix the documented signatures of four `ufunc` methods",
        "user": {
            "login": "BvB93",
            "id": 43369155,
            "node_id": "MDQ6VXNlcjQzMzY5MTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43369155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BvB93",
            "html_url": "https://github.com/BvB93",
            "followers_url": "https://api.github.com/users/BvB93/followers",
            "following_url": "https://api.github.com/users/BvB93/following{/other_user}",
            "gists_url": "https://api.github.com/users/BvB93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BvB93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BvB93/subscriptions",
            "organizations_url": "https://api.github.com/users/BvB93/orgs",
            "repos_url": "https://api.github.com/users/BvB93/repos",
            "events_url": "https://api.github.com/users/BvB93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BvB93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 6359990,
                "node_id": "MDU6TGFiZWw2MzU5OTkw",
                "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation",
                "name": "04 - Documentation",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917437,
                "node_id": "MDU6TGFiZWwxNjkxNzQzNw==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20Documentation",
                "name": "component: Documentation",
                "color": "009800",
                "default": false,
                "description": null
            },
            {
                "id": 959099844,
                "node_id": "MDU6TGFiZWw5NTkwOTk4NDQ=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.ufunc",
                "name": "component: numpy.ufunc",
                "color": "009800",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-08-31T15:14:01Z",
        "updated_at": "2020-09-02T17:43:01Z",
        "closed_at": "2020-09-02T17:42:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/17199",
            "html_url": "https://github.com/numpy/numpy/pull/17199",
            "diff_url": "https://github.com/numpy/numpy/pull/17199.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/17199.patch"
        },
        "body": "This pull request fixes the doumented signature of four `ufunc` methods:\r\n\r\n* `ufunc.reduce` & `.reduceat` have a parameter which is incorrectly labeled as `a` (should be `array`).\r\n* `ufunc.at` & `.outer` have a number of positional-only parameters which are currently not marked as such.\r\n\r\nExamples\r\n----------\r\n``` python\r\n>>> import numpy as np\r\n\r\n>>> np.__version__\r\n'1.20.0.dev0+c04bb88'\r\n\r\n>>> ar = np.arange(5)\r\n\r\n# Should be `array`; not `a`\r\n>>> np.add.reduce(a=ar)  \r\nTraceback (most recent call last):\r\n  ...\r\nTypeError: reduce() missing required argument 'array' (pos 1)\r\n\r\n# Should be `array`; not `a`\r\n>>> np.add.reduceat(a=ar, indices=[0, 1])  \r\nTraceback (most recent call last):\r\n  ...\r\nTypeError: reduceat() missing required argument 'array' (pos 1)\r\n\r\n# Doesn't take keyword arguments\r\n>>> np.add.at(a=ar, indices=0, b=1)  \r\nTraceback (most recent call last):\r\n  ...\r\nTypeError: at() takes no keyword arguments\r\n\r\n# The error is not as clear as with at(), \r\n# but in the end it doesn't seem to accept keyword arguments either\r\n>>> np.add.outer(A=ar, B=ar)  \r\nTraceback (most recent call last):\r\n  ...\r\nTypeError: exactly two arguments expected\r\n\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/17996",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17996/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17996/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/17996/events",
        "html_url": "https://github.com/numpy/numpy/pull/17996",
        "id": 766068935,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTM5MjMyMTgy",
        "number": 17996,
        "title": "MAINT: Update wheel requirement from <=0.35.1 to <0.36.3",
        "user": {
            "login": "dependabot-preview[bot]",
            "id": 27856297,
            "node_id": "MDM6Qm90Mjc4NTYyOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/in/2141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D",
            "html_url": "https://github.com/apps/dependabot-preview",
            "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-14T07:53:32Z",
        "updated_at": "2020-12-14T13:27:42Z",
        "closed_at": "2020-12-14T13:27:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/17996",
            "html_url": "https://github.com/numpy/numpy/pull/17996",
            "diff_url": "https://github.com/numpy/numpy/pull/17996.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/17996.patch"
        },
        "body": "Updates the requirements on [wheel](https://github.com/pypa/wheel) to permit the latest version.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/wheel/blob/master/docs/news.rst\">wheel's changelog</a>.</em></p>\n<blockquote>\n<h1>Release Notes</h1>\n<p><strong>0.36.2 (2020-12-13)</strong></p>\n<ul>\n<li>Updated vendored <code>packaging</code> library to v20.8</li>\n<li>Fixed wheel sdist missing <code>LICENSE.txt</code></li>\n<li>Don't use default <code>macos/arm64</code> deployment target in calculating the platform tag for fat binaries (PR by Ronald Oussoren)</li>\n</ul>\n<p><strong>0.36.1 (2020-12-04)</strong></p>\n<ul>\n<li>Fixed <code>AssertionError</code> when <code>MACOSX_DEPLOYMENT_TARGET</code> was set to <code>11</code> (PR by Grzegorz Bokota and Fran\u00e7ois-Xavier Coudert)</li>\n<li>Fixed regression introduced in 0.36.0 on Python 2.7 when a custom generator name was passed as unicode (Scikit-build) (<code>TypeError: 'unicode' does not have the buffer interface</code>)</li>\n</ul>\n<p><strong>0.36.0 (2020-12-01)</strong></p>\n<ul>\n<li>Added official Python 3.9 support</li>\n<li>Updated vendored <code>packaging</code> library to v20.7</li>\n<li>Switched to always using LF as line separator when generating <code>WHEEL</code> files (on Windows, CRLF was being used instead)</li>\n<li>The ABI tag is taken from the sysconfig SOABI value. On PyPy the SOABI value is <code>pypy37-pp73</code> which is not compliant with PEP 3149, as it should have both the API tag and the platform tag. This change future-proofs any change in PyPy's SOABI tag to make sure only the ABI tag is used by wheel.</li>\n<li>Fixed regression and test for <code>bdist_wheel --plat-name</code>. It was ignored for C extensions in v0.35, but the regression was not detected by tests.</li>\n</ul>\n<p><strong>0.35.1 (2020-08-14)</strong></p>\n<ul>\n<li>Replaced install dependency on <code>packaging</code> with a vendored copy of its <code>tags</code> module</li>\n<li>Fixed <code>bdist_wheel</code> not working on FreeBSD due to mismatching platform tag name (it was not being converted to lowercase)</li>\n</ul>\n<p><strong>0.35.0 (2020-08-13)</strong></p>\n<ul>\n<li>Switched to the <a href=\"https://pypi.org/project/packaging/\">packaging</a> library for computing wheel tags</li>\n<li>Fixed a resource leak in <code>WheelFile.open()</code> (PR by Jon Dufresne)</li>\n</ul>\n<p><strong>0.34.2 (2020-01-30)</strong></p>\n<ul>\n<li>Fixed installation of <code>wheel</code> from sdist on environments without Unicode file name support</li>\n</ul>\n<p><strong>0.34.1 (2020-01-27)</strong></p>\n<ul>\n<li>Fixed installation of <code>wheel</code> from sdist which was broken due to a chicken and egg problem with PEP 517 and setuptools_scm</li>\n</ul>\n<p><strong>0.34.0 (2020-01-27)</strong></p>\n<ul>\n<li>Dropped Python 3.4 support</li>\n<li>Added automatic platform tag detection for macOS binary wheels (PR by Grzegorz Bokota)</li>\n<li>Added the <code>--compression=</code> option to the <code>bdist_wheel</code> command</li>\n<li>Fixed PyPy tag generation to work with the updated semantics (<a href=\"https://github-redirect.dependabot.com/pypa/wheel/issues/328\">#328</a>)</li>\n<li>Updated project packaging and testing configuration for 517</li>\n<li>Moved the contents of setup.py to setup.cfg</li>\n<li>Fixed duplicate RECORD file when using <code>wheel pack</code> on Windows</li>\n<li>Fixed bdist_wheel failing at cleanup on Windows with a read-only source tree</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/wheel/commit/4fb47f98550f3f43fc0b8c73f518592124ae21bd\"><code>4fb47f9</code></a> Created a new release</li>\n<li><a href=\"https://github.com/pypa/wheel/commit/bfb64680915c34932bc9bee9acc2aad7ba9d4b1c\"><code>bfb6468</code></a> Added news entry for PR <a href=\"https://github-redirect.dependabot.com/pypa/wheel/issues/390\">#390</a></li>\n<li><a href=\"https://github.com/pypa/wheel/commit/cedf950bcd407e1c80515cb29c5a5c2d11d01500\"><code>cedf950</code></a> Made sure that the sdist contains LICENSE.txt</li>\n<li><a href=\"https://github.com/pypa/wheel/commit/f6fd2472c7a4a836a3ebe12eab96a1ed8a31c061\"><code>f6fd247</code></a> Updated vendored packaging to v20.8</li>\n<li><a href=\"https://github.com/pypa/wheel/commit/16777fb4c075df682c085d48b9c3703a36bf65c3\"><code>16777fb</code></a> Added news item about regression (<a href=\"https://github-redirect.dependabot.com/pypa/wheel/issues/384\">#384</a>)</li>\n<li><a href=\"https://github.com/pypa/wheel/commit/a717e52f66a234cc49802147a6242e6342a90a81\"><code>a717e52</code></a> Don't use default macos/arm64 deployment target in calculating the platform t...</li>\n<li><a href=\"https://github.com/pypa/wheel/commit/64550e15fdbc96d5690dc872257edc859c218068\"><code>64550e1</code></a> Created a new release</li>\n<li><a href=\"https://github.com/pypa/wheel/commit/153dfef9caefed617faefd2e88c20e235a4a7338\"><code>153dfef</code></a> Added news entry for PR <a href=\"https://github-redirect.dependabot.com/pypa/wheel/issues/386\">#386</a></li>\n<li><a href=\"https://github.com/pypa/wheel/commit/3eb5ff9e15c8ed4e3b22321df980771d4fb2ee46\"><code>3eb5ff9</code></a> Fixed TypeError when a unicode generator name was passed on Python 2.7</li>\n<li><a href=\"https://github.com/pypa/wheel/commit/e6102e58153fa43089b920e3908eeb908170cf44\"><code>e6102e5</code></a> Fixed error on Big Sur when deployment target = 11 (<a href=\"https://github-redirect.dependabot.com/pypa/wheel/issues/386\">#386</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/wheel/compare/0.5...0.36.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\n\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\n- Update frequency\n- Out-of-range updates (receive only lockfile updates, if desired)\n- Security updates (receive only security updates, if desired)\n\n\n\n</details>",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/17132",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/17132/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/17132/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/17132/events",
        "html_url": "https://github.com/numpy/numpy/pull/17132",
        "id": 683537705,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDcxNjEzNjg2",
        "number": 17132,
        "title": "MAINT: Chain some exceptions in arraysetops.",
        "user": {
            "login": "raghavkhanna18",
            "id": 37894186,
            "node_id": "MDQ6VXNlcjM3ODk0MTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37894186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raghavkhanna18",
            "html_url": "https://github.com/raghavkhanna18",
            "followers_url": "https://api.github.com/users/raghavkhanna18/followers",
            "following_url": "https://api.github.com/users/raghavkhanna18/following{/other_user}",
            "gists_url": "https://api.github.com/users/raghavkhanna18/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raghavkhanna18/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raghavkhanna18/subscriptions",
            "organizations_url": "https://api.github.com/users/raghavkhanna18/orgs",
            "repos_url": "https://api.github.com/users/raghavkhanna18/repos",
            "events_url": "https://api.github.com/users/raghavkhanna18/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raghavkhanna18/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-08-21T12:48:53Z",
        "updated_at": "2020-08-24T00:44:16Z",
        "closed_at": "2020-08-24T00:43:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/17132",
            "html_url": "https://github.com/numpy/numpy/pull/17132",
            "diff_url": "https://github.com/numpy/numpy/pull/17132.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/17132.patch"
        },
        "body": "<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\nChanges related to #15986\r\n\r\nAdds exception chaining to TypeError and RaiseError in ``numpy/numpy/lib/arraysetops.py ``\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/18045",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/18045/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/18045/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/18045/events",
        "html_url": "https://github.com/numpy/numpy/pull/18045",
        "id": 771927731,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTQzMjkyMDA3",
        "number": 18045,
        "title": "MAINT: Bump pytest from 6.2.0 to 6.2.1",
        "user": {
            "login": "dependabot-preview[bot]",
            "id": 27856297,
            "node_id": "MDM6Qm90Mjc4NTYyOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/in/2141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D",
            "html_url": "https://github.com/apps/dependabot-preview",
            "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-21T07:30:11Z",
        "updated_at": "2020-12-21T12:54:36Z",
        "closed_at": "2020-12-21T12:54:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/18045",
            "html_url": "https://github.com/numpy/numpy/pull/18045",
            "diff_url": "https://github.com/numpy/numpy/pull/18045.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/18045.patch"
        },
        "body": "Bumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.0 to 6.2.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest/releases\">pytest's releases</a>.</em></p>\n<blockquote>\n<h2>6.2.1</h2>\n<h1>pytest 6.2.1 (2020-12-15)</h1>\n<h2>Bug Fixes</h2>\n<ul>\n<li>\n<p><a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7678\">#7678</a>: Fixed bug where <code>ImportPathMismatchError</code> would be raised for files compiled in\nthe host and loaded later from an UNC mounted path (Windows).</p>\n</li>\n<li>\n<p><a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/8132\">#8132</a>: Fixed regression in <code>approx</code>: in 6.2.0 <code>approx</code> no longer raises\n<code>TypeError</code> when dealing with non-numeric types, falling back to normal comparison.\nBefore 6.2.0, array types like tf.DeviceArray fell through to the scalar case,\nand happened to compare correctly to a scalar if they had only one element.\nAfter 6.2.0, these types began failing, because they inherited neither from\nstandard Python number hierarchy nor from <code>numpy.ndarray</code>.</p>\n<p><code>approx</code> now converts arguments to <code>numpy.ndarray</code> if they expose the array\nprotocol and are not scalars. This treats array-like objects like numpy arrays,\nregardless of size.</p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst\">pytest's changelog</a>.</em></p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/d3971c30f4d0f1890a372af3b98de41ee555dcb3\"><code>d3971c3</code></a> Prepare release version 6.2.1</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/780044b64a79eb99eb08d86a08d5cf7fa8b047ba\"><code>780044b</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/8147\">#8147</a> from nicoddemus/backport-8137</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/8354995abc4c4f913a8266fb53b7d2a4e93e4050\"><code>8354995</code></a> python_api: handle array-like args in approx() (<a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/8137\">#8137</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/8b8b1214f4834419a5f45758d6cdc4eddba01359\"><code>8b8b121</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/8135\">#8135</a> from nicoddemus/backport-8123</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/f854cf66f4ad866d27f85e6fcc3b476a835ca3e7\"><code>f854cf6</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/8123\">#8123</a> from nicoddemus/import-mismatch-unc</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/c475106f12ed87fe908544ff383c5205638c086d\"><code>c475106</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/8130\">#8130</a> from pytest-dev/release-6.2.0</li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest/compare/6.2.0...6.2.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=pytest&package-manager=pip&previous-version=6.2.0&new-version=6.2.1)](https://dependabot.com/compatibility-score/?dependency-name=pytest&package-manager=pip&previous-version=6.2.0&new-version=6.2.1)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\n\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\n- Update frequency\n- Out-of-range updates (receive only lockfile updates, if desired)\n- Security updates (receive only security updates, if desired)\n\n\n\n</details>",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/16592",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16592/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16592/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/16592/events",
        "html_url": "https://github.com/numpy/numpy/pull/16592",
        "id": 638009664,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDMzODg5OTE0",
        "number": 16592,
        "title": "BUG: Raise TypeError for float->timedelta promotion",
        "user": {
            "login": "anirudh2290",
            "id": 1522319,
            "node_id": "MDQ6VXNlcjE1MjIzMTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1522319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anirudh2290",
            "html_url": "https://github.com/anirudh2290",
            "followers_url": "https://api.github.com/users/anirudh2290/followers",
            "following_url": "https://api.github.com/users/anirudh2290/following{/other_user}",
            "gists_url": "https://api.github.com/users/anirudh2290/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anirudh2290/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anirudh2290/subscriptions",
            "organizations_url": "https://api.github.com/users/anirudh2290/orgs",
            "repos_url": "https://api.github.com/users/anirudh2290/repos",
            "events_url": "https://api.github.com/users/anirudh2290/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anirudh2290/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 987701410,
                "node_id": "MDU6TGFiZWw5ODc3MDE0MTA=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.dtype",
                "name": "component: numpy.dtype",
                "color": "009800",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2020-06-12T21:22:06Z",
        "updated_at": "2020-06-19T20:13:15Z",
        "closed_at": "2020-06-19T19:14:22Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/16592",
            "html_url": "https://github.com/numpy/numpy/pull/16592",
            "diff_url": "https://github.com/numpy/numpy/pull/16592.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/16592.patch"
        },
        "body": "Fixes https://github.com/numpy/numpy/issues/16566",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/16570",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16570/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16570/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/16570/events",
        "html_url": "https://github.com/numpy/numpy/pull/16570",
        "id": 636611465,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDMyNzUzODUx",
        "number": 16570,
        "title": "ENH: Throw TypeError on operator concat on Numpy Arrays",
        "user": {
            "login": "vrakesh",
            "id": 13260794,
            "node_id": "MDQ6VXNlcjEzMjYwNzk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13260794?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vrakesh",
            "html_url": "https://github.com/vrakesh",
            "followers_url": "https://api.github.com/users/vrakesh/followers",
            "following_url": "https://api.github.com/users/vrakesh/following{/other_user}",
            "gists_url": "https://api.github.com/users/vrakesh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vrakesh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vrakesh/subscriptions",
            "organizations_url": "https://api.github.com/users/vrakesh/orgs",
            "repos_url": "https://api.github.com/users/vrakesh/repos",
            "events_url": "https://api.github.com/users/vrakesh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vrakesh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359239,
                "node_id": "MDU6TGFiZWw2MzU5MjM5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement",
                "name": "01 - Enhancement",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 19,
        "created_at": "2020-06-10T23:32:55Z",
        "updated_at": "2020-06-27T16:25:30Z",
        "closed_at": "2020-06-27T16:25:30Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/16570",
            "html_url": "https://github.com/numpy/numpy/pull/16570",
            "diff_url": "https://github.com/numpy/numpy/pull/16570.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/16570.patch"
        },
        "body": "Fixes #16489 \r\n\r\nNew to Python C-API, requesting feedback on Reference counter handling, does it look correct?\r\n\r\nTried to reuse Numpy concatenate. ",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/16639",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16639/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16639/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/16639/events",
        "html_url": "https://github.com/numpy/numpy/pull/16639",
        "id": 642256361,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDM3MzI2NDk1",
        "number": 16639,
        "title": "BUG: Fix uint->timedelta promotion to raise TypeError",
        "user": {
            "login": "anirudh2290",
            "id": 1522319,
            "node_id": "MDQ6VXNlcjE1MjIzMTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1522319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anirudh2290",
            "html_url": "https://github.com/anirudh2290",
            "followers_url": "https://api.github.com/users/anirudh2290/followers",
            "following_url": "https://api.github.com/users/anirudh2290/following{/other_user}",
            "gists_url": "https://api.github.com/users/anirudh2290/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anirudh2290/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anirudh2290/subscriptions",
            "organizations_url": "https://api.github.com/users/anirudh2290/orgs",
            "repos_url": "https://api.github.com/users/anirudh2290/repos",
            "events_url": "https://api.github.com/users/anirudh2290/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anirudh2290/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-19T23:08:32Z",
        "updated_at": "2020-06-20T02:17:07Z",
        "closed_at": "2020-06-20T01:34:14Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/16639",
            "html_url": "https://github.com/numpy/numpy/pull/16639",
            "diff_url": "https://github.com/numpy/numpy/pull/16639.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/16639.patch"
        },
        "body": "Please see: https://github.com/numpy/numpy/pull/16592#issuecomment-646826248",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/16747",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16747/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16747/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/16747/events",
        "html_url": "https://github.com/numpy/numpy/pull/16747",
        "id": 650838781,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ0MjQ3NzI1",
        "number": 16747,
        "title": "MAINT: Chaining exceptions in numpy/core/_internal.py",
        "user": {
            "login": "abhinav-thimma",
            "id": 22278406,
            "node_id": "MDQ6VXNlcjIyMjc4NDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22278406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhinav-thimma",
            "html_url": "https://github.com/abhinav-thimma",
            "followers_url": "https://api.github.com/users/abhinav-thimma/followers",
            "following_url": "https://api.github.com/users/abhinav-thimma/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhinav-thimma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhinav-thimma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhinav-thimma/subscriptions",
            "organizations_url": "https://api.github.com/users/abhinav-thimma/orgs",
            "repos_url": "https://api.github.com/users/abhinav-thimma/repos",
            "events_url": "https://api.github.com/users/abhinav-thimma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhinav-thimma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-04T06:42:57Z",
        "updated_at": "2020-07-12T15:28:07Z",
        "closed_at": "2020-07-04T17:18:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/16747",
            "html_url": "https://github.com/numpy/numpy/pull/16747",
            "diff_url": "https://github.com/numpy/numpy/pull/16747.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/16747.patch"
        },
        "body": "Changes related to #15986\r\n- added chaining for ValueError, TypeError, AttributeError\r\n- updated % formatted strings to f strings\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13435",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13435/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13435/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13435/events",
        "html_url": "https://github.com/numpy/numpy/pull/13435",
        "id": 438767984,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc0NzIyOTg4",
        "number": 13435,
        "title": "BUG: Add TypeError to accepted exceptions in crackfortran.",
        "user": {
            "login": "mattip",
            "id": 823911,
            "node_id": "MDQ6VXNlcjgyMzkxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattip",
            "html_url": "https://github.com/mattip",
            "followers_url": "https://api.github.com/users/mattip/followers",
            "following_url": "https://api.github.com/users/mattip/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
            "organizations_url": "https://api.github.com/users/mattip/orgs",
            "repos_url": "https://api.github.com/users/mattip/repos",
            "events_url": "https://api.github.com/users/mattip/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattip/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917452,
                "node_id": "MDU6TGFiZWwxNjkxNzQ1Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.f2py",
                "name": "component: numpy.f2py",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-04-30T13:05:44Z",
        "updated_at": "2020-06-08T06:58:13Z",
        "closed_at": "2019-04-30T14:23:09Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13435",
            "html_url": "https://github.com/numpy/numpy/pull/13435",
            "diff_url": "https://github.com/numpy/numpy/pull/13435.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13435.patch"
        },
        "body": "Fixes #13429",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/16850",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16850/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16850/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/16850/events",
        "html_url": "https://github.com/numpy/numpy/pull/16850",
        "id": 655962497,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzQ1OTI1",
        "number": 16850,
        "title": "DEP: Deprecate NumPy object scalars",
        "user": {
            "login": "seberg",
            "id": 61977,
            "node_id": "MDQ6VXNlcjYxOTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/61977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seberg",
            "html_url": "https://github.com/seberg",
            "followers_url": "https://api.github.com/users/seberg/followers",
            "following_url": "https://api.github.com/users/seberg/following{/other_user}",
            "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
            "organizations_url": "https://api.github.com/users/seberg/orgs",
            "repos_url": "https://api.github.com/users/seberg/repos",
            "events_url": "https://api.github.com/users/seberg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seberg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 81498520,
                "node_id": "MDU6TGFiZWw4MTQ5ODUyMA==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/07%20-%20Deprecation",
                "name": "07 - Deprecation",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-13T15:57:25Z",
        "updated_at": "2020-07-21T18:00:50Z",
        "closed_at": "2020-07-21T17:58:18Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/16850",
            "html_url": "https://github.com/numpy/numpy/pull/16850",
            "diff_url": "https://github.com/numpy/numpy/pull/16850.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/16850.patch"
        },
        "body": "NumPy object scalars should not exist, since they should always\r\njust return the actual scalar in the first place. Put a deprecation\r\nwarning in place to be rapidly changed into a TypeError.\r\n\r\nOnce allocating it gives an error, we can make all methods raise\r\nerrors (with the exception of `__new__`.\r\n\r\n---\r\n\r\nIt is not possible to test this branch, to test it you have to manuall undo gh-16817 and run `a = np.ones(1, dtype=('O', [('name', 'O')]))[0]` which used to be a bug that actually created object scalars.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/8297",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/8297/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/8297/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/8297/events",
        "html_url": "https://github.com/numpy/numpy/pull/8297",
        "id": 191146042,
        "node_id": "MDExOlB1bGxSZXF1ZXN0OTQ5MTQyMTE=",
        "number": 8297,
        "title": "DEP: Handle expired deprecations.",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 81498520,
                "node_id": "MDU6TGFiZWw4MTQ5ODUyMA==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/07%20-%20Deprecation",
                "name": "07 - Deprecation",
                "color": "fef2c0",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/44",
            "html_url": "https://github.com/numpy/numpy/milestone/44",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/44/labels",
            "id": 1981949,
            "node_id": "MDk6TWlsZXN0b25lMTk4MTk0OQ==",
            "number": 44,
            "title": "1.13.0 release",
            "description": "Branch point: 14ff219a13e194c5e7995218fea3c7648eb1c875",
            "creator": {
                "login": "charris",
                "id": 77272,
                "node_id": "MDQ6VXNlcjc3Mjcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/charris",
                "html_url": "https://github.com/charris",
                "followers_url": "https://api.github.com/users/charris/followers",
                "following_url": "https://api.github.com/users/charris/following{/other_user}",
                "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
                "organizations_url": "https://api.github.com/users/charris/orgs",
                "repos_url": "https://api.github.com/users/charris/repos",
                "events_url": "https://api.github.com/users/charris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/charris/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 102,
            "state": "closed",
            "created_at": "2016-09-04T00:50:03Z",
            "updated_at": "2018-10-31T14:34:13Z",
            "due_on": null,
            "closed_at": "2017-09-17T06:13:52Z"
        },
        "comments": 10,
        "created_at": "2016-11-22T22:48:58Z",
        "updated_at": "2020-05-02T17:29:08Z",
        "closed_at": "2016-11-26T17:53:22Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/8297",
            "html_url": "https://github.com/numpy/numpy/pull/8297",
            "diff_url": "https://github.com/numpy/numpy/pull/8297.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/8297.patch"
        },
        "body": "Changes\r\n\r\n_Deprecations to error_\r\n\r\n* `partition`, TypeError when non-integer partition index is used.\r\n* `NpyIter_AdvancedNew`, ValueError when `oa_ndim == 0` and `op_axes` is NULL\r\n* `negative(bool_)`, TypeError when negative applied to booleans.\r\n* `subtract(bool_, bool_)`, TypeError when subtracting boolean from boolean.\r\n* ``np.equal, np.not_equal``, object identity doesn't override failed comparison.\r\n* ``np.equal, np.not_equal``, object identity doesn't override non-boolean comparison.\r\n\r\n_FutureWarnings to changed behavior_\r\n\r\n* `array == None` and `array != None` do element-wise comparison.\r\n* ``np.equal, np.not_equal``, object identity doesn't override comparison result.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/15784",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/15784/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/15784/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/15784/events",
        "html_url": "https://github.com/numpy/numpy/pull/15784",
        "id": 584603437,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzkxMTU5NDg4",
        "number": 15784,
        "title": "ENH: Use TypeError in `np.array` for python consistency",
        "user": {
            "login": "mlbileschi",
            "id": 644805,
            "node_id": "MDQ6VXNlcjY0NDgwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/644805?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mlbileschi",
            "html_url": "https://github.com/mlbileschi",
            "followers_url": "https://api.github.com/users/mlbileschi/followers",
            "following_url": "https://api.github.com/users/mlbileschi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mlbileschi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mlbileschi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mlbileschi/subscriptions",
            "organizations_url": "https://api.github.com/users/mlbileschi/orgs",
            "repos_url": "https://api.github.com/users/mlbileschi/repos",
            "events_url": "https://api.github.com/users/mlbileschi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mlbileschi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359239,
                "node_id": "MDU6TGFiZWw2MzU5MjM5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement",
                "name": "01 - Enhancement",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/76",
            "html_url": "https://github.com/numpy/numpy/milestone/76",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/76/labels",
            "id": 4766122,
            "node_id": "MDk6TWlsZXN0b25lNDc2NjEyMg==",
            "number": 76,
            "title": "1.19.0 release",
            "description": "",
            "creator": {
                "login": "rgommers",
                "id": 98330,
                "node_id": "MDQ6VXNlcjk4MzMw",
                "avatar_url": "https://avatars.githubusercontent.com/u/98330?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rgommers",
                "html_url": "https://github.com/rgommers",
                "followers_url": "https://api.github.com/users/rgommers/followers",
                "following_url": "https://api.github.com/users/rgommers/following{/other_user}",
                "gists_url": "https://api.github.com/users/rgommers/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rgommers/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rgommers/subscriptions",
                "organizations_url": "https://api.github.com/users/rgommers/orgs",
                "repos_url": "https://api.github.com/users/rgommers/repos",
                "events_url": "https://api.github.com/users/rgommers/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rgommers/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 89,
            "state": "closed",
            "created_at": "2019-10-19T11:07:38Z",
            "updated_at": "2020-07-08T16:29:57Z",
            "due_on": null,
            "closed_at": "2020-07-08T16:29:57Z"
        },
        "comments": 10,
        "created_at": "2020-03-19T18:11:44Z",
        "updated_at": "2020-03-25T15:52:32Z",
        "closed_at": "2020-03-25T15:52:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/15784",
            "html_url": "https://github.com/numpy/numpy/pull/15784",
            "diff_url": "https://github.com/numpy/numpy/pull/15784.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/15784.patch"
        },
        "body": "Currently, when writing something like \r\n```\r\npd.DataFrame({'arr': np.array(1., 2., 3.)})\r\n```\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-1-ffdb00ae9b74> in <module>()\r\n      1 import numpy as np\r\n      2 import pandas as pd\r\n----> 3 pd.DataFrame({'arr': np.array(1., 2., 3.)})\r\n\r\nValueError: only 2 non-keyword arguments accepted\r\n```\r\nThis stack trace that doesn't include a frame for the np constructor, because the constructor is generated python code. This may lead users to look elsewhere for the issuer of the ValueError, which may create red-herrings in that folks may look elsewhere.\r\n\r\nThis changes makes it more obvious where the error is coming from.\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/15985",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/15985/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/15985/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/15985/events",
        "html_url": "https://github.com/numpy/numpy/pull/15985",
        "id": 600314893,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAzNzczNDYz",
        "number": 15985,
        "title": "BUG: Avoid duplication in stack trace of `linspace(a, b, num=1.5)`",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-04-15T13:52:39Z",
        "updated_at": "2020-04-15T16:36:46Z",
        "closed_at": "2020-04-15T16:36:46Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/15985",
            "html_url": "https://github.com/numpy/numpy/pull/15985",
            "diff_url": "https://github.com/numpy/numpy/pull/15985.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/15985.patch"
        },
        "body": "Before this commit, the stack trace was:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\wiese\\Repos\\numeric-python\\numpy\\build\\testenv\\Lib\\site-packages\\numpy\\core\\function_base.py\", line 114, in linspace\r\n    num = operator.index(num)\r\nTypeError: 'float' object cannot be interpreted as an integer\r\n\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-13-802b8c6e85f6>\", line 1, in <module>\r\n    np.linspace(1, 2, 1.5)\r\n  File \"<__array_function__ internals>\", line 5, in linspace\r\n  File \"C:\\Users\\wiese\\Repos\\numeric-python\\numpy\\build\\testenv\\Lib\\site-packages\\numpy\\core\\function_base.py\", line 116, in linspace\r\n    raise TypeError(\r\nTypeError: object of type <class 'float'> cannot be safely interpreted as an integer.\r\n```\r\n\r\nNow it is\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\wiese\\Repos\\numeric-python\\numpy\\build\\testenv\\Lib\\site-packages\\numpy\\core\\function_base.py\", line 114, in linspace\r\n    num = operator.index(num)\r\nTypeError: 'float' object cannot be interpreted as an integer\r\n```\r\n\r\nThis noisy traceback was introduced in f4dfe833e3e037bb69113f7250fad3699f918cfc.\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/16276",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16276/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16276/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/16276/events",
        "html_url": "https://github.com/numpy/numpy/pull/16276",
        "id": 619727447,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDE5MTI2ODA2",
        "number": 16276,
        "title": " BUG: Ensure out argument is returned by identity for 0d arrays",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-17T15:08:33Z",
        "updated_at": "2020-05-18T23:54:05Z",
        "closed_at": "2020-05-18T23:54:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/16276",
            "html_url": "https://github.com/numpy/numpy/pull/16276",
            "diff_url": "https://github.com/numpy/numpy/pull/16276.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/16276.patch"
        },
        "body": "This makes the following functions consistent with the behavior of ufuncs:\r\n\r\n* `np.argmax`\r\n* `np.argmin`\r\n* `np.choose`\r\n* `np.trace`\r\n* `np.round`\r\n* `np.take`\r\n\r\nPreviously they would unpack a 0d `out` array into a scalar return value. This broke code like:\r\n```\r\nx = np.empty(...)  # maybe 0d, who knows\r\nx = np.take(..., out=x)\r\nx = np.add(..., out=x)\r\n```\r\nbecause the call to `add` would end up with `x` as a scalar, giving a `TypeError`.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/16008",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16008/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16008/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/16008/events",
        "html_url": "https://github.com/numpy/numpy/pull/16008",
        "id": 602193664,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDA1MzA4MTA3",
        "number": 16008,
        "title": "BUG: Unify handling of string enum converters",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-04-17T19:42:25Z",
        "updated_at": "2020-04-27T17:06:48Z",
        "closed_at": "2020-04-27T17:06:47Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/16008",
            "html_url": "https://github.com/numpy/numpy/pull/16008",
            "diff_url": "https://github.com/numpy/numpy/pull/16008.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/16008.patch"
        },
        "body": "Builds upon gh-16007, marking as draft until that's resolved\r\n\r\nThis fixes a collection of bugs:\r\n\r\n* Confusion between `TypeError` and `ValueError`\r\n* Allowing invalid arguments if they are valid up to the first embedded null\r\n* Producing better errors for non-ascii unicode strings (xref #15317)\r\n* Some leaked references in error cases",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/15803",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/15803/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/15803/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/15803/events",
        "html_url": "https://github.com/numpy/numpy/pull/15803",
        "id": 585787999,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzkyMDU0MTQy",
        "number": 15803,
        "title": "DOC: correct possible list lengths for `extobj` in ufunc calls",
        "user": {
            "login": "person142",
            "id": 15134881,
            "node_id": "MDQ6VXNlcjE1MTM0ODgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/15134881?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/person142",
            "html_url": "https://github.com/person142",
            "followers_url": "https://api.github.com/users/person142/followers",
            "following_url": "https://api.github.com/users/person142/following{/other_user}",
            "gists_url": "https://api.github.com/users/person142/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/person142/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/person142/subscriptions",
            "organizations_url": "https://api.github.com/users/person142/orgs",
            "repos_url": "https://api.github.com/users/person142/repos",
            "events_url": "https://api.github.com/users/person142/events{/privacy}",
            "received_events_url": "https://api.github.com/users/person142/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-03-22T19:00:35Z",
        "updated_at": "2020-03-22T23:36:15Z",
        "closed_at": "2020-03-22T23:24:02Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/15803",
            "html_url": "https://github.com/numpy/numpy/pull/15803",
            "diff_url": "https://github.com/numpy/numpy/pull/15803.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/15803.patch"
        },
        "body": "According to the docs:\r\n\r\nhttps://docs.scipy.org/doc/numpy/reference/ufuncs.html#optional-keyword-arguments\r\n\r\nthe list can be of lengths 1, 2, or 3, but only length 3 appears to work:\r\n\r\n```python\r\n>>> import numpy as np\r\n>>> np.sin(1, extobj=[16, 1, lambda: None])\r\n0.8414709848078965\r\n>>> np.sin(1, extobj=[16, 1])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: UFUNC_PYVALS must be a length 3 list.\r\n>>> np.sin(1, extobj=[16])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: UFUNC_PYVALS must be a length 3 list.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/15884",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/15884/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/15884/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/15884/events",
        "html_url": "https://github.com/numpy/numpy/pull/15884",
        "id": 591432553,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk2NjA2NjA2",
        "number": 15884,
        "title": "BUG: Setting a 0d array's strides to themselves should be legal",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-03-31T21:14:16Z",
        "updated_at": "2020-03-31T23:09:09Z",
        "closed_at": "2020-03-31T23:09:08Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/15884",
            "html_url": "https://github.com/numpy/numpy/pull/15884",
            "diff_url": "https://github.com/numpy/numpy/pull/15884.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/15884.patch"
        },
        "body": "<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n\r\nMore like gh-15881 and gh-15882\r\n\r\nBefore this patch:\r\n```python\r\n>>> arr_1d = np.array([1, 2])\r\n>>> arr_1d.strides = arr_1d.strides\r\n>>> arr_0d = np.array(3)\r\n>>> arr_0d.strides = arr_0d.strides\r\nTypeError: invalid strides  # wat\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/15802",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/15802/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/15802/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/15802/events",
        "html_url": "https://github.com/numpy/numpy/pull/15802",
        "id": 585785123,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzkyMDUyMTY3",
        "number": 15802,
        "title": "DEP: Make `np.insert` and `np.delete` on 0d arrays with an axis an error",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 81498520,
                "node_id": "MDU6TGFiZWw4MTQ5ODUyMA==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/07%20-%20Deprecation",
                "name": "07 - Deprecation",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/76",
            "html_url": "https://github.com/numpy/numpy/milestone/76",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/76/labels",
            "id": 4766122,
            "node_id": "MDk6TWlsZXN0b25lNDc2NjEyMg==",
            "number": 76,
            "title": "1.19.0 release",
            "description": "",
            "creator": {
                "login": "rgommers",
                "id": 98330,
                "node_id": "MDQ6VXNlcjk4MzMw",
                "avatar_url": "https://avatars.githubusercontent.com/u/98330?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rgommers",
                "html_url": "https://github.com/rgommers",
                "followers_url": "https://api.github.com/users/rgommers/followers",
                "following_url": "https://api.github.com/users/rgommers/following{/other_user}",
                "gists_url": "https://api.github.com/users/rgommers/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rgommers/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rgommers/subscriptions",
                "organizations_url": "https://api.github.com/users/rgommers/orgs",
                "repos_url": "https://api.github.com/users/rgommers/repos",
                "events_url": "https://api.github.com/users/rgommers/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rgommers/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 89,
            "state": "closed",
            "created_at": "2019-10-19T11:07:38Z",
            "updated_at": "2020-07-08T16:29:57Z",
            "due_on": null,
            "closed_at": "2020-07-08T16:29:57Z"
        },
        "comments": 4,
        "created_at": "2020-03-22T18:45:44Z",
        "updated_at": "2020-03-24T13:30:20Z",
        "closed_at": "2020-03-24T13:30:20Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/15802",
            "html_url": "https://github.com/numpy/numpy/pull/15802",
            "diff_url": "https://github.com/numpy/numpy/pull/15802.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/15802.patch"
        },
        "body": "Before this change, the following code worked:\r\n\r\n```python\r\n>>> some_0d = np.array(1)\r\n>>> np.insert(some_0d, \"some nonsense\", 10, axis=0)\r\narray(10)\r\n>>> np.insert(some_0d, \"some nonsense\", 42, axis=\"some nonsense\")\r\narray(42)\r\n```\r\n\r\nNow these raise AxisError and TypeError, respectively.\r\n\r\n`delete` is exactly the same.\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/16992",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/16992/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/16992/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/16992/events",
        "html_url": "https://github.com/numpy/numpy/pull/16992",
        "id": 671963553,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDYyMDgzNzMz",
        "number": 16992,
        "title": "MAINT: Bump pytest from 5.4.3 to 6.0.1",
        "user": {
            "login": "dependabot-preview[bot]",
            "id": 27856297,
            "node_id": "MDM6Qm90Mjc4NTYyOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/in/2141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D",
            "html_url": "https://github.com/apps/dependabot-preview",
            "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-08-03T10:09:30Z",
        "updated_at": "2020-08-03T21:44:52Z",
        "closed_at": "2020-08-03T21:44:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/16992",
            "html_url": "https://github.com/numpy/numpy/pull/16992",
            "diff_url": "https://github.com/numpy/numpy/pull/16992.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/16992.patch"
        },
        "body": "Bumps [pytest](https://github.com/pytest-dev/pytest) from 5.4.3 to 6.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest/releases\">pytest's releases</a>.</em></p>\n<blockquote>\n<h2>6.0.1</h2>\n<h1>pytest 6.0.1 (2020-07-30)</h1>\n<h2>Bug Fixes</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7394\">#7394</a>: Passing an empty <code>help</code> value to <code>Parser.add_option</code> is now accepted instead of crashing when running <code>pytest --help</code>.\nPassing <code>None</code> raises a more informative <code>TypeError</code>.</li>\n<li><a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7558\">#7558</a>: Fix pylint <code>not-callable</code> lint on <code>pytest.mark.parametrize()</code> and the other builtin marks:\n<code>skip</code>, <code>skipif</code>, <code>xfail</code>, <code>usefixtures</code>, <code>filterwarnings</code>.</li>\n<li><a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7559\">#7559</a>: Fix regression in plugins using <code>TestReport.longreprtext</code> (such as <code>pytest-html</code>) when <code>TestReport.longrepr</code> is not a string.</li>\n<li><a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7569\">#7569</a>: Fix logging capture handler's level not reset on teardown after a call to <code>caplog.set_level()</code>.</li>\n</ul>\n<h2>6.0.0</h2>\n<h1>pytest 6.0.0 (2020-07-28)</h1>\n<p>(<strong>Please see the full set of changes for this release also in the 6.0.0rc1 notes below</strong>)</p>\n<h2>Breaking Changes</h2>\n<ul>\n<li>\n<p><a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/5584\">#5584</a>: <strong>PytestDeprecationWarning are now errors by default.</strong></p>\n<p>Following our plan to remove deprecated features with as little disruption as\npossible, all warnings of type <code>PytestDeprecationWarning</code> now generate errors\ninstead of warning messages.</p>\n<p><strong>The affected features will be effectively removed in pytest 6.1</strong>, so please consult the\n<a href=\"https://docs.pytest.org/en/latest/deprecations.html\">Deprecations and Removals</a>\nsection in the docs for directions on how to update existing code.</p>\n<p>In the pytest <code>6.0.X</code> series, it is possible to change the errors back into warnings as a\nstopgap measure by adding this to your <code>pytest.ini</code> file:</p>\n<pre lang=\"{.sourceCode\" data-meta=\".ini}\"><code>[pytest]\nfilterwarnings =\n    ignore::pytest.PytestDeprecationWarning\n</code></pre>\n<p>But this will stop working when pytest <code>6.1</code> is released.</p>\n<p><strong>If you have concerns</strong> about the removal of a specific feature, please add a\ncomment to <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/5584\">#5584</a>.</p>\n</li>\n<li>\n<p><a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7472\">#7472</a>: The <code>exec_()</code> and <code>is_true()</code> methods of <code>_pytest._code.Frame</code> have been removed.</p>\n</li>\n</ul>\n<p>Features</p>\n<!-- raw HTML omitted -->\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst\">pytest's changelog</a>.</em></p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/92af2e22d276d6f9b6aca4435ec19af81ffaea49\"><code>92af2e2</code></a> Prepare release version 6.0.1</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/0307213254ca29b55fb6ddb6ba20c4687713e785\"><code>0307213</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7582\">#7582</a> from bluetech/backport-7581</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/df7b26704db18a75188d7bb6630b549817f529da\"><code>df7b267</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7581\">#7581</a> from bluetech/logging-setlevel-handler-restore</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/15167808293254d415eefaf57be330c30e6db322\"><code>1516780</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7578\">#7578</a> from nicoddemus/backport-7555</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/b945b39b0bca9bc165e01e7d8cc6ae5963b386fc\"><code>b945b39</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7577\">#7577</a> from nicoddemus/backport-7427</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/2d5b8a85c2a5e755b304dfff7552ab9b494eb5fd\"><code>2d5b8a8</code></a> Warn about --basetemp removing the entire directory (<a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7555\">#7555</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/8963644da3c960591393c64937a4383d5c6d0caf\"><code>8963644</code></a> Fix --help crash on add_ini(.., help='') and improve message on help=None (<a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7\">#7</a>...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/e8761576cde52e7ccc73bca938ec734e8222f907\"><code>e876157</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7574\">#7574</a> from nicoddemus/backport-7561</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/3d2c114883b57a678a4e89dfc5780dc05406a359\"><code>3d2c114</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7573\">#7573</a> from nicoddemus/backport-7571</li>\n<li><a href=\"https://github.com/pytest-dev/pytest/commit/fe252848c56e081fc7eb1b98cd60e33ee33b7dd7\"><code>fe25284</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pytest-dev/pytest/issues/7561\">#7561</a> from nicoddemus/longreprtext-7559</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest/compare/5.4.3...6.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=pytest&package-manager=pip&previous-version=5.4.3&new-version=6.0.1)](https://dependabot.com/compatibility-score/?dependency-name=pytest&package-manager=pip&previous-version=5.4.3&new-version=6.0.1)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\n\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\n- Update frequency\n- Out-of-range updates (receive only lockfile updates, if desired)\n- Security updates (receive only security updates, if desired)\n\n\n\n</details>",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/15164",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/15164/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/15164/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/15164/events",
        "html_url": "https://github.com/numpy/numpy/pull/15164",
        "id": 542128649,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzU2NjM0ODYx",
        "number": 15164,
        "title": "BUG: searchsorted: passing the keys as a keyword argument",
        "user": {
            "login": "keewis",
            "id": 14808389,
            "node_id": "MDQ6VXNlcjE0ODA4Mzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14808389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keewis",
            "html_url": "https://github.com/keewis",
            "followers_url": "https://api.github.com/users/keewis/followers",
            "following_url": "https://api.github.com/users/keewis/following{/other_user}",
            "gists_url": "https://api.github.com/users/keewis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keewis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keewis/subscriptions",
            "organizations_url": "https://api.github.com/users/keewis/orgs",
            "repos_url": "https://api.github.com/users/keewis/repos",
            "events_url": "https://api.github.com/users/keewis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keewis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/76",
            "html_url": "https://github.com/numpy/numpy/milestone/76",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/76/labels",
            "id": 4766122,
            "node_id": "MDk6TWlsZXN0b25lNDc2NjEyMg==",
            "number": 76,
            "title": "1.19.0 release",
            "description": "",
            "creator": {
                "login": "rgommers",
                "id": 98330,
                "node_id": "MDQ6VXNlcjk4MzMw",
                "avatar_url": "https://avatars.githubusercontent.com/u/98330?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rgommers",
                "html_url": "https://github.com/rgommers",
                "followers_url": "https://api.github.com/users/rgommers/followers",
                "following_url": "https://api.github.com/users/rgommers/following{/other_user}",
                "gists_url": "https://api.github.com/users/rgommers/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rgommers/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rgommers/subscriptions",
                "organizations_url": "https://api.github.com/users/rgommers/orgs",
                "repos_url": "https://api.github.com/users/rgommers/repos",
                "events_url": "https://api.github.com/users/rgommers/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rgommers/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 89,
            "state": "closed",
            "created_at": "2019-10-19T11:07:38Z",
            "updated_at": "2020-07-08T16:29:57Z",
            "due_on": null,
            "closed_at": "2020-07-08T16:29:57Z"
        },
        "comments": 2,
        "created_at": "2019-12-24T13:24:55Z",
        "updated_at": "2020-01-06T12:05:13Z",
        "closed_at": "2020-01-06T07:47:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/15164",
            "html_url": "https://github.com/numpy/numpy/pull/15164",
            "diff_url": "https://github.com/numpy/numpy/pull/15164.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/15164.patch"
        },
        "body": "```python\r\nimport numpy as np\r\na = np.arange(5)\r\n```\r\n\r\nThe docstring of `ndarray.searchsorted` claims it has a signature of\r\n```python\r\na.searchsorted(v, side='left', sorter=None)\r\n```\r\nHowever, trying to pass `v` as a keyword argument (`a.searchsorted(v=3)`) fails with a `TypeError`. The docstring also claims that `np.searchsorted` works the same as `ndarray.searchsorted` but `np.searchsorted(a, v=3)` works as expected.\r\n\r\nThis changes the name of the parameter from `keys` to `v`.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/14302",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/14302/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/14302/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/14302/events",
        "html_url": "https://github.com/numpy/numpy/pull/14302",
        "id": 482506885,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzA4NzY2MDc3",
        "number": 14302,
        "title": "BUG: Fix formatting error in exception message",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 249193408,
                "node_id": "MDU6TGFiZWwyNDkxOTM0MDg=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/08%20-%20Backport",
                "name": "08 - Backport",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917445,
                "node_id": "MDU6TGFiZWwxNjkxNzQ0NQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.random",
                "name": "component: numpy.random",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-19T20:18:53Z",
        "updated_at": "2019-08-20T13:49:14Z",
        "closed_at": "2019-08-20T13:49:10Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/14302",
            "html_url": "https://github.com/numpy/numpy/pull/14302",
            "diff_url": "https://github.com/numpy/numpy/pull/14302.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/14302.patch"
        },
        "body": "Backport of #14270. \r\n\r\nThis fixes a simple formatting error in an exception message in `random/common.pyx`. The message is supposed to contain the expected vs. the actually received dtype, but instead contained two times the expected dtype. This would lead to confusing error messages such as `Supplied output array has the wrong type. Expected <class 'numpy.float64'>, got <class 'numpy.float64'>`.\r\n\r\nExample code to enforce the error message:\r\n```python\r\nimport numpy as np\r\narr = np.zeros((1,), dtype=\"float32\")\r\ngen = np.random.Generator(np.random.SFC64(0))\r\ngen.random(size=(1,), dtype=\"float64\", out=arr)\r\n```\r\nOutput after the fix:\r\n```\r\nTypeError: Supplied output array has the wrong type. Expected <class 'numpy.float64'>, got float32\r\n```\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/14042",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/14042/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/14042/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/14042/events",
        "html_url": "https://github.com/numpy/numpy/pull/14042",
        "id": 469322714,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk4NTc3NTY4",
        "number": 14042,
        "title": "BUG: np.array cleared errors occured in PyMemoryView_FromObject",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 249193408,
                "node_id": "MDU6TGFiZWwyNDkxOTM0MDg=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/08%20-%20Backport",
                "name": "08 - Backport",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/71",
            "html_url": "https://github.com/numpy/numpy/milestone/71",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/71/labels",
            "id": 4352415,
            "node_id": "MDk6TWlsZXN0b25lNDM1MjQxNQ==",
            "number": 71,
            "title": "1.16.5 release",
            "description": "",
            "creator": {
                "login": "charris",
                "id": 77272,
                "node_id": "MDQ6VXNlcjc3Mjcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/charris",
                "html_url": "https://github.com/charris",
                "followers_url": "https://api.github.com/users/charris/followers",
                "following_url": "https://api.github.com/users/charris/following{/other_user}",
                "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
                "organizations_url": "https://api.github.com/users/charris/orgs",
                "repos_url": "https://api.github.com/users/charris/repos",
                "events_url": "https://api.github.com/users/charris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/charris/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 28,
            "state": "closed",
            "created_at": "2019-05-27T15:52:24Z",
            "updated_at": "2019-09-04T23:51:55Z",
            "due_on": null,
            "closed_at": "2019-09-04T23:51:55Z"
        },
        "comments": 0,
        "created_at": "2019-07-17T16:31:26Z",
        "updated_at": "2019-07-17T17:39:57Z",
        "closed_at": "2019-07-17T17:39:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/14042",
            "html_url": "https://github.com/numpy/numpy/pull/14042",
            "diff_url": "https://github.com/numpy/numpy/pull/14042.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/14042.patch"
        },
        "body": "Backport of #13507 .\r\n\r\nThis commit changes PyMemoryView_FromObject call sites to only\r\nclear BufferError and TypeError. Any other error will be raised\r\nto the caller of np.array.\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/14004",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/14004/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/14004/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/14004/events",
        "html_url": "https://github.com/numpy/numpy/pull/14004",
        "id": 467894924,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk3NDM1MTMx",
        "number": 14004,
        "title": "ENH: Chain exception for typed item assignment",
        "user": {
            "login": "seberg",
            "id": 61977,
            "node_id": "MDQ6VXNlcjYxOTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/61977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seberg",
            "html_url": "https://github.com/seberg",
            "followers_url": "https://api.github.com/users/seberg/followers",
            "following_url": "https://api.github.com/users/seberg/following{/other_user}",
            "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
            "organizations_url": "https://api.github.com/users/seberg/orgs",
            "repos_url": "https://api.github.com/users/seberg/repos",
            "events_url": "https://api.github.com/users/seberg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seberg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359239,
                "node_id": "MDU6TGFiZWw2MzU5MjM5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement",
                "name": "01 - Enhancement",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-07-14T23:09:46Z",
        "updated_at": "2019-07-15T13:03:27Z",
        "closed_at": "2019-07-15T12:54:09Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/14004",
            "html_url": "https://github.com/numpy/numpy/pull/14004",
            "diff_url": "https://github.com/numpy/numpy/pull/14004.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/14004.patch"
        },
        "body": "This was discussed in gh-14000, and slightly improves the situation\r\nat least maybe to the extend of understanding why it happens when\r\nlooking more closely.\r\n\r\n---\r\n\r\nThe new output is:\r\n```python\r\nIn [1]: class A():\r\n   ...:     def __len__(self):\r\n   ...:         raise ValueError(\"asdf\")\r\n   ...:     def __getitem__(self, i):\r\n   ...:         return i\r\n   ...:     \r\n\r\nIn [2]: np.array(A(), np.float64)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nTypeError: float() argument must be a string or a number, not 'A'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-2-1a34cbb915be> in <module>()\r\n----> 1 np.array(A(), np.float64)\r\n\r\nValueError: setting an array element with a sequence.\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/14270",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/14270/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/14270/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/14270/events",
        "html_url": "https://github.com/numpy/numpy/pull/14270",
        "id": 480329753,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzA3MDQ3MjQw",
        "number": 14270,
        "title": "BUG: Fix formatting error in exception message",
        "user": {
            "login": "aleju",
            "id": 11698516,
            "node_id": "MDQ6VXNlcjExNjk4NTE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11698516?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aleju",
            "html_url": "https://github.com/aleju",
            "followers_url": "https://api.github.com/users/aleju/followers",
            "following_url": "https://api.github.com/users/aleju/following{/other_user}",
            "gists_url": "https://api.github.com/users/aleju/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aleju/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aleju/subscriptions",
            "organizations_url": "https://api.github.com/users/aleju/orgs",
            "repos_url": "https://api.github.com/users/aleju/repos",
            "events_url": "https://api.github.com/users/aleju/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aleju/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917445,
                "node_id": "MDU6TGFiZWwxNjkxNzQ0NQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.random",
                "name": "component: numpy.random",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-08-13T19:33:36Z",
        "updated_at": "2019-08-19T20:19:25Z",
        "closed_at": "2019-08-15T00:40:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/14270",
            "html_url": "https://github.com/numpy/numpy/pull/14270",
            "diff_url": "https://github.com/numpy/numpy/pull/14270.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/14270.patch"
        },
        "body": "This fixes a simple formatting error in an exception message in `random/common.pyx`. The message is supposed to contain the expected vs. the actually received dtype, but instead contained two times the expected dtype. This would lead to confusing error messages such as `Supplied output array has the wrong type. Expected <class 'numpy.float64'>, got <class 'numpy.float64'>`.\r\n\r\nExample code to enforce the error message:\r\n```python\r\nimport numpy as np\r\narr = np.zeros((1,), dtype=\"float32\")\r\ngen = np.random.Generator(np.random.SFC64(0))\r\ngen.random(size=(1,), dtype=\"float64\", out=arr)\r\n```\r\nOutput after the fix:\r\n```\r\nTypeError: Supplied output array has the wrong type. Expected <class 'numpy.float64'>, got float32\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13913",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13913/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13913/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13913/events",
        "html_url": "https://github.com/numpy/numpy/pull/13913",
        "id": 464350792,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk0NjQ5ODM3",
        "number": 13913,
        "title": "ENH: improve error message for ragged-array creation failure",
        "user": {
            "login": "mattip",
            "id": 823911,
            "node_id": "MDQ6VXNlcjgyMzkxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattip",
            "html_url": "https://github.com/mattip",
            "followers_url": "https://api.github.com/users/mattip/followers",
            "following_url": "https://api.github.com/users/mattip/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
            "organizations_url": "https://api.github.com/users/mattip/orgs",
            "repos_url": "https://api.github.com/users/mattip/repos",
            "events_url": "https://api.github.com/users/mattip/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattip/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359239,
                "node_id": "MDU6TGFiZWw2MzU5MjM5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement",
                "name": "01 - Enhancement",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-07-04T17:11:13Z",
        "updated_at": "2019-08-08T17:18:51Z",
        "closed_at": "2019-07-15T20:14:30Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13913",
            "html_url": "https://github.com/numpy/numpy/pull/13913",
            "diff_url": "https://github.com/numpy/numpy/pull/13913.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13913.patch"
        },
        "body": "Fixes #5303, #6584 for the case where `np.array` gets a ragged-sequence input and a dtype is specified. This does not try to fix the case for where no dtype is specified. \r\n\r\nPreviously `np.array([[1], [2, 3]], dtype=int)` would emit a \"setting an array element with a sequence\" message, now changed to \"cannot create an array from unequal-length (ragged) sequences\". This also is the error for structured dtypes where previously the error was \"TypeError: expected a readable buffer object\"\r\n\r\nTest added.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13507",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13507/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13507/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13507/events",
        "html_url": "https://github.com/numpy/numpy/pull/13507",
        "id": 441711004,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc2OTc4NzYz",
        "number": 13507,
        "title": "BUG: np.array cleared errors occured in PyMemoryView_FromObject",
        "user": {
            "login": "superbobry",
            "id": 185856,
            "node_id": "MDQ6VXNlcjE4NTg1Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/superbobry",
            "html_url": "https://github.com/superbobry",
            "followers_url": "https://api.github.com/users/superbobry/followers",
            "following_url": "https://api.github.com/users/superbobry/following{/other_user}",
            "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions",
            "organizations_url": "https://api.github.com/users/superbobry/orgs",
            "repos_url": "https://api.github.com/users/superbobry/repos",
            "events_url": "https://api.github.com/users/superbobry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/superbobry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2019-05-08T12:31:22Z",
        "updated_at": "2019-07-17T16:32:55Z",
        "closed_at": "2019-05-28T09:15:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13507",
            "html_url": "https://github.com/numpy/numpy/pull/13507",
            "diff_url": "https://github.com/numpy/numpy/pull/13507.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13507.patch"
        },
        "body": "This commit changes PyMemoryView_FromObject call sites to only\r\nclear BufferError and TypeError. Any other error will be raised\r\nto the caller of np.array.\r\n\r\n---\r\n\r\nI'd be happy to add a test for this, but it requires writing an extension class \r\nwith a custom buffer interface implementation. Should I do that?\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13560",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13560/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13560/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13560/events",
        "html_url": "https://github.com/numpy/numpy/pull/13560",
        "id": 444154767,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc4ODc1NjAx",
        "number": 13560,
        "title": "BUG: Add TypeError to accepted exceptions in crackfortran.",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 249193408,
                "node_id": "MDU6TGFiZWwyNDkxOTM0MDg=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/08%20-%20Backport",
                "name": "08 - Backport",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917452,
                "node_id": "MDU6TGFiZWwxNjkxNzQ1Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.f2py",
                "name": "component: numpy.f2py",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-14T22:35:07Z",
        "updated_at": "2019-05-15T01:44:43Z",
        "closed_at": "2019-05-15T01:44:40Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13560",
            "html_url": "https://github.com/numpy/numpy/pull/13560",
            "diff_url": "https://github.com/numpy/numpy/pull/13560.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13560.patch"
        },
        "body": "Backport of #13435.\r\n\r\nFixes #13429\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13648",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13648/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13648/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13648/events",
        "html_url": "https://github.com/numpy/numpy/pull/13648",
        "id": 449028854,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjgyNjQxNTA1",
        "number": 13648,
        "title": "BUG: ensure that casting to/from structured is properly checked.",
        "user": {
            "login": "mhvk",
            "id": 2789820,
            "node_id": "MDQ6VXNlcjI3ODk4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2789820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mhvk",
            "html_url": "https://github.com/mhvk",
            "followers_url": "https://api.github.com/users/mhvk/followers",
            "following_url": "https://api.github.com/users/mhvk/following{/other_user}",
            "gists_url": "https://api.github.com/users/mhvk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mhvk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mhvk/subscriptions",
            "organizations_url": "https://api.github.com/users/mhvk/orgs",
            "repos_url": "https://api.github.com/users/mhvk/repos",
            "events_url": "https://api.github.com/users/mhvk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mhvk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 987701410,
                "node_id": "MDU6TGFiZWw5ODc3MDE0MTA=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.dtype",
                "name": "component: numpy.dtype",
                "color": "009800",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/71",
            "html_url": "https://github.com/numpy/numpy/milestone/71",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/71/labels",
            "id": 4352415,
            "node_id": "MDk6TWlsZXN0b25lNDM1MjQxNQ==",
            "number": 71,
            "title": "1.16.5 release",
            "description": "",
            "creator": {
                "login": "charris",
                "id": 77272,
                "node_id": "MDQ6VXNlcjc3Mjcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/charris",
                "html_url": "https://github.com/charris",
                "followers_url": "https://api.github.com/users/charris/followers",
                "following_url": "https://api.github.com/users/charris/following{/other_user}",
                "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
                "organizations_url": "https://api.github.com/users/charris/orgs",
                "repos_url": "https://api.github.com/users/charris/repos",
                "events_url": "https://api.github.com/users/charris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/charris/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 28,
            "state": "closed",
            "created_at": "2019-05-27T15:52:24Z",
            "updated_at": "2019-09-04T23:51:55Z",
            "due_on": null,
            "closed_at": "2019-09-04T23:51:55Z"
        },
        "comments": 13,
        "created_at": "2019-05-28T01:44:43Z",
        "updated_at": "2019-07-17T16:58:04Z",
        "closed_at": "2019-06-12T20:12:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13648",
            "html_url": "https://github.com/numpy/numpy/pull/13648",
            "diff_url": "https://github.com/numpy/numpy/pull/13648.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13648.patch"
        },
        "body": "As noted in #11114, currently the following clearly wrong things happen:\r\n```\r\nnp.can_cast(1., 'i2,i2', casting='safe')\r\n# True\r\n# while\r\nnp.can_cast(1., 'i2', casting='safe')\r\n# False\r\nnp.array(1000.).astype('i1,i1', casting='safe')\r\n# array((-24, -24), dtype=[('f0', 'i1'), ('f1', 'i1')])\r\n# while\r\nnp.array(1000.).astype('i1', casting='safe')\r\n# TypeError: Cannot cast array from dtype('float64') to dtype('int8') according to the rule 'safe'\r\n```\r\nThe present PR fixes it, and has some elementary tests. In particular, it allows casting from simple to structured (EDIT) in unsafe mode, and from structured to simple only in unsafe mode *and* when the structured dtype has only a single field.\r\n\r\nfixes #11114\r\n\r\np.s. Replaces #13646, which confused the general void type with structured.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13529",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13529/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13529/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13529/events",
        "html_url": "https://github.com/numpy/numpy/pull/13529",
        "id": 443028406,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc4MDAzOTU3",
        "number": 13529,
        "title": "MAINT: Use exec() instead array_function_dispatch to improve tracebacks",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-11T19:26:41Z",
        "updated_at": "2019-05-15T01:58:20Z",
        "closed_at": "2019-05-13T14:39:32Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13529",
            "html_url": "https://github.com/numpy/numpy/pull/13529",
            "diff_url": "https://github.com/numpy/numpy/pull/13529.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13529.patch"
        },
        "body": "xref GH-12028\r\n\r\nCurrent behavior:\r\n\r\n```\r\n>>> np.dot(None, None)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/shoyer/dev/numpy/numpy/core/overrides.py\", line 175, in public_api\r\n    implementation, public_api, relevant_args, args, kwargs)\r\nTypeError: unsupported operand type(s) for *: 'NoneType' and 'NoneType'\r\n\r\n>>> np.stack([], invalid=True)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/shoyer/dev/numpy/numpy/core/overrides.py\", line 148, in public_api\r\n    relevant_args = dispatcher(*args, **kwargs)\r\nTypeError: _stack_dispatcher() got an unexpected keyword argument 'invalid'\r\n```\r\n\r\nWith this change:\r\n\r\n```\r\n>>> np.dot(None, None)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<__array_function__ internals>\", line 6, in dot\r\nTypeError: unsupported operand type(s) for *: 'NoneType' and 'NoneType'\r\n\r\n>>> np.stack([], invalid=True)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<__array_function__ internals>\", line 4, in stack\r\nTypeError: _stack_dispatcher() got an unexpected keyword argument 'invalid'\r\n```\r\n\r\nThis fixes an issue pointed out by @mattip",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13298",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13298/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13298/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13298/events",
        "html_url": "https://github.com/numpy/numpy/pull/13298",
        "id": 431557718,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjY5MjA2MTc4",
        "number": 13298,
        "title": "ENH: Added clearer exception for np.diff on 0-dimensional ndarray",
        "user": {
            "login": "navneet-nmk",
            "id": 6313369,
            "node_id": "MDQ6VXNlcjYzMTMzNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6313369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/navneet-nmk",
            "html_url": "https://github.com/navneet-nmk",
            "followers_url": "https://api.github.com/users/navneet-nmk/followers",
            "following_url": "https://api.github.com/users/navneet-nmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/navneet-nmk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/navneet-nmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/navneet-nmk/subscriptions",
            "organizations_url": "https://api.github.com/users/navneet-nmk/orgs",
            "repos_url": "https://api.github.com/users/navneet-nmk/repos",
            "events_url": "https://api.github.com/users/navneet-nmk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/navneet-nmk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359239,
                "node_id": "MDU6TGFiZWw2MzU5MjM5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement",
                "name": "01 - Enhancement",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-04-10T15:07:28Z",
        "updated_at": "2019-05-03T05:36:29Z",
        "closed_at": "2019-05-03T05:36:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13298",
            "html_url": "https://github.com/numpy/numpy/pull/13298",
            "diff_url": "https://github.com/numpy/numpy/pull/13298.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13298.patch"
        },
        "body": "<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html\r\n-->\r\n\r\nReferencing #13296 \r\n\r\nAdded TypeError message in np.diff for handling 0-dimensional ndarrays.\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13518",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13518/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13518/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13518/events",
        "html_url": "https://github.com/numpy/numpy/pull/13518",
        "id": 442431068,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc3NTQ2OTc3",
        "number": 13518,
        "title": "MAINT: implement assert_array_compare without converting array to python list",
        "user": {
            "login": "hmaarrfk",
            "id": 90008,
            "node_id": "MDQ6VXNlcjkwMDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/90008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hmaarrfk",
            "html_url": "https://github.com/hmaarrfk",
            "followers_url": "https://api.github.com/users/hmaarrfk/followers",
            "following_url": "https://api.github.com/users/hmaarrfk/following{/other_user}",
            "gists_url": "https://api.github.com/users/hmaarrfk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hmaarrfk/subscriptions",
            "organizations_url": "https://api.github.com/users/hmaarrfk/orgs",
            "repos_url": "https://api.github.com/users/hmaarrfk/repos",
            "events_url": "https://api.github.com/users/hmaarrfk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hmaarrfk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917658,
                "node_id": "MDU6TGFiZWwxNjkxNzY1OA==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.testing",
                "name": "component: numpy.testing",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-09T20:59:23Z",
        "updated_at": "2019-05-13T02:18:50Z",
        "closed_at": "2019-05-13T02:09:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13518",
            "html_url": "https://github.com/numpy/numpy/pull/13518",
            "diff_url": "https://github.com/numpy/numpy/pull/13518.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13518.patch"
        },
        "body": "I'm testing equality between large arrays (several GB).\r\n\r\nThe cast to a list in test function really blows up the computation due to the fact that we are casting every entry in a boolean array into a python object.\r\n\r\nThe following achieves the same thing, without the python list cast.\r\n\r\nFYI: I tried to use `count_nonzero` but that gave the error in the detail below\r\n\r\n<details>\r\n\r\n```\r\n_______________________ TestEqual.test_subclass_that_does_not_implement_npall _______________________\r\n\r\nself = <numpy.testing.tests.test_utils.TestEqual object at 0x7fed7fc8c128>\r\n\r\n    def test_subclass_that_does_not_implement_npall(self):\r\n        class MyArray(np.ndarray):\r\n            def __array_function__(self, *args, **kwargs):\r\n                return NotImplemented\r\n    \r\n        a = np.array([1., 2.]).view(MyArray)\r\n        b = np.array([2., 3.]).view(MyArray)\r\n        with assert_raises(TypeError):\r\n            np.all(a)\r\n        self._test_equal(a, a)\r\n>       self._test_not_equal(a, b)\r\n\r\nMyArray    = <class 'numpy.testing.tests.test_utils.TestArrayEqual.test_subclass_that_does_not_implement_npall.<locals>.MyArray'>\r\na          = MyArray([1., 2.])\r\nb          = MyArray([2., 3.])\r\nself       = <numpy.testing.tests.test_utils.TestEqual object at 0x7fed7fc8c128>\r\n\r\nnumpy/testing/tests/test_utils.py:192: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nnumpy/testing/tests/test_utils.py:29: in _test_not_equal\r\n    self._assert_func(a, b)\r\nnumpy/testing/_private/utils.py:351: in assert_equal\r\n    return assert_array_equal(actual, desired, err_msg, verbose)\r\nnumpy/testing/_private/utils.py:901: in assert_array_equal\r\n    verbose=verbose, header='Arrays are not equal')\r\nnumpy/testing/_private/utils.py:803: in assert_array_compare\r\n    mismatch = 100.0 * count_nonzero(reduced) / ox.size\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    @functools.wraps(implementation)\r\n    def public_api(*args, **kwargs):\r\n        relevant_args = dispatcher(*args, **kwargs)\r\n        return implement_array_function(\r\n>           implementation, public_api, relevant_args, args, kwargs)\r\nE       TypeError: no implementation found for 'numpy.count_nonzero' on types that implement __array_function__: [<class 'numpy.testing.tests.test_utils.TestArrayEqual.test_subclass_that_does_not_implement_npall.<locals>.MyArray'>]\r\n\r\n\r\nnumpy/core/overrides.py:150: TypeError\r\n============================= 2 failed, 8311 deselected in 3.77 seconds =============================\r\n```\r\n</details>\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/11870",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/11870/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/11870/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/11870/events",
        "html_url": "https://github.com/numpy/numpy/pull/11870",
        "id": 356543585,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyNzc4MTgy",
        "number": 11870,
        "title": "MAINT: dtype(unicode) should raise TypeError on failure",
        "user": {
            "login": "mattip",
            "id": 823911,
            "node_id": "MDQ6VXNlcjgyMzkxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattip",
            "html_url": "https://github.com/mattip",
            "followers_url": "https://api.github.com/users/mattip/followers",
            "following_url": "https://api.github.com/users/mattip/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
            "organizations_url": "https://api.github.com/users/mattip/orgs",
            "repos_url": "https://api.github.com/users/mattip/repos",
            "events_url": "https://api.github.com/users/mattip/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattip/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-09-03T15:21:37Z",
        "updated_at": "2019-03-04T13:17:08Z",
        "closed_at": "2018-09-03T19:12:13Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/11870",
            "html_url": "https://github.com/numpy/numpy/pull/11870",
            "diff_url": "https://github.com/numpy/numpy/pull/11870.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/11870.patch"
        },
        "body": "Fixes #11860, where dtype(u'Fl\u00fcgel') would raise a `UnicodeEncodeError`, not a `TypeError`.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13328",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13328/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13328/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13328/events",
        "html_url": "https://github.com/numpy/numpy/pull/13328",
        "id": 433021536,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjcwMzIwMTcz",
        "number": 13328,
        "title": "MAINT: Tidy up error message for accumulate and reduceat",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 959099844,
                "node_id": "MDU6TGFiZWw5NTkwOTk4NDQ=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.ufunc",
                "name": "component: numpy.ufunc",
                "color": "009800",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-04-14T19:19:56Z",
        "updated_at": "2019-04-14T21:09:47Z",
        "closed_at": "2019-04-14T21:09:28Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13328",
            "html_url": "https://github.com/numpy/numpy/pull/13328",
            "diff_url": "https://github.com/numpy/numpy/pull/13328.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13328.patch"
        },
        "body": "This makes `np.add.accumulate(0, axis=())` match `np.add.accumulate(0)` - both now give `TypeError: cannot accumulate on a scalar`.\r\n\r\nThis also fixes an LGTM complaing about `naxes == 1` being always false due to the line before it that sets `naxes = 0`.\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13126",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13126/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13126/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13126/events",
        "html_url": "https://github.com/numpy/numpy/pull/13126",
        "id": 421344968,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjYxNDE1ODU5",
        "number": 13126,
        "title": "DEP: polynomial: Be stricter about integral arguments",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 81498520,
                "node_id": "MDU6TGFiZWw4MTQ5ODUyMA==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/07%20-%20Deprecation",
                "name": "07 - Deprecation",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917596,
                "node_id": "MDU6TGFiZWwxNjkxNzU5Ng==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.polynomial",
                "name": "component: numpy.polynomial",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-03-15T04:07:26Z",
        "updated_at": "2019-03-16T19:19:59Z",
        "closed_at": "2019-03-16T19:19:59Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13126",
            "html_url": "https://github.com/numpy/numpy/pull/13126",
            "diff_url": "https://github.com/numpy/numpy/pull/13126.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13126.patch"
        },
        "body": "This changes the behavior for:\r\n* The `deg`  and `axis` arguments of `<type>der`\r\n* The `deg`  and `axis` arguments of `<type>int`\r\n* The `deg`  argument of `<type>gauss`\r\n* The `deg`  argument of `<type>vander2d`\r\n* The `deg`  argument of `<type>vander3d`\r\n\r\nThe old behavior was:\r\n* Raise `ValueError` if the argument is a float, but not an integral one\r\n* Allow a float like `1.0` to mean `1`.\r\n\r\nThis is inconsistent with most other integer-accepting APIs in numpy, which require these to be actual integers, and raise TypeError when they are not.\r\n\r\nThe new behavior is:\r\n* Raise `TypeError` if the argument is a float, but not an integral one\r\n* Emit a `DeprecationWarning` if a float like `1.0` is passed, continuing to allow it its old meaning.\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13077",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13077/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13077/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13077/events",
        "html_url": "https://github.com/numpy/numpy/pull/13077",
        "id": 416449180,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjU3Njk2ODMx",
        "number": 13077,
        "title": "BUG: Fix errors in string formatting while producing an error",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-03-02T22:29:33Z",
        "updated_at": "2019-03-16T08:03:12Z",
        "closed_at": "2019-03-03T16:39:37Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13077",
            "html_url": "https://github.com/numpy/numpy/pull/13077",
            "diff_url": "https://github.com/numpy/numpy/pull/13077.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13077.patch"
        },
        "body": "`\"Invalid version %r\" % (1, 2)` would fail with `TypeError: not all arguments converted during string formatting`\r\n\r\nThe `Header is not a dictionary` error had a similar problem.\r\n\r\nFixed by changing this entire function to use `.format` in place of `%`, which does not have this gotcha.\r\n\r\nFound using LGTM.com\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13082",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13082/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13082/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13082/events",
        "html_url": "https://github.com/numpy/numpy/pull/13082",
        "id": 416580965,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjU3Nzc4MDA0",
        "number": 13082,
        "title": "BUG: Fix errors in string formatting while producing an error",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 249193408,
                "node_id": "MDU6TGFiZWwyNDkxOTM0MDg=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/08%20-%20Backport",
                "name": "08 - Backport",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-03-03T23:36:31Z",
        "updated_at": "2019-03-04T00:38:22Z",
        "closed_at": "2019-03-04T00:38:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13082",
            "html_url": "https://github.com/numpy/numpy/pull/13082",
            "diff_url": "https://github.com/numpy/numpy/pull/13082.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13082.patch"
        },
        "body": "Backport of #13077.\r\n\r\n`\"Invalid version %r\" % (1, 2)` would fail with `TypeError: not all arguments converted during string formatting`\r\n\r\nThe `Header is not a dictionary` error had a similar problem.\r\n\r\nFixed by changing this entire function to use `.format` in place of `%`, which does not have this gotcha.\r\n\r\nFound using LGTM.com\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/12593",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/12593/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/12593/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/12593/events",
        "html_url": "https://github.com/numpy/numpy/pull/12593",
        "id": 392491122,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5NzUwNDE4",
        "number": 12593,
        "title": "ENH,WIP: Use richer exception types for ufunc type resolution errors",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359239,
                "node_id": "MDU6TGFiZWw2MzU5MjM5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement",
                "name": "01 - Enhancement",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 959099844,
                "node_id": "MDU6TGFiZWw5NTkwOTk4NDQ=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.ufunc",
                "name": "component: numpy.ufunc",
                "color": "009800",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2018-12-19T08:32:50Z",
        "updated_at": "2019-01-20T02:37:39Z",
        "closed_at": "2019-01-20T02:37:39Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/12593",
            "html_url": "https://github.com/numpy/numpy/pull/12593",
            "diff_url": "https://github.com/numpy/numpy/pull/12593.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/12593.patch"
        },
        "body": "This might make it easier for users to implement `__array_ufunc__` with custom casting behavior.\r\n\r\nThe motivation for this was to be able to deprecate the broken casting behavior in `np.clip`, without resorting to inspecting error strings.\r\nThis also removes the need for gh-12178\r\nBefore:\r\n```\r\n>>> np.add(1, 1, out=np.empty((), str), casting='safe')\r\nTypeError: Cannot cast ufunc add output from dtype('<U1') to dtype('int32') with casting rule 'safe'\r\n>>> np.less(1, 'a', dtype=int)\r\nTypeError: Cannot cast ufunc less input from dtype('<U1') to dtype('int32') with casting rule 'same_kind'\r\n>>> np.add(1, 'a')\r\nTypeError: ufunc 'add' did not contain a loop with signature matching types dtype('<U11') dtype('<U11') dtype('<U11')\r\n```\r\nAfter, showing types, input/output argument numbers, and `->` in the signature:\r\n```\r\n>>> np.add(1, 1, out=np.empty((), str), casting='safe')\r\nUFuncOutputCastingTypeError: Cannot cast ufunc 'add' output from dtype('<U1') to dtype('int32') with casting rule 'safe'\r\n>>> np.less(1, 'a', dtype=int)\r\nUFuncInputCastingTypeError: Cannot cast ufunc 'less' input 1 from dtype('<U1') to dtype('int32') with casting rule 'same_kind'\r\n>>> np.add(1, 'a')\r\nUFuncNoLoopTypeError: ufunc 'add' did not contain a loop with signature matching types (dtype('<U11'), dtype('<U11')) -> dtype('<U11')\r\n```\r\n\r\nNeeds some more thought about the distinction between these error types.\r\n\r\nOne option would be to pretend that all the types are `TypeError` by setting `__name__`.\r\n\r\n---\r\n\r\n[Mailing list discussion](http://numpy-discussion.10968.n7.nabble.com/Adding-more-detailed-exception-types-to-numpy-td46591.html)",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/13072",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/13072/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/13072/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/13072/events",
        "html_url": "https://github.com/numpy/numpy/pull/13072",
        "id": 416404480,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjU3NjY5NDY4",
        "number": 13072,
        "title": "BUG: Fixes to numpy.distutils.Configuration.get_version (#13056)",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 249193408,
                "node_id": "MDU6TGFiZWwyNDkxOTM0MDg=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/08%20-%20Backport",
                "name": "08 - Backport",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917063,
                "node_id": "MDU6TGFiZWwxNjkxNzA2Mw==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.distutils",
                "name": "component: numpy.distutils",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-03-02T14:51:17Z",
        "updated_at": "2019-03-02T16:36:31Z",
        "closed_at": "2019-03-02T16:36:20Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/13072",
            "html_url": "https://github.com/numpy/numpy/pull/13072",
            "diff_url": "https://github.com/numpy/numpy/pull/13072.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/13072.patch"
        },
        "body": "Backport of #13056.\r\n\r\n* BUG: Use subprocess.check_output to avoid leaking file handles\r\n\r\nThis emitted a ResourceWarning as previously written, as the streams\r\nnever got closed.\r\n\r\nThis change also detects errors in `svnversion` and `hg`, rather than\r\nignoring the error code and hoping stdout contains a revision anyway.\r\n\r\n* BUG: Fix distutils.get_version on python 3\r\n\r\nPreviously, this would throw\r\n`TypeError: cannot use a string pattern ona bytes-like object`,\r\nwhich would then be silenced and never seen.\r\n\r\nThe previous commit stopped silencing this error, so now everything is\r\nvisibly broken rather than silently broken\r\n\r\nChanging the strings to raw strings fixes the problem\r\n\r\n* BUG: Don't use `close_fds`, which fails on windows\r\n\r\nThis argument was introduced along with subprocess in\r\nf5afa7836d56640f25ff3fbd2c59b8dcf016e26f to replace `popen4`, and\r\nprobably wasn't necessary in the first place.\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/12251",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/12251/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/12251/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/12251/events",
        "html_url": "https://github.com/numpy/numpy/pull/12251",
        "id": 373047793,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjI1MDc0ODU4",
        "number": 12251,
        "title": "MAINT: improved error message when no `__array_function__` implementation found",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359239,
                "node_id": "MDU6TGFiZWw2MzU5MjM5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement",
                "name": "01 - Enhancement",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 1083903565,
                "node_id": "MDU6TGFiZWwxMDgzOTAzNTY1",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20__array_function__",
                "name": "component: __array_function__",
                "color": "009800",
                "default": false,
                "description": ""
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2018-10-23T15:00:12Z",
        "updated_at": "2018-11-10T17:54:08Z",
        "closed_at": "2018-10-25T18:04:33Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/12251",
            "html_url": "https://github.com/numpy/numpy/pull/12251",
            "diff_url": "https://github.com/numpy/numpy/pull/12251.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/12251.patch"
        },
        "body": "Fixes #12213\r\n\r\nBefore:\r\n```\r\nIn [1]: import numpy as np\r\n\r\nIn [2]: class MyArray:\r\n   ...:     def __array_function__(*args, **kwargs):\r\n   ...:         return NotImplemented\r\n   ...:\r\n\r\nIn [3]: np.sum(MyArray())\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-3-c8a80bb1d37e> in <module>()\r\n----> 1 np.sum(MyArray())\r\n\r\n~/dev/numpy/numpy/core/overrides.py in public_api(*args, **kwargs)\r\n    149             relevant_args = dispatcher(*args, **kwargs)\r\n    150             return array_function_implementation_or_override(\r\n--> 151                 implementation, public_api, relevant_args, args, kwargs)\r\n    152\r\n    153         # TODO: remove this when we drop Python 2 support (functools.wraps\r\n\r\n~/dev/numpy/numpy/core/overrides.py in array_function_implementation_or_override(implementation, public_api, relevant_args, args, kwargs)\r\n    108     raise TypeError('no implementation found for {} on types that implement '\r\n    109                     '__array_function__: {}'\r\n--> 110                     .format(public_api, list(map(type, overloaded_args))))\r\n    111\r\n    112\r\n\r\nTypeError: no implementation found for <function sum at 0x10e070bf8> on types that implement __array_function__: [<class '__main__.MyArray'>]\r\n```\r\nAfter:\r\n```\r\nIn [3]: np.sum(MyArray())\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-3-c8a80bb1d37e> in <module>()\r\n----> 1 np.sum(MyArray())\r\n\r\n~/dev/numpy/numpy/core/overrides.py in public_api(*args, **kwargs)\r\n    149             relevant_args = dispatcher(*args, **kwargs)\r\n    150             return array_function_implementation_or_override(\r\n--> 151                 implementation, public_api, relevant_args, args, kwargs)\r\n    152\r\n    153         # TODO: remove this when we drop Python 2 support (functools.wraps\r\n\r\n~/dev/numpy/numpy/core/overrides.py in array_function_implementation_or_override(implementation, public_api, relevant_args, args, kwargs)\r\n    108     raise TypeError('no implementation found for {} on types that implement '\r\n    109                     '__array_function__: {}'\r\n--> 110                     .format(public_api, list(map(type, overloaded_args))))\r\n    111\r\n    112\r\n\r\nTypeError: no implementation found for 'numpy.sum' on types that implement __array_function__: [<class '__main__.MyArray'>]\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/12470",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/12470/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/12470/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/12470/events",
        "html_url": "https://github.com/numpy/numpy/pull/12470",
        "id": 386491435,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1MjE0NTA5",
        "number": 12470,
        "title": "MAINT: remove wrapper functions from numpy.core.multiarray",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1083903565,
                "node_id": "MDU6TGFiZWwxMDgzOTAzNTY1",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20__array_function__",
                "name": "component: __array_function__",
                "color": "009800",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/58",
            "html_url": "https://github.com/numpy/numpy/milestone/58",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/58/labels",
            "id": 3353003,
            "node_id": "MDk6TWlsZXN0b25lMzM1MzAwMw==",
            "number": 58,
            "title": "1.16.0 release",
            "description": "",
            "creator": {
                "login": "charris",
                "id": 77272,
                "node_id": "MDQ6VXNlcjc3Mjcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/charris",
                "html_url": "https://github.com/charris",
                "followers_url": "https://api.github.com/users/charris/followers",
                "following_url": "https://api.github.com/users/charris/following{/other_user}",
                "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
                "organizations_url": "https://api.github.com/users/charris/orgs",
                "repos_url": "https://api.github.com/users/charris/repos",
                "events_url": "https://api.github.com/users/charris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/charris/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 128,
            "state": "closed",
            "created_at": "2018-05-16T21:13:27Z",
            "updated_at": "2019-02-08T07:04:58Z",
            "due_on": null,
            "closed_at": "2019-02-08T07:04:58Z"
        },
        "comments": 4,
        "created_at": "2018-12-01T19:51:08Z",
        "updated_at": "2018-12-02T00:11:59Z",
        "closed_at": "2018-12-02T00:11:46Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/12470",
            "html_url": "https://github.com/numpy/numpy/pull/12470",
            "diff_url": "https://github.com/numpy/numpy/pull/12470.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/12470.patch"
        },
        "body": "The original motivation for the style of these wrapper functions, introduced\r\nin gh-12175, was to preserve introspection. But it turns out NumPy's functions\r\ndefined in C don't support introspection anyways, so the extra wrapper\r\nfunctions are entirely pointless.\r\n\r\nThis version reverts the additional wrapper functions, which put default\r\narguments in two places and introduced slow-down due to the overhead of\r\nanother function call.\r\n\r\nI've retained docstrings in multiarray.py, since it's definitely more readable\r\nto keep docstrings and dispatchers together rather than leaving docstrings in\r\n_add_newdocs.py.\r\n\r\nOne bonus of this approach is that dispatcher functions have the same name\r\nas their implementations, so `np.concatenate(unknown=True)` gives an\r\nerror message mentioning \"concatenate\" rather than \"_concatenate_dispatcher\":\r\n`TypeError: concatenate() got an unexpected keyword argument 'unknown'`\r\n\r\n<!-- Please be sure you are following the instructions in the dev guidelines\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html\r\n-->\r\n\r\n<!-- We'd appreciate it if your commit message is properly formatted\r\nhttp://www.numpy.org/devdocs/dev/gitwash/development_workflow.html#writing-the-commit-message\r\n-->\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/11573",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/11573/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/11573/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/11573/events",
        "html_url": "https://github.com/numpy/numpy/pull/11573",
        "id": 341277136,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxNDcyNjkx",
        "number": 11573,
        "title": "TST: add broadcast_arrays() kwarg unit test for TypeError",
        "user": {
            "login": "tylerjereddy",
            "id": 7903078,
            "node_id": "MDQ6VXNlcjc5MDMwNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7903078?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tylerjereddy",
            "html_url": "https://github.com/tylerjereddy",
            "followers_url": "https://api.github.com/users/tylerjereddy/followers",
            "following_url": "https://api.github.com/users/tylerjereddy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tylerjereddy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tylerjereddy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tylerjereddy/subscriptions",
            "organizations_url": "https://api.github.com/users/tylerjereddy/orgs",
            "repos_url": "https://api.github.com/users/tylerjereddy/repos",
            "events_url": "https://api.github.com/users/tylerjereddy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tylerjereddy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359945,
                "node_id": "MDU6TGFiZWw2MzU5OTQ1",
                "url": "https://api.github.com/repos/numpy/numpy/labels/05%20-%20Testing",
                "name": "05 - Testing",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2018-07-14T23:02:07Z",
        "updated_at": "2018-08-21T15:19:59Z",
        "closed_at": "2018-08-21T15:19:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/11573",
            "html_url": "https://github.com/numpy/numpy/pull/11573",
            "diff_url": "https://github.com/numpy/numpy/pull/11573.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/11573.patch"
        },
        "body": "In short, local coverage tests (hopefully reported online soon from: #11567) indicated that we weren't unit testing for the proper handling of invalid kwargs for `np.broadcast_arrays()`.\r\n\r\nIn adding the unit test for this kwarg handling in this PR, I also noticed that the appropriate error **message** is not raised in Python 3 because `dict.keys()` is not a list anymore, so the test was also adjusted to verify the correct error message & the associated source code modified to ensure an indexable object in Python 3.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/12381",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/12381/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/12381/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/12381/events",
        "html_url": "https://github.com/numpy/numpy/pull/12381",
        "id": 380450834,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjMwNjQ2MDI5",
        "number": 12381,
        "title": "BUG: graceful DataSource __del__ when __init__ fails",
        "user": {
            "login": "tylerjereddy",
            "id": 7903078,
            "node_id": "MDQ6VXNlcjc5MDMwNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7903078?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tylerjereddy",
            "html_url": "https://github.com/tylerjereddy",
            "followers_url": "https://api.github.com/users/tylerjereddy/followers",
            "following_url": "https://api.github.com/users/tylerjereddy/following{/other_user}",
            "gists_url": "https://api.github.com/users/tylerjereddy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tylerjereddy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tylerjereddy/subscriptions",
            "organizations_url": "https://api.github.com/users/tylerjereddy/orgs",
            "repos_url": "https://api.github.com/users/tylerjereddy/repos",
            "events_url": "https://api.github.com/users/tylerjereddy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tylerjereddy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-11-13T22:23:14Z",
        "updated_at": "2018-11-15T14:01:45Z",
        "closed_at": "2018-11-15T14:01:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/12381",
            "html_url": "https://github.com/numpy/numpy/pull/12381",
            "diff_url": "https://github.com/numpy/numpy/pull/12381.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/12381.patch"
        },
        "body": "The [`__init__` method of DataSource](https://github.com/numpy/numpy/blob/master/numpy/lib/_datasource.py#L314) initializes instance attributes that are expected to exist during the cleanup performed by its `__del__` method.\r\n\r\nWhile this sounds sensible, if `__init__` fails for any reason and `self._istmpdest` is an attribute that doesn't exist, an `AttributeError` can be raised when trying to clean up the object with `__del__`. This probably only happens if the original source of the `Exception` in `__init__` is caught, so that the final reference to the instance object can be removed via `__del__`.\r\n\r\nThe above scenario can be observed to happen in the [Azure CI for the refguide check PR](https://dev.azure.com/numpy/numpy/_build/results?buildId=826&view=logs) in the macOS Job under \"Run Refguide Check\" slot.\r\n\r\nSpecifically, in #12253 the ported version of `refguide_check` has the function [`is_deprecated()`](https://github.com/numpy/numpy/pull/12253/files#diff-d5ff24498c294c9ac32f57f408e1d519R240), which calls `DataSource()` with an invalid keyword argument, preventing the `__init__` completion, and catching the `TypeError` with `except Exception`, which likely triggers `__del__` and produces the Traceback observed in the CI result.\r\n\r\nThis doesn't actually cause refguide_check to fail, but it would be nice to clean up that mess visible in the refguide check run report if possible.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/10473",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/10473/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/10473/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/10473/events",
        "html_url": "https://github.com/numpy/numpy/pull/10473",
        "id": 291653400,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1MTgxNjMw",
        "number": 10473,
        "title": "BUG: Fixed polydiv for Complex Numbers",
        "user": {
            "login": "deepakgouda",
            "id": 23744165,
            "node_id": "MDQ6VXNlcjIzNzQ0MTY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23744165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deepakgouda",
            "html_url": "https://github.com/deepakgouda",
            "followers_url": "https://api.github.com/users/deepakgouda/followers",
            "following_url": "https://api.github.com/users/deepakgouda/following{/other_user}",
            "gists_url": "https://api.github.com/users/deepakgouda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deepakgouda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deepakgouda/subscriptions",
            "organizations_url": "https://api.github.com/users/deepakgouda/orgs",
            "repos_url": "https://api.github.com/users/deepakgouda/repos",
            "events_url": "https://api.github.com/users/deepakgouda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deepakgouda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2018-01-25T17:32:30Z",
        "updated_at": "2018-01-30T19:36:15Z",
        "closed_at": "2018-01-30T19:35:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/10473",
            "html_url": "https://github.com/numpy/numpy/pull/10473",
            "diff_url": "https://github.com/numpy/numpy/pull/10473.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/10473.patch"
        },
        "body": "Polynomial Division failed if the coefficients were complex numbers. It raised the TypeError:\r\n```\r\nTypeError: Cannot cast ufunc subtract output from dtype('complex128') to dtype('float64') with casting rule 'same_kind'\r\n```\r\nThis issue led to failing of scipy.signal.residuez for complex numbers.",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/10283",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/10283/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/10283/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/10283/events",
        "html_url": "https://github.com/numpy/numpy/pull/10283",
        "id": 284719296,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwMjQ2MDk2",
        "number": 10283,
        "title": "MAINT: Fallback on the default sequence multiplication behavior",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-12-27T13:01:04Z",
        "updated_at": "2017-12-27T18:01:09Z",
        "closed_at": "2017-12-27T18:00:57Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/10283",
            "html_url": "https://github.com/numpy/numpy/pull/10283",
            "diff_url": "https://github.com/numpy/numpy/pull/10283.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/10283.patch"
        },
        "body": "Give a better error message for sequence multiplication\r\nAs a result, this allows bool_ * Sequence, but with a deprecation warning\r\n\r\nCloses gh-9234\r\nCloses gh-10279\r\n\r\nBefore:\r\n```\r\n>>> np.datetime64(\"now\") * [1, 2, 3]\r\nTypeError: 'numpy.datetime64' object cannot be interpreted as an integer\r\n>>> np.datetime64(\"now\").__mul__([1, 2, 3])\r\nTypeError: 'numpy.datetime64' object cannot be interpreted as an integer\r\n```\r\n\r\nAfter:\r\n```\r\n>>> np.datetime64(\"now\") * [1, 2, 3]\r\nTypeError: can't multiply sequence by non-int of type 'numpy.datetime64'\r\n>>> np.datetime64(\"now\").__mul__([1, 2, 3])\r\nNotImplemented\r\n```\r\n\r\nThe weirdness here was missed cleanup in #7439\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/9999",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/9999/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/9999/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/9999/events",
        "html_url": "https://github.com/numpy/numpy/pull/9999",
        "id": 273017040,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxOTcxMzYy",
        "number": 9999,
        "title": "ENH: Make `np.in1d()` work for unorderable object arrays",
        "user": {
            "login": "jdoepfert",
            "id": 7914340,
            "node_id": "MDQ6VXNlcjc5MTQzNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7914340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdoepfert",
            "html_url": "https://github.com/jdoepfert",
            "followers_url": "https://api.github.com/users/jdoepfert/followers",
            "following_url": "https://api.github.com/users/jdoepfert/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdoepfert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdoepfert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdoepfert/subscriptions",
            "organizations_url": "https://api.github.com/users/jdoepfert/orgs",
            "repos_url": "https://api.github.com/users/jdoepfert/repos",
            "events_url": "https://api.github.com/users/jdoepfert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdoepfert/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359239,
                "node_id": "MDU6TGFiZWw2MzU5MjM5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement",
                "name": "01 - Enhancement",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2017-11-10T18:15:26Z",
        "updated_at": "2017-11-18T18:21:24Z",
        "closed_at": "2017-11-18T18:21:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/9999",
            "html_url": "https://github.com/numpy/numpy/pull/9999",
            "diff_url": "https://github.com/numpy/numpy/pull/9999.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/9999.patch"
        },
        "body": "Fixes #9914 \r\n\r\n`np.in1d()` sorts large input arrays for efficiency reasons. However, the sorting throws an error when one of the input arrays contains objects that are not orderable:\r\n\r\n```python\r\n>>> np.isin(1, [None]*10)\r\nTypeError: unorderable types: NoneType() < NoneType()\r\n>>> np.isin([None], [1]*10)\r\nTypeError: unorderable types: int() < NoneType()\r\n```\r\n\r\nFix: Do not use sorting whenever one of the input arrays may contain arbitrary objects (`dtype.hasobject == True`).\r\n\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/10042",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/10042/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/10042/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/10042/events",
        "html_url": "https://github.com/numpy/numpy/pull/10042",
        "id": 274774913,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTUzMjMxMDgw",
        "number": 10042,
        "title": "BUG: Allow `int` to be called on nested object arrays, fix `np.str_.__int__`",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2017-11-17T07:23:49Z",
        "updated_at": "2018-03-05T14:41:44Z",
        "closed_at": "2017-11-22T23:54:15Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/10042",
            "html_url": "https://github.com/numpy/numpy/pull/10042",
            "diff_url": "https://github.com/numpy/numpy/pull/10042.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/10042.patch"
        },
        "body": "Rather than assuming that any object array is self-referencing, we can just use PyEnter_RecursiveCall, in:\r\n\r\n* `__int__`\r\n* `__float__`\r\n* `__long__`\r\n* `__hex__`\r\n* `__oct__`\r\n\r\nThis works towards (but does _not_ fix) #9972, by not trying to touch the `nb_*` slots ourselves (the same way as #10040).\r\n\r\nSubstantial code deduplication here. Error message is different, but perhaps also better:\r\n\r\n```python\r\n>>> int(np.array([None]))\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType' # now\r\nTypeError: cannot convert to an int; scalar object is not a number #before\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/9726",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/9726/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/9726/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/9726/events",
        "html_url": "https://github.com/numpy/numpy/pull/9726",
        "id": 259320509,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTQyMjE3MDAw",
        "number": 9726,
        "title": "ENH: Better error message for savetxt when X.ndim > 2 or X.ndim = 0",
        "user": {
            "login": "NelleV",
            "id": 184798,
            "node_id": "MDQ6VXNlcjE4NDc5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/184798?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NelleV",
            "html_url": "https://github.com/NelleV",
            "followers_url": "https://api.github.com/users/NelleV/followers",
            "following_url": "https://api.github.com/users/NelleV/following{/other_user}",
            "gists_url": "https://api.github.com/users/NelleV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NelleV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NelleV/subscriptions",
            "organizations_url": "https://api.github.com/users/NelleV/orgs",
            "repos_url": "https://api.github.com/users/NelleV/repos",
            "events_url": "https://api.github.com/users/NelleV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NelleV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-09-20T22:25:01Z",
        "updated_at": "2017-12-06T20:05:32Z",
        "closed_at": "2017-09-20T23:11:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/9726",
            "html_url": "https://github.com/numpy/numpy/pull/9726",
            "diff_url": "https://github.com/numpy/numpy/pull/9726.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/9726.patch"
        },
        "body": "np.savetxt does not support saving arrays of dimension 0 or higher than 2.\r\nThis pull request improves the message of the error raised.\r\n\r\nBefore this patch, the error message was something like: `TypeError: Mismatch between array dtype ('float64') and format specifier ('%.18e %.18e')`",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/9950",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/9950/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/9950/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/9950/events",
        "html_url": "https://github.com/numpy/numpy/pull/9950",
        "id": 270711514,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTUwMzM0NDUz",
        "number": 9950,
        "title": "BUG: Passing an incorrect type to dtype.__getitem__ should raise TypeError",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-11-02T16:06:09Z",
        "updated_at": "2017-11-04T02:44:16Z",
        "closed_at": "2017-11-04T02:44:03Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/9950",
            "html_url": "https://github.com/numpy/numpy/pull/9950",
            "diff_url": "https://github.com/numpy/numpy/pull/9950.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/9950.patch"
        },
        "body": "Also allows any object implementing __index__ to be passed to\r\ndtype.__getitem__\r\n\r\nAgain, extracted from #8814 ",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/9840",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/9840/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/9840/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/9840/events",
        "html_url": "https://github.com/numpy/numpy/pull/9840",
        "id": 263755624,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ1MzU1NTM4",
        "number": 9840,
        "title": "DOC: ndarray.__copy__ takes no arguments",
        "user": {
            "login": "MSeifert04",
            "id": 14200878,
            "node_id": "MDQ6VXNlcjE0MjAwODc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/14200878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MSeifert04",
            "html_url": "https://github.com/MSeifert04",
            "followers_url": "https://api.github.com/users/MSeifert04/followers",
            "following_url": "https://api.github.com/users/MSeifert04/following{/other_user}",
            "gists_url": "https://api.github.com/users/MSeifert04/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MSeifert04/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MSeifert04/subscriptions",
            "organizations_url": "https://api.github.com/users/MSeifert04/orgs",
            "repos_url": "https://api.github.com/users/MSeifert04/repos",
            "events_url": "https://api.github.com/users/MSeifert04/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MSeifert04/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359990,
                "node_id": "MDU6TGFiZWw2MzU5OTkw",
                "url": "https://api.github.com/repos/numpy/numpy/labels/04%20-%20Documentation",
                "name": "04 - Documentation",
                "color": "fef2c0",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-10-08T22:01:03Z",
        "updated_at": "2017-10-13T13:31:27Z",
        "closed_at": "2017-10-13T13:29:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/9840",
            "html_url": "https://github.com/numpy/numpy/pull/9840",
            "diff_url": "https://github.com/numpy/numpy/pull/9840.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/9840.patch"
        },
        "body": "As this example shows - the `__copy__` method accepts no arguments:\r\n\r\n```\r\nimport numpy as np\r\n\r\na = np.array([1,2,3])\r\na.__copy__('C')\r\n\r\n      3 a = np.array([1,2,3])\r\n----> 4 a.__copy__('C')\r\n\r\nTypeError: __copy__() takes exactly 0 arguments (1 given)\r\n```",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/9255",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/9255/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/9255/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/9255/events",
        "html_url": "https://github.com/numpy/numpy/pull/9255",
        "id": 236179160,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTI1ODEzNjM1",
        "number": 9255,
        "title": "Revert \"DEP: Raise TypeError for subtract(bool_, bool_).\"",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 81498520,
                "node_id": "MDU6TGFiZWw4MTQ5ODUyMA==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/07%20-%20Deprecation",
                "name": "07 - Deprecation",
                "color": "fef2c0",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/49",
            "html_url": "https://github.com/numpy/numpy/milestone/49",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/49/labels",
            "id": 2572122,
            "node_id": "MDk6TWlsZXN0b25lMjU3MjEyMg==",
            "number": 49,
            "title": "1.13.1 release",
            "description": "",
            "creator": {
                "login": "charris",
                "id": 77272,
                "node_id": "MDQ6VXNlcjc3Mjcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/charris",
                "html_url": "https://github.com/charris",
                "followers_url": "https://api.github.com/users/charris/followers",
                "following_url": "https://api.github.com/users/charris/following{/other_user}",
                "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
                "organizations_url": "https://api.github.com/users/charris/orgs",
                "repos_url": "https://api.github.com/users/charris/repos",
                "events_url": "https://api.github.com/users/charris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/charris/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 28,
            "state": "closed",
            "created_at": "2017-06-08T16:47:01Z",
            "updated_at": "2017-09-17T06:13:44Z",
            "due_on": null,
            "closed_at": "2017-09-17T06:13:44Z"
        },
        "comments": 13,
        "created_at": "2017-06-15T12:48:11Z",
        "updated_at": "2017-06-24T01:21:48Z",
        "closed_at": "2017-06-16T13:00:27Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/9255",
            "html_url": "https://github.com/numpy/numpy/pull/9255",
            "diff_url": "https://github.com/numpy/numpy/pull/9255.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/9255.patch"
        },
        "body": "This reverts commit c9adc35e68b92b10ab0b20069465fd784388bc14.\r\n\r\nDon't raise `TypeError` for boolean subtraction in Numpy 1.13, see discussion at #9251.\r\n\r\nCloses #9251. ",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/5548",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/5548/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/5548/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/5548/events",
        "html_url": "https://github.com/numpy/numpy/pull/5548",
        "id": 56991631,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4OTc4NDM=",
        "number": 5548,
        "title": "ENH: structured datatype safety checks",
        "user": {
            "login": "ahaldane",
            "id": 9040124,
            "node_id": "MDQ6VXNlcjkwNDAxMjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9040124?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahaldane",
            "html_url": "https://github.com/ahaldane",
            "followers_url": "https://api.github.com/users/ahaldane/followers",
            "following_url": "https://api.github.com/users/ahaldane/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahaldane/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahaldane/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahaldane/subscriptions",
            "organizations_url": "https://api.github.com/users/ahaldane/orgs",
            "repos_url": "https://api.github.com/users/ahaldane/repos",
            "events_url": "https://api.github.com/users/ahaldane/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahaldane/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 25,
        "created_at": "2015-02-09T05:49:41Z",
        "updated_at": "2018-01-17T23:40:10Z",
        "closed_at": "2015-06-05T15:43:34Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/5548",
            "html_url": "https://github.com/numpy/numpy/pull/5548",
            "diff_url": "https://github.com/numpy/numpy/pull/5548.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/5548.patch"
        },
        "body": "This PR tries to solve some issues related structured datatypes, especially view/getfield/setfield. Previously views of structured arrays containing objects were completely disabled.  This commit adds more lenient check for whether an object-array view is allowed, and adds similar checks to getfield/setfield\n\n(This PR has been edited around 3/4/15. I originally planned other changes which I will submit as separate PRs)\n\nI believe this PR solves issues https://github.com/numpy/numpy/issues/2599, https://github.com/numpy/numpy/issues/3256, https://github.com/numpy/numpy/issues/3286, https://github.com/numpy/numpy/issues/2346, https://github.com/numpy/numpy/issues/3253. Issue https://github.com/numpy/numpy/issues/5081 is also now partially fixed, but requires further thought (please take a look at the example there). It also fixes the new scipy issue https://github.com/scipy/scipy/issues/4589.\n\nOnly one test needed modification to pass: `test_objectarray_setfield` checks that `setfield` with objects is disallowed, and expects a `RuntimeError` but I give it `TypeError`.\n### Summary\n\nPreviously views of structured arrays containing objects were completely disabled, which was a problem since views are needed in a few important cases such as when indexing multiple fields of a structured array, or in `__getitem__` in record arrays.\n\nWith help from @jaimefrio I now have functions that carefully check whether a view into array would interpret non-Object memory as an object, or vice versa, and allow the view if there is no problem. Big thanks to Jaime for help, code, and explanations on this. I think the checks are compatible with his PR https://github.com/numpy/numpy/pull/5508. I check that 1) No memory that is not an object will be interpreted as a object, 2) No memory containing an object will be interpreted as an arbitrary type. Both cases can cause segfaults.\n\nI also added similar checks to `PyArray_GetField` and `PyArray_SetField`. Previsouly, the user could view arbitrary data as a python Object, and it was fairly easy to make cases where a segfault would happen.\n\nNote, however, that there are still \"unsafe\" operations (wrt Objects) in numpy which I hope to examine in future PRs, when I have time.\n### How to keep track of objects\n\nThere is a design choice here worth discussing. As part of the check for objects when taking a view, we need to go though the new dtypes's fields and make sure none of them overlap with memory containing an object in the old dtype (unless the field is also an object). Consider this potential view:\n\n```\n>>> basearr = np.array([(1,2,3),(4,5,6)], \n...                    dtype=[('f0', 'i8'), ('f1', 'O'), ('f2', 'i8')])\n>>> varr = basearr.view({'names': ['f0','f2'], \n...                      'formats': ['i8','i8'], \n...                      'offsets': [0,16]})\n>>> v2arr = varr.view({'names': ['f0'], \n...                    'formats': ['i8'], \n...                    'offsets': [8]})  \n```\n\nThe problem would be that writing to v2arr will overwrite the Object in basearr. We need to prevent this, but the challenge is that `varr` doesn't \"know\" that there is an object at position 8. This raises the question: How do we figure out where the objects are in memory to prevent them from being viewed?\n\nThe strategy I have taken in this PR is to only allow views into fields \"known\" to the parent array. In the example above, the `v2arr` view would be disallowed, and only views of `varr` into offsets 0 and 16 would be allowed. (specifically, views into bytes 0-8 and 16-24). The downside is that many views are no longer \"reversible\", since once you take a view that \"forgets\" what was at an offset, you can never view the memory at that offset again in further views. While this constraint only really has to apply to object arrays (as tested with `NPY_ITEM_HASOBJECT`, which I think is inherited in all views) I think for consistency it should apply to all structured arrays.. That is, all 'partial' views (views that have less fields than the original array) would be irreversible.\n\nAn alternate strategy is to too look up all the object positions in the \"base\" object of the array, `varr.base` in this case. I assume that the \"base\" array (if it is an array) contains the list of all object offsets, which I use to check for view overlaps. I implemented this in a separate branch (partial version [here](https://github.com/ahaldane/numpy/tree/view_objects_base)), but it was difficult because `arr.base` does not always lead to an array object. For example it may be a buffer, in which case I disallow views containing object types, but that's not a big problem because users aren't allowed to create object arrays from buffers anyway. Another problem is (void) scalar structured types, as they do not list their \"base\" object even after being converted to a 0-d array. To fix this I made void scalar types' base attribute point to the original array. However, there are still some cases where I cannot get to the original array - for example `nditer` buffers the source array, which causes about 5 unit tests to fail, which I have not solved yet (but I could try). The advantage would be that views are reversible.\n\nThe irreversible view strategy seems better because it touches less parts, has fewer edge cases, and seems to me less likely to go wrong. It also works right now. I also have not imagined any scenarios where inability to reverse a view would be a big problem, and no related unit tests fail.\n\nNote that even if the 'base array' strategy is not good, perhaps it's still a good idea to make void scalars \"base\" attribute point to the original array, as another PR? I admit I am not totally clear on the true purposes of \"base\" objects.\n\nIn this PR I also made some small tweaks to recarrays: I don't think they need to implement their own `view` function as a result of my last PRs.\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/9218",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/9218/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/9218/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/9218/events",
        "html_url": "https://github.com/numpy/numpy/pull/9218",
        "id": 233376265,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTIzODQ1OTQ5",
        "number": 9218,
        "title": "BUG: Only propagate TypeError from where we throw it",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917596,
                "node_id": "MDU6TGFiZWwxNjkxNzU5Ng==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.polynomial",
                "name": "component: numpy.polynomial",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-06-03T15:30:18Z",
        "updated_at": "2017-06-03T16:42:21Z",
        "closed_at": "2017-06-03T16:42:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/9218",
            "html_url": "https://github.com/numpy/numpy/pull/9218",
            "diff_url": "https://github.com/numpy/numpy/pull/9218.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/9218.patch"
        },
        "body": "This `try` ... `except` is pretty sketchy, but I think the `TypeError` clause is just to not catch exceptions from `_get_coefficients`.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/9014",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/9014/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/9014/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/9014/events",
        "html_url": "https://github.com/numpy/numpy/pull/9014",
        "id": 224965470,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTE4MDcwMzIz",
        "number": 9014,
        "title": "BUG: `__array_ufunc__= None` -> TypeError",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/44",
            "html_url": "https://github.com/numpy/numpy/milestone/44",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/44/labels",
            "id": 1981949,
            "node_id": "MDk6TWlsZXN0b25lMTk4MTk0OQ==",
            "number": 44,
            "title": "1.13.0 release",
            "description": "Branch point: 14ff219a13e194c5e7995218fea3c7648eb1c875",
            "creator": {
                "login": "charris",
                "id": 77272,
                "node_id": "MDQ6VXNlcjc3Mjcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/charris",
                "html_url": "https://github.com/charris",
                "followers_url": "https://api.github.com/users/charris/followers",
                "following_url": "https://api.github.com/users/charris/following{/other_user}",
                "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
                "organizations_url": "https://api.github.com/users/charris/orgs",
                "repos_url": "https://api.github.com/users/charris/repos",
                "events_url": "https://api.github.com/users/charris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/charris/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 102,
            "state": "closed",
            "created_at": "2016-09-04T00:50:03Z",
            "updated_at": "2018-10-31T14:34:13Z",
            "due_on": null,
            "closed_at": "2017-09-17T06:13:52Z"
        },
        "comments": 13,
        "created_at": "2017-04-28T02:46:54Z",
        "updated_at": "2017-04-30T23:05:44Z",
        "closed_at": "2017-04-30T23:05:24Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/9014",
            "html_url": "https://github.com/numpy/numpy/pull/9014",
            "diff_url": "https://github.com/numpy/numpy/pull/9014.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/9014.patch"
        },
        "body": "Fixes #9011, by making `__array_ufunc__ = None` on any operand cause `TypeError` to be raised.\r\n\r\nI have also taken the opportunity to update the NEP, adjusting the language for this change and also added a recommendation for how to implement arithmetic alongside `__array_ufunc__` (xref #8892). This made me realize an important practical difference between @mhvk's options (1) and (2): option (1) is viral, in the sense that other objects implementing arithmetic with your object *also* need to follow NumPy's rules.\r\n\r\nTODO:\r\n- [x] Add tests\r\n- [x] Fix failing tests\r\n- [x] Document in NEP",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/8806",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/8806/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/8806/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/8806/events",
        "html_url": "https://github.com/numpy/numpy/pull/8806",
        "id": 215735104,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTExNzc0NjYx",
        "number": 8806,
        "title": "BUG: Raise TypeError on ternary power",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-03-21T13:13:33Z",
        "updated_at": "2017-03-25T00:14:27Z",
        "closed_at": "2017-03-25T00:14:10Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/8806",
            "html_url": "https://github.com/numpy/numpy/pull/8806",
            "diff_url": "https://github.com/numpy/numpy/pull/8806.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/8806.patch"
        },
        "body": "... until we implement it in #8804. Fixes #8805",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/9021",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/9021/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/9021/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/9021/events",
        "html_url": "https://github.com/numpy/numpy/pull/9021",
        "id": 225223720,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MTE4MjU2ODYw",
        "number": 9021,
        "title": "BUG: Make ndarray inplace operators forward calls when needed.",
        "user": {
            "login": "charris",
            "id": 77272,
            "node_id": "MDQ6VXNlcjc3Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/charris",
            "html_url": "https://github.com/charris",
            "followers_url": "https://api.github.com/users/charris/followers",
            "following_url": "https://api.github.com/users/charris/following{/other_user}",
            "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
            "organizations_url": "https://api.github.com/users/charris/orgs",
            "repos_url": "https://api.github.com/users/charris/repos",
            "events_url": "https://api.github.com/users/charris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/charris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/44",
            "html_url": "https://github.com/numpy/numpy/milestone/44",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/44/labels",
            "id": 1981949,
            "node_id": "MDk6TWlsZXN0b25lMTk4MTk0OQ==",
            "number": 44,
            "title": "1.13.0 release",
            "description": "Branch point: 14ff219a13e194c5e7995218fea3c7648eb1c875",
            "creator": {
                "login": "charris",
                "id": 77272,
                "node_id": "MDQ6VXNlcjc3Mjcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/charris",
                "html_url": "https://github.com/charris",
                "followers_url": "https://api.github.com/users/charris/followers",
                "following_url": "https://api.github.com/users/charris/following{/other_user}",
                "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
                "organizations_url": "https://api.github.com/users/charris/orgs",
                "repos_url": "https://api.github.com/users/charris/repos",
                "events_url": "https://api.github.com/users/charris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/charris/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 102,
            "state": "closed",
            "created_at": "2016-09-04T00:50:03Z",
            "updated_at": "2018-10-31T14:34:13Z",
            "due_on": null,
            "closed_at": "2017-09-17T06:13:52Z"
        },
        "comments": 7,
        "created_at": "2017-04-29T01:06:57Z",
        "updated_at": "2017-04-30T14:56:09Z",
        "closed_at": "2017-04-29T19:32:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/9021",
            "html_url": "https://github.com/numpy/numpy/pull/9021",
            "diff_url": "https://github.com/numpy/numpy/pull/9021.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/9021.patch"
        },
        "body": "For backward compatibility, we need to let `__array_priority__`\r\ndetermine the override for inplace ops. If `__array_ufunc__ = None`\r\non the right hand side it is still the case that TypeError will be\r\nraised.\r\n    \r\nThis fixes SciPy test failures of the type\r\n    \r\n    ndarray += sparse_array\r\n    \r\n Closes #9019.\r\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/7215",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/7215/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/7215/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/7215/events",
        "html_url": "https://github.com/numpy/numpy/pull/7215",
        "id": 132360295,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTg3MTgwNzc=",
        "number": 7215,
        "title": "MAINT: Use PySlice_GetIndicesEx instead of custom reimplementation",
        "user": {
            "login": "njsmith",
            "id": 609896,
            "node_id": "MDQ6VXNlcjYwOTg5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/609896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/njsmith",
            "html_url": "https://github.com/njsmith",
            "followers_url": "https://api.github.com/users/njsmith/followers",
            "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
            "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
            "organizations_url": "https://api.github.com/users/njsmith/orgs",
            "repos_url": "https://api.github.com/users/njsmith/repos",
            "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
            "received_events_url": "https://api.github.com/users/njsmith/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2016-02-09T08:41:26Z",
        "updated_at": "2016-11-16T18:54:00Z",
        "closed_at": "2016-02-19T14:48:38Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/7215",
            "html_url": "https://github.com/numpy/numpy/pull/7215",
            "diff_url": "https://github.com/numpy/numpy/pull/7215.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/7215.patch"
        },
        "body": "This has the side effects of:\n- changing several IndexError exceptions into TypeErrors\n- allowing slices like `arr[False:True]` as equivalent to\n  `arr[0:1]` (because now we're using Python's logic for interpreting\n  slices, and Python is happy with treating bools as integers in integer\n  contexts).\n\nIt also deletes almost 100 lines of code :-).\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/8200",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/8200/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/8200/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/8200/events",
        "html_url": "https://github.com/numpy/numpy/pull/8200",
        "id": 184620179,
        "node_id": "MDExOlB1bGxSZXF1ZXN0OTA0NzYxODY=",
        "number": 8200,
        "title": "BUG: Fix structured array format functions ",
        "user": {
            "login": "skwbc",
            "id": 5057640,
            "node_id": "MDQ6VXNlcjUwNTc2NDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5057640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skwbc",
            "html_url": "https://github.com/skwbc",
            "followers_url": "https://api.github.com/users/skwbc/followers",
            "following_url": "https://api.github.com/users/skwbc/following{/other_user}",
            "gists_url": "https://api.github.com/users/skwbc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skwbc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skwbc/subscriptions",
            "organizations_url": "https://api.github.com/users/skwbc/orgs",
            "repos_url": "https://api.github.com/users/skwbc/repos",
            "events_url": "https://api.github.com/users/skwbc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skwbc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/numpy/numpy/milestones/41",
            "html_url": "https://github.com/numpy/numpy/milestone/41",
            "labels_url": "https://api.github.com/repos/numpy/numpy/milestones/41/labels",
            "id": 1503092,
            "node_id": "MDk6TWlsZXN0b25lMTUwMzA5Mg==",
            "number": 41,
            "title": "1.12.0 release",
            "description": "Tag for the Numpy 1.12.0 release.",
            "creator": {
                "login": "charris",
                "id": 77272,
                "node_id": "MDQ6VXNlcjc3Mjcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/77272?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/charris",
                "html_url": "https://github.com/charris",
                "followers_url": "https://api.github.com/users/charris/followers",
                "following_url": "https://api.github.com/users/charris/following{/other_user}",
                "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
                "organizations_url": "https://api.github.com/users/charris/orgs",
                "repos_url": "https://api.github.com/users/charris/repos",
                "events_url": "https://api.github.com/users/charris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/charris/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 128,
            "state": "closed",
            "created_at": "2016-01-12T20:39:09Z",
            "updated_at": "2017-02-15T07:41:04Z",
            "due_on": null,
            "closed_at": "2017-02-15T07:39:59Z"
        },
        "comments": 6,
        "created_at": "2016-10-22T09:27:03Z",
        "updated_at": "2016-11-02T02:05:06Z",
        "closed_at": "2016-11-02T02:05:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/8200",
            "html_url": "https://github.com/numpy/numpy/pull/8200",
            "diff_url": "https://github.com/numpy/numpy/pull/8200.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/8200.patch"
        },
        "body": "#### 1st commit\n- Preserving structured array element format, this commit fixes subarray format changed in PR #8160.\n- This commit also changes iterator for field name from `dtype_.descr` to `dtype_.names`. \n#### 2nd commit\n\nCloses #8172 \n### Reason of a test failure\n\ntest_format_on_flex_array_element (test_regression.TestRegression) fails because of the following `TypeError`.\n\n```\nIn [1]: import numpy as np\n   ...: \n   ...: dt = np.dtype([('date', '<M8[D]'), ('val', '<f8')])\n   ...: arr = np.array([('2000-01-01', 1)], dt)\n   ...: arr[0]\n\nTypeError: input must have type NumPy datetime\n```\n\nIt is because `array2string` calls `.item()` method of `arr[0]` and `.item()` casts the type of `date` field from `numpy.datetime64` to `datetime.time`.\nThen `DatetimeFormat` calls `datetime_as_string` with the `datetime.time` object and `TypeError` raised (See followings).\n\n```\nIn [11]: x = arr[0].item(); x\nOut[11]: (datetime.date(2000, 1, 1), 1.0)\n\nIn [12]: type(x[0])\nOut[12]: datetime.date\n\nIn [13]: np.datetime_as_string(x[0])\nTypeError: input must have type NumPy datetime\n\nIn [14]: type(arr[0][0])\nOut[14]: numpy.datetime64\n\nIn [15]: np.datetime_as_string(arr[0][0])\nOut[15]: '2000-01-01'\n```\n\nI don't understand the mechanism of this casting yet. \nIf this is a bug we should fix it. \nIf this is not a bug, I have to fix the code to treat this error in this PR.\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/7609",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/7609/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/7609/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/7609/events",
        "html_url": "https://github.com/numpy/numpy/pull/7609",
        "id": 153661669,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjkyNzE1ODU=",
        "number": 7609,
        "title": "BUG: Fix TypeError when raising TypeError",
        "user": {
            "login": "eric-wieser",
            "id": 425260,
            "node_id": "MDQ6VXNlcjQyNTI2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-wieser",
            "html_url": "https://github.com/eric-wieser",
            "followers_url": "https://api.github.com/users/eric-wieser/followers",
            "following_url": "https://api.github.com/users/eric-wieser/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-wieser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-wieser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-wieser/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-wieser/orgs",
            "repos_url": "https://api.github.com/users/eric-wieser/repos",
            "events_url": "https://api.github.com/users/eric-wieser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-wieser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2016-05-08T15:29:09Z",
        "updated_at": "2016-05-09T18:34:58Z",
        "closed_at": "2016-05-09T18:34:48Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/7609",
            "html_url": "https://github.com/numpy/numpy/pull/7609",
            "diff_url": "https://github.com/numpy/numpy/pull/7609.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/7609.patch"
        },
        "body": "Fixes \"TypeError: pop expected at least 1 arguments, got 0\"\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/7639",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/7639/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/7639/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/7639/events",
        "html_url": "https://github.com/numpy/numpy/pull/7639",
        "id": 154898163,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NzAxMTYwNTg=",
        "number": 7639,
        "title": "TST: fix a set of test errors in master.",
        "user": {
            "login": "rgommers",
            "id": 98330,
            "node_id": "MDQ6VXNlcjk4MzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rgommers",
            "html_url": "https://github.com/rgommers",
            "followers_url": "https://api.github.com/users/rgommers/followers",
            "following_url": "https://api.github.com/users/rgommers/following{/other_user}",
            "gists_url": "https://api.github.com/users/rgommers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rgommers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rgommers/subscriptions",
            "organizations_url": "https://api.github.com/users/rgommers/orgs",
            "repos_url": "https://api.github.com/users/rgommers/repos",
            "events_url": "https://api.github.com/users/rgommers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rgommers/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 6359945,
                "node_id": "MDU6TGFiZWw2MzU5OTQ1",
                "url": "https://api.github.com/repos/numpy/numpy/labels/05%20-%20Testing",
                "name": "05 - Testing",
                "color": "fef2c0",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2016-05-15T09:00:16Z",
        "updated_at": "2016-05-18T04:00:54Z",
        "closed_at": "2016-05-18T04:00:46Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/7639",
            "html_url": "https://github.com/numpy/numpy/pull/7639",
            "diff_url": "https://github.com/numpy/numpy/pull/7639.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/7639.patch"
        },
        "body": "These are the ones I ran into on 32-bit Linux with current master and `Pathlib` installed on Python 2.7:\n\n```\n======================================================================\nERROR: test_format.test_large_archive\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/rgommers/.local/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/home/rgommers/Code/numpy/numpy/lib/tests/test_format.py\", line 841, in test_large_archive\n    a = np.empty((2 ** 30, 2), dtype=np.uint8)\nValueError: array is too big; `arr.size * arr.dtype.itemsize` is larger than the maximum possible size.\n\n======================================================================\nERROR: test_mafromtxt (test_io.TestPathUsage)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/rgommers/Code/numpy/numpy/testing/decorators.py\", line 147, in skipper_func\n    return f(*args, **kwargs)\n  File \"/home/rgommers/Code/numpy/numpy/lib/tests/test_io.py\", line 1899, in test_mafromtxt\n    f.write('1,2,3.0\\n4,5,6.0\\n')\nTypeError: must be unicode, not str\n\n======================================================================\nERROR: test_ndfromtxt (test_io.TestPathUsage)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/rgommers/Code/numpy/numpy/testing/decorators.py\", line 147, in skipper_func\n    return f(*args, **kwargs)\n  File \"/home/rgommers/Code/numpy/numpy/lib/tests/test_io.py\", line 1888, in test_ndfromtxt\n    f.write('1 2\\n3 4')\nTypeError: must be unicode, not str\n\n======================================================================\nERROR: test_recfromcsv (test_io.TestPathUsage)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/rgommers/Code/numpy/numpy/testing/decorators.py\", line 147, in skipper_func\n    return f(*args, **kwargs)\n  File \"/home/rgommers/Code/numpy/numpy/lib/tests/test_io.py\", line 1923, in test_recfromcsv\n    f.write('A,B\\n0,1\\n2,3')\nTypeError: must be unicode, not str\n\n======================================================================\nERROR: test_recfromtxt (test_io.TestPathUsage)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/rgommers/Code/numpy/numpy/testing/decorators.py\", line 147, in skipper_func\n    return f(*args, **kwargs)\n  File \"/home/rgommers/Code/numpy/numpy/lib/tests/test_io.py\", line 1910, in test_recfromtxt\n    f.write('A,B\\n0,1\\n2,3')\nTypeError: must be unicode, not str\n\n======================================================================\nERROR: test_all_outliers (test_twodim_base.TestHistogram2d)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/rgommers/Code/numpy/numpy/lib/tests/test_twodim_base.py\", line 257, in test_all_outliers\n    r = rand(100) + 1. + 1e6  # histogramdd rounds by decimal=6\n  File \"/home/rgommers/Code/numpy/numpy/lib/utils.py\", line 99, in newfunc\n    warnings.warn(depdoc, DeprecationWarning)\nDeprecationWarning: `rand` is deprecated!\nnumpy.testing.rand is deprecated in numpy 1.11. Use numpy.random.rand instead.\n\n----------------------------------------------------------------------\n```\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/7229",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/7229/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/7229/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/7229/events",
        "html_url": "https://github.com/numpy/numpy/pull/7229",
        "id": 133060817,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTkwNzg0Mzc=",
        "number": 7229,
        "title": "ENH: implement __complex__",
        "user": {
            "login": "ewmoore",
            "id": 2314641,
            "node_id": "MDQ6VXNlcjIzMTQ2NDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2314641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ewmoore",
            "html_url": "https://github.com/ewmoore",
            "followers_url": "https://api.github.com/users/ewmoore/followers",
            "following_url": "https://api.github.com/users/ewmoore/following{/other_user}",
            "gists_url": "https://api.github.com/users/ewmoore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ewmoore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ewmoore/subscriptions",
            "organizations_url": "https://api.github.com/users/ewmoore/orgs",
            "repos_url": "https://api.github.com/users/ewmoore/repos",
            "events_url": "https://api.github.com/users/ewmoore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ewmoore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359239,
                "node_id": "MDU6TGFiZWw2MzU5MjM5",
                "url": "https://api.github.com/repos/numpy/numpy/labels/01%20-%20Enhancement",
                "name": "01 - Enhancement",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 325755452,
                "node_id": "MDU6TGFiZWwzMjU3NTU0NTI=",
                "url": "https://api.github.com/repos/numpy/numpy/labels/56%20-%20Needs%20Release%20Note.",
                "name": "56 - Needs Release Note.",
                "color": "207de5",
                "default": false,
                "description": "Needs an entry in doc/release/upcoming_changes"
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2016-02-11T19:11:07Z",
        "updated_at": "2016-03-23T13:14:08Z",
        "closed_at": "2016-03-23T13:14:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/7229",
            "html_url": "https://github.com/numpy/numpy/pull/7229",
            "diff_url": "https://github.com/numpy/numpy/pull/7229.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/7229.patch"
        },
        "body": "Fixes gh-2491.\n\nThere is still some asymmetry here.  Calling `float()` or `complex()` on a `np.string_` scalar will try to convert the string to a float or a complex.  But this still doesn't work for `size = 1` arrays.  \n\n```\nIn [2]: float(np.array(['1.1']))\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-2-981e3b7ad7d1> in <module>()\n----> 1 float(np.array(['1.1']))\n\nTypeError: don't know how to convert scalar number to float\n\nIn [3]: float(np.array(['1.1'])[0])\nOut[3]: 1.1\n\nIn [4]: complex(np.array(['1.1']))\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-4-a230266b5899> in <module>()\n----> 1 complex(np.array(['1.1']))\n\nTypeError: cannot convert to complex\n\nIn [5]: complex(np.array(['1.1'])[0])\nOut[5]: (1.1+0j)\n```\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/7341",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/7341/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/7341/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/7341/events",
        "html_url": "https://github.com/numpy/numpy/pull/7341",
        "id": 136396910,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NjA2ODM2ODQ=",
        "number": 7341,
        "title": "TST: Add test for #6469",
        "user": {
            "login": "inesw",
            "id": 17128743,
            "node_id": "MDQ6VXNlcjE3MTI4NzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/17128743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inesw",
            "html_url": "https://github.com/inesw",
            "followers_url": "https://api.github.com/users/inesw/followers",
            "following_url": "https://api.github.com/users/inesw/following{/other_user}",
            "gists_url": "https://api.github.com/users/inesw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inesw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inesw/subscriptions",
            "organizations_url": "https://api.github.com/users/inesw/orgs",
            "repos_url": "https://api.github.com/users/inesw/repos",
            "events_url": "https://api.github.com/users/inesw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inesw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359945,
                "node_id": "MDU6TGFiZWw2MzU5OTQ1",
                "url": "https://api.github.com/repos/numpy/numpy/labels/05%20-%20Testing",
                "name": "05 - Testing",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917082,
                "node_id": "MDU6TGFiZWwxNjkxNzA4Mg==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.lib",
                "name": "component: numpy.lib",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2016-02-25T14:10:30Z",
        "updated_at": "2016-03-18T00:36:43Z",
        "closed_at": "2016-03-18T00:36:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/7341",
            "html_url": "https://github.com/numpy/numpy/pull/7341",
            "diff_url": "https://github.com/numpy/numpy/pull/7341.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/7341.patch"
        },
        "body": "This pull request adds a test for issue #6469:\nThe issue itself has been fixed in 34b582aadae8272e7b7209f7a05594e9258ba217 .\nChecks that TypeError is raised if in function histogram argument bins is a float.\nThis pull request is part of a BCCN Berlin student project featuring @whops @rahul-nt @MaxKirstein @inesw\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/6987",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/6987/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/6987/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/6987/events",
        "html_url": "https://github.com/numpy/numpy/pull/6987",
        "id": 125783353,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTU1NTE2MTk=",
        "number": 6987,
        "title": "TST, MAINT: Make sure exceptions of `inner` and `dot` match for different cases",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 6359945,
                "node_id": "MDU6TGFiZWw2MzU5OTQ1",
                "url": "https://api.github.com/repos/numpy/numpy/labels/05%20-%20Testing",
                "name": "05 - Testing",
                "color": "fef2c0",
                "default": false,
                "description": ""
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 25,
        "created_at": "2016-01-09T21:42:16Z",
        "updated_at": "2016-01-15T23:59:51Z",
        "closed_at": "2016-01-15T23:56:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/6987",
            "html_url": "https://github.com/numpy/numpy/pull/6987",
            "diff_url": "https://github.com/numpy/numpy/pull/6987.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/6987.patch"
        },
        "body": "Related: https://github.com/numpy/numpy/pull/6988\n\nFixes an issue with `dot` where it was  `ValueError` or a `TypeError` depending on the order of its arguments. This differs from `inner`, which always raises a `TypeError`. Below is an example of the current behavior, which seems odd. This PR makes all cases raise a `TypeError`.\n\n```\n>>> import numpy\n>>> import numpy as np\n>>> np.inner(1., np.array((1,1), dtype='i,i'))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: invalid type promotion\n>>> np.inner(np.array((1,1), dtype='i,i'), 1.)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: Cannot cast array data from dtype([('f0', '<i4'), ('f1', '<i4')]) to dtype('float64') according to the rule 'safe'\n>>> np.dot(1., np.array((1,1), dtype='i,i'))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: Cannot find a common data type.\n>>> np.dot(np.array((1,1), dtype='i,i'), 1.)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: Cannot cast array data from dtype([('f0', '<i4'), ('f1', '<i4')]) to dtype('float64') according to the rule 'safe'\n```\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/7000",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/7000/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/7000/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/7000/events",
        "html_url": "https://github.com/numpy/numpy/pull/7000",
        "id": 126301851,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTU4MzI3MDM=",
        "number": 7000,
        "title": "DOC, MAINT: Enforce np.ndarray arg for np.put and np.place",
        "user": {
            "login": "gfyoung",
            "id": 9273653,
            "node_id": "MDQ6VXNlcjkyNzM2NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9273653?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gfyoung",
            "html_url": "https://github.com/gfyoung",
            "followers_url": "https://api.github.com/users/gfyoung/followers",
            "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
            "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
            "organizations_url": "https://api.github.com/users/gfyoung/orgs",
            "repos_url": "https://api.github.com/users/gfyoung/repos",
            "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gfyoung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6359214,
                "node_id": "MDU6TGFiZWw2MzU5MjE0",
                "url": "https://api.github.com/repos/numpy/numpy/labels/00%20-%20Bug",
                "name": "00 - Bug",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917437,
                "node_id": "MDU6TGFiZWwxNjkxNzQzNw==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20Documentation",
                "name": "component: Documentation",
                "color": "009800",
                "default": false,
                "description": null
            },
            {
                "id": 16917029,
                "node_id": "MDU6TGFiZWwxNjkxNzAyOQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.core",
                "name": "component: numpy.core",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2016-01-12T23:19:38Z",
        "updated_at": "2016-01-15T22:35:13Z",
        "closed_at": "2016-01-15T21:25:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/7000",
            "html_url": "https://github.com/numpy/numpy/pull/7000",
            "diff_url": "https://github.com/numpy/numpy/pull/7000.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/7000.patch"
        },
        "body": "`np.put` and `np.place` do something only when the first argument is an instance of `np.ndarray`. These changes will cause a `TypeError` to be thrown in either function should that requirement not be satisfied, which would be more useful to see when debugging.\n",
        "performed_via_github_app": null,
        "score": 1.0
    },
    {
        "url": "https://api.github.com/repos/numpy/numpy/issues/5535",
        "repository_url": "https://api.github.com/repos/numpy/numpy",
        "labels_url": "https://api.github.com/repos/numpy/numpy/issues/5535/labels{/name}",
        "comments_url": "https://api.github.com/repos/numpy/numpy/issues/5535/comments",
        "events_url": "https://api.github.com/repos/numpy/numpy/issues/5535/events",
        "html_url": "https://github.com/numpy/numpy/pull/5535",
        "id": 56657155,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg3MTYzNjY=",
        "number": 5535,
        "title": "Return output from nm command as string (and not bytes)",
        "user": {
            "login": "ahjulstad",
            "id": 6638265,
            "node_id": "MDQ6VXNlcjY2MzgyNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6638265?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahjulstad",
            "html_url": "https://github.com/ahjulstad",
            "followers_url": "https://api.github.com/users/ahjulstad/followers",
            "following_url": "https://api.github.com/users/ahjulstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahjulstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahjulstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahjulstad/subscriptions",
            "organizations_url": "https://api.github.com/users/ahjulstad/orgs",
            "repos_url": "https://api.github.com/users/ahjulstad/repos",
            "events_url": "https://api.github.com/users/ahjulstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahjulstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 36825825,
                "node_id": "MDU6TGFiZWwzNjgyNTgyNQ==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/03%20-%20Maintenance",
                "name": "03 - Maintenance",
                "color": "fef2c0",
                "default": false,
                "description": null
            },
            {
                "id": 16917063,
                "node_id": "MDU6TGFiZWwxNjkxNzA2Mw==",
                "url": "https://api.github.com/repos/numpy/numpy/labels/component:%20numpy.distutils",
                "name": "component: numpy.distutils",
                "color": "009800",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2015-02-05T11:15:25Z",
        "updated_at": "2016-01-09T15:51:32Z",
        "closed_at": "2015-02-09T01:57:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/numpy/numpy/pulls/5535",
            "html_url": "https://github.com/numpy/numpy/pull/5535",
            "diff_url": "https://github.com/numpy/numpy/pull/5535.diff",
            "patch_url": "https://github.com/numpy/numpy/pull/5535.patch"
        },
        "body": "The output from nm (from `lib2def.getnm()`) is bytes. Afterwards, when `parse_nm` parses this data using a string regex, this fails with \n\n```\n  File \"C:\\appl\\ana3_32\\envs\\modelica\\lib\\site-packages\\numpy\\distutils\\lib2def.py\", line 80, in parse_nm\n    data = DATA_RE.findall(nm_output)\nTypeError: can't use a string pattern on a bytes-like object\n```\n\nA fix that works for me is to decode the nm output as an ascii string.\n",
        "performed_via_github_app": null,
        "score": 1.0
    }
]