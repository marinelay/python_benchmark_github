diff --git a/homeassistant/helpers/entity_component.py b/homeassistant/helpers/entity_component.py
index f7cf23b21fd2b..8cfc9984e2ed4 100644
--- a/homeassistant/helpers/entity_component.py
+++ b/homeassistant/helpers/entity_component.py
@@ -238,7 +238,8 @@ def async_update_group(self):
         This method must be run in the event loop.
         """
         if self.group_name is not None:
-            ids = sorted(self.entities, key=lambda x: self.entities[x].name)
+            ids = sorted(self.entities,
+                         key=lambda x: self.entities[x].name or x)

# self.entities[x].name이 None이어서 생기는 문제
# 그래서 None 체크를 해줘야 하는 상황

             group = get_component('group')
             group.async_set_group(
                 self.hass, slugify(self.group_name), name=self.group_name,
diff --git a/tests/helpers/test_entity_component.py b/tests/helpers/test_entity_component.py
index 530e266208373..f68090358c787 100644
--- a/tests/helpers/test_entity_component.py
+++ b/tests/helpers/test_entity_component.py
@@ -84,7 +84,7 @@ def test_setting_up_group(self):
         # No group after setup
         assert len(self.hass.states.entity_ids()) == 0
 
-        component.add_entities([EntityTest(name='hello')])
+        component.add_entities([EntityTest()])
 
         # group exists
         assert len(self.hass.states.entity_ids()) == 2
@@ -92,7 +92,8 @@ def test_setting_up_group(self):
 
         group = self.hass.states.get('group.everyone')
 
-        assert group.attributes.get('entity_id') == ('test_domain.hello',)
+        assert group.attributes.get('entity_id') == \
+            ('test_domain.unnamed_device',)
 
         # group extended
         component.add_entities([EntityTest(name='goodbye')])
@@ -100,9 +101,9 @@ def test_setting_up_group(self):
         assert len(self.hass.states.entity_ids()) == 3
         group = self.hass.states.get('group.everyone')
 
-        # Sorted order
+        # Ordered in order of added to the group
         assert group.attributes.get('entity_id') == \
-            ('test_domain.goodbye', 'test_domain.hello')
+            ('test_domain.goodbye', 'test_domain.unnamed_device')
 
     def test_polling_only_updates_entities_it_should_poll(self):
         """Test the polling of only updated entities."""
