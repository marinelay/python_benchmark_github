diff --git a/homeassistant/components/sensor/bom.py b/homeassistant/components/sensor/bom.py
index 6f7bc56cca92b..df8b539135992 100644
--- a/homeassistant/components/sensor/bom.py
+++ b/homeassistant/components/sensor/bom.py
@@ -119,7 +119,7 @@ def setup_platform(hass, config, add_entities, discovery_info=None):
             _LOGGER.error("Could not get BOM weather station from lat/lon")
             return
 
-    bom_data = BOMCurrentData(hass, station)
+    bom_data = BOMCurrentData(station)
 
     try:
         bom_data.update()
@@ -181,9 +181,8 @@ def update(self):
 class BOMCurrentData:
     """Get data from BOM."""
 
-    def __init__(self, hass, station_id):
+    def __init__(self, station_id):
         """Initialize the data object."""
-        self._hass = hass
         self._zone_id, self._wmo_id = station_id.split('.')
         self._data = None
         self.last_updated = None
diff --git a/homeassistant/components/weather/bom.py b/homeassistant/components/weather/bom.py
index 4c517824bca01..1ed54496c6f53 100644
--- a/homeassistant/components/weather/bom.py
+++ b/homeassistant/components/weather/bom.py
@@ -33,7 +33,7 @@ def setup_platform(hass, config, add_entities, discovery_info=None):
     if station is None:
         _LOGGER.error("Could not get BOM weather station from lat/lon")
         return False
-    bom_data = BOMCurrentData(hass, station)
+    bom_data = BOMCurrentData(station)
     try:
         bom_data.update()
     except ValueError as err:
diff --git a/tests/components/sensor/test_bom.py b/tests/components/sensor/test_bom.py
index 50669f5a77d02..fc2722f9742b5 100644
--- a/tests/components/sensor/test_bom.py
+++ b/tests/components/sensor/test_bom.py
@@ -6,11 +6,12 @@
 from urllib.parse import urlparse
 
 import requests
-from tests.common import (
-    assert_setup_component, get_test_home_assistant, load_fixture)
 
 from homeassistant.components import sensor
+from homeassistant.components.sensor.bom import BOMCurrentData
 from homeassistant.setup import setup_component
+from tests.common import (
+    assert_setup_component, get_test_home_assistant, load_fixture)
 
 VALID_CONFIG = {
     'platform': 'bom',
@@ -97,3 +98,12 @@ def test_sensor_values(self, mock_get):
 
         feels_like = self.hass.states.get('sensor.bom_fake_feels_like_c').state
         assert '25.0' == feels_like
+
+
+class TestBOMCurrentData(unittest.TestCase):
+    """Test the BOM data container."""
+
+    def test_should_update_initial(self):
+        """Test that the first update always occurs."""
+        bom_data = BOMCurrentData('IDN60901.94767')
+        assert bom_data.should_update() is True
