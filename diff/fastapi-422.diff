diff --git a/fastapi/routing.py b/fastapi/routing.py
index 304b2a1161..3e4acb457e 100644
--- a/fastapi/routing.py
+++ b/fastapi/routing.py
@@ -52,6 +52,8 @@ def serialize_response(
             errors.extend(errors_)
         if errors:
             raise ValidationError(errors)
+        if skip_defaults and isinstance(response, BaseModel):
+            value = response.dict(skip_defaults=skip_defaults)
         return jsonable_encoder(
             value,
             include=include,
diff --git a/tests/test_skip_defaults.py b/tests/test_skip_defaults.py
new file mode 100644
index 0000000000..8579b50ea5
--- /dev/null
+++ b/tests/test_skip_defaults.py
@@ -0,0 +1,29 @@
+from typing import Optional
+
+from fastapi import FastAPI
+from pydantic import BaseModel
+from starlette.testclient import TestClient
+
+app = FastAPI()
+
+
+class SubModel(BaseModel):
+    a: Optional[str] = "foo"
+
+
+class Model(BaseModel):
+    x: Optional[int]
+    sub: SubModel
+
+
+@app.get("/", response_model=Model, response_model_skip_defaults=True)
+def get() -> Model:
+    return Model(sub={})
+
+
+client = TestClient(app)
+
+
+def test_return_defaults():
+    response = client.get("/")
+    assert response.json() == {"sub": {}}
