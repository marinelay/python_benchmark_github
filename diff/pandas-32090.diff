diff --git a/doc/source/whatsnew/v1.1.0.rst b/doc/source/whatsnew/v1.1.0.rst
index 57c53f73962dc..7c68005144cbc 100644
--- a/doc/source/whatsnew/v1.1.0.rst
+++ b/doc/source/whatsnew/v1.1.0.rst
@@ -327,6 +327,7 @@ Reshaping
 - Bug in :func:`crosstab` when inputs are two Series and have tuple names, the output will keep dummy MultiIndex as columns. (:issue:`18321`)
 - :meth:`DataFrame.pivot` can now take lists for ``index`` and ``columns`` arguments (:issue:`21425`)
 - Bug in :func:`concat` where the resulting indices are not copied when ``copy=True`` (:issue:`29879`)
+- :meth:`Series.append` will now raise a ``TypeError`` when passed a DataFrame or a sequence containing Dataframe (:issue:`31413`)
 - :meth:`DataFrame.replace` and :meth:`Series.replace` will raise a ``TypeError`` if ``to_replace`` is not an expected type. Previously the ``replace`` would fail silently (:issue:`18634`)
 
 
@@ -349,7 +350,6 @@ Other
   instead of ``TypeError: Can only append a Series if ignore_index=True or if the Series has a name`` (:issue:`30871`)
 - Set operations on an object-dtype :class:`Index` now always return object-dtype results (:issue:`31401`)
 - Bug in :meth:`AbstractHolidayCalendar.holidays` when no rules were defined (:issue:`31415`)
--
 
 .. ---------------------------------------------------------------------------
 
diff --git a/pandas/core/series.py b/pandas/core/series.py
index d565cbbdd5344..9e67393df3370 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -2535,6 +2535,12 @@ def append(self, to_append, ignore_index=False, verify_integrity=False):
             to_concat.extend(to_append)
         else:
             to_concat = [self, to_append]
+        if any(isinstance(x, (ABCDataFrame,)) for x in to_concat[1:]):
+            msg = (
+                f"to_append should be a Series or list/tuple of Series, "
+                f"got DataFrame"
+            )
+            raise TypeError(msg)
         return concat(
             to_concat, ignore_index=ignore_index, verify_integrity=verify_integrity
         )
diff --git a/pandas/tests/series/methods/test_append.py b/pandas/tests/series/methods/test_append.py
index 4742d6ae3544f..158c759fdaef3 100644
--- a/pandas/tests/series/methods/test_append.py
+++ b/pandas/tests/series/methods/test_append.py
@@ -61,15 +61,15 @@ def test_append_tuples(self):
 
         tm.assert_series_equal(expected, result)
 
-    def test_append_dataframe_regression(self):
-        # GH 30975
-        df = pd.DataFrame({"A": [1, 2]})
-        result = df.A.append([df])
-        expected = pd.DataFrame(
-            {0: [1.0, 2.0, None, None], "A": [None, None, 1.0, 2.0]}, index=[0, 1, 0, 1]
-        )
-
-        tm.assert_frame_equal(expected, result)
+    def test_append_dataframe_raises(self):
+        # GH 31413
+        df = pd.DataFrame({"A": [1, 2], "B": [3, 4]})
+
+        msg = "to_append should be a Series or list/tuple of Series, got DataFrame"
+        with pytest.raises(TypeError, match=msg):
+            df.A.append(df)
+        with pytest.raises(TypeError, match=msg):
+            df.A.append([df])
 
 
 class TestSeriesAppendWithDatetimeIndex:
