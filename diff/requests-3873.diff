diff --git a/requests/utils.py b/requests/utils.py
index e5ecd350e9..6365034ca5 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -92,14 +92,16 @@ def super_len(o):
         else:
             if hasattr(o, 'seek') and total_length is None:
                 # StringIO and BytesIO have seek but no useable fileno
-
-                # seek to end of file
-                o.seek(0, 2)
-                total_length = o.tell()
-
-                # seek back to current position to support
-                # partially read file-like objects
-                o.seek(current_position or 0)
+                try:
+                    # seek to end of file
+                    o.seek(0, 2)
+                    total_length = o.tell()
+
+                    # seek back to current position to support
+                    # partially read file-like objects
+                    o.seek(current_position or 0)
+                except (OSError, IOError):
+                    total_length = 0
 
     if total_length is None:
         total_length = 0
diff --git a/tests/test_requests.py b/tests/test_requests.py
index cd4c68db59..26d4951ee7 100755
--- a/tests/test_requests.py
+++ b/tests/test_requests.py
@@ -1546,7 +1546,7 @@ def __init__(self, data):
             def tell(self):
                 return 0
 
-            def seek(self, pos):
+            def seek(self, pos, whence=0):
                 raise OSError()
 
             def __iter__(self):
