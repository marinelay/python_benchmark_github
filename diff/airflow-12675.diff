diff --git a/airflow/models/taskinstance.py b/airflow/models/taskinstance.py
index 2059542b9476b..c445df843a9ea 100644
--- a/airflow/models/taskinstance.py
+++ b/airflow/models/taskinstance.py
@@ -633,10 +633,10 @@ def set_state(self, state: str, session=None):
         current_time = timezone.utcnow()
         self.log.debug("Setting task state for %s to %s", self, state)
         self.state = state
-        self.start_date = current_time
-        if self.state in State.finished:
-            self.end_date = current_time
-            self.duration = 0
+        self.start_date = self.start_date or current_time
+        if self.state in State.finished or self.state == State.UP_FOR_RETRY:
+            self.end_date = self.end_date or current_time
+            self.duration = (self.end_date - self.start_date).total_seconds()
         session.merge(self)
 
     @property
diff --git a/tests/models/test_taskinstance.py b/tests/models/test_taskinstance.py
index a3aa4459d6cbf..d4c5468d1a0cd 100644
--- a/tests/models/test_taskinstance.py
+++ b/tests/models/test_taskinstance.py
@@ -1977,6 +1977,20 @@ def test_fast_follow(
                 task_instance_b.run()
                 self.validate_ti_states(dag_run, second_run_state, error_message)
 
+    def test_set_state_up_for_retry(self):
+        dag = DAG('dag', start_date=DEFAULT_DATE)
+        op1 = DummyOperator(task_id='op_1', owner='test', dag=dag)
+
+        ti = TI(task=op1, execution_date=timezone.utcnow(), state=State.RUNNING)
+        start_date = timezone.utcnow()
+        ti.start_date = start_date
+
+        ti.set_state(State.UP_FOR_RETRY)
+        assert ti.state == State.UP_FOR_RETRY
+        assert ti.start_date == start_date, "Start date should have been left alone"
+        assert ti.start_date < ti.end_date
+        assert ti.duration > 0
+
 
 @pytest.mark.parametrize("pool_override", [None, "test_pool2"])
 def test_refresh_from_task(pool_override):
