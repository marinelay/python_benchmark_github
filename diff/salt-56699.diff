diff --git a/salt/modules/chocolatey.py b/salt/modules/chocolatey.py
index 04fcf1120d850..4d6f0780def71 100644
--- a/salt/modules/chocolatey.py
+++ b/salt/modules/chocolatey.py
@@ -16,12 +16,12 @@
 # Import salt libs
 import salt.utils.data
 import salt.utils.platform
-from requests.structures import CaseInsensitiveDict
 from salt.exceptions import (
     CommandExecutionError,
     CommandNotFoundError,
     SaltInvocationError,
 )
+from salt.utils.data import CaseInsensitiveDict
 from salt.utils.versions import LooseVersion as _LooseVersion
 
 log = logging.getLogger(__name__)
diff --git a/tests/integration/modules/test_chocolatey.py b/tests/integration/modules/test_chocolatey.py
new file mode 100644
index 0000000000000..517c22cfe8204
--- /dev/null
+++ b/tests/integration/modules/test_chocolatey.py
@@ -0,0 +1,33 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+import pytest
+import salt.modules.chocolatey as choco
+import salt.utils.platform
+from tests.support.case import ModuleCase
+from tests.support.helpers import destructiveTest
+from tests.support.unit import skipIf
+
+
+@skipIf(not salt.utils.platform.is_windows(), "Tests for only Windows")
+@pytest.mark.windows_whitelisted
+class ChocolateyModuleTest(ModuleCase):
+    """
+    Validate Chocolatey module
+    """
+
+    @destructiveTest
+    def setUp(self):
+        """
+        Ensure that Chocolatey is installed
+        """
+        self._chocolatey_bin = choco._find_chocolatey()
+        if "ERROR" in self._chocolatey_bin:
+            #    self.fail("Chocolatey is not installed")
+            self.run_function("chocolatey.bootstrap")
+        super(ChocolateyModuleTest, self).setUp()
+
+    def test_list_(self):
+        ret = self.run_function("chocolatey.list", narrow="adobereader", exact=True)
+        self.assertTrue("adobereader" in ret)
